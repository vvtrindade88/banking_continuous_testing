<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210327 01:24:35.102" rpa="false">
<suite id="s1" name="Pix-Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio">
<suite id="s1-s1-s1" name="Cancelar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Cancelar Pagamento PIX.robot">
<test id="s1-s1-s1-t1" name="Cenário: Cancelar pagamento PIX">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 01:24:35.687" level="INFO">${phone} = 65454155</msg>
<status status="PASS" starttime="20210327 01:24:35.687" endtime="20210327 01:24:35.687"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 01:24:35.687" level="INFO">${phone_pix} = +5521965454155</msg>
<status status="PASS" starttime="20210327 01:24:35.687" endtime="20210327 01:24:35.687"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 01:24:35.688" level="INFO">${phone_pix} = +5521965454155</msg>
<status status="PASS" starttime="20210327 01:24:35.688" endtime="20210327 01:24:35.688"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 01:24:35.688" level="INFO">${email_pix} = marianamartins@hotmail.com</msg>
<status status="PASS" starttime="20210327 01:24:35.688" endtime="20210327 01:24:35.688"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 01:24:35.689" level="INFO">${email_pix} = marianamartins@hotmail.com</msg>
<status status="PASS" starttime="20210327 01:24:35.688" endtime="20210327 01:24:35.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:35.690" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:35.690" endtime="20210327 01:24:35.690"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:35.690" endtime="20210327 01:24:35.690"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:24:35.691" level="INFO">${national_registration} = 852.673.941-73</msg>
<status status="PASS" starttime="20210327 01:24:35.691" endtime="20210327 01:24:35.691"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:24:35.691" level="INFO">${national_registration} = 852673941-73</msg>
<status status="PASS" starttime="20210327 01:24:35.691" endtime="20210327 01:24:35.691"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:24:35.692" level="INFO">${national_registration} = 85267394173</msg>
<status status="PASS" starttime="20210327 01:24:35.691" endtime="20210327 01:24:35.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 01:24:35.692" level="INFO">${national_registration} = 85267394173</msg>
<status status="PASS" starttime="20210327 01:24:35.692" endtime="20210327 01:24:35.692"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 01:24:35.692" level="INFO">${identity_card} = 360548210</msg>
<status status="PASS" starttime="20210327 01:24:35.692" endtime="20210327 01:24:35.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 01:24:35.693" level="INFO">${identity_card} = 360548210</msg>
<status status="PASS" starttime="20210327 01:24:35.693" endtime="20210327 01:24:35.693"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:35.694" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:35.694" endtime="20210327 01:24:35.694"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:35.694" endtime="20210327 01:24:35.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:35.695" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 01:24:35.695" endtime="20210327 01:24:35.695"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:24:35.695" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:24:35.695" endtime="20210327 01:24:35.696"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:35.696" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:35.696" endtime="20210327 01:24:35.696"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:35.697" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85267394173", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 01:24:35.696" endtime="20210327 01:24:35.697"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:35.697" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85267394173", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "360548210", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 01:24:36.414" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:35.697" endtime="20210327 01:24:36.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.416" level="INFO">{'id': 'afb4ddd17a12446a8d10e0739ed11e34', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T01:24:36.616624', 'updated_at': '2021-03-27T01:24:36.616627', 'type': 'individual', 'national_registration': '85267394173', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '360548210', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:36.415" endtime="20210327 01:24:36.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.416" level="INFO">51f69c1314916b00</msg>
<status status="PASS" starttime="20210327 01:24:36.416" endtime="20210327 01:24:36.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.417" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85267394173", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "360548210", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 01:24:36.416" endtime="20210327 01:24:36.417"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.417" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:36.417" endtime="20210327 01:24:36.417"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:36.418" level="INFO">${holder_external_key} = afb4ddd17a12446a8d10e0739ed11e34</msg>
<status status="PASS" starttime="20210327 01:24:36.417" endtime="20210327 01:24:36.418"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.418" level="INFO">${holder_external_key} = afb4ddd17a12446a8d10e0739ed11e34</msg>
<status status="PASS" starttime="20210327 01:24:36.418" endtime="20210327 01:24:36.418"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:35.693" endtime="20210327 01:24:36.418"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.419" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:24:36.419" endtime="20210327 01:24:36.419"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:36.420" endtime="20210327 01:24:36.420"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:36.419" endtime="20210327 01:24:36.420"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:36.421" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:36.421" endtime="20210327 01:24:36.421"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:36.422" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 01:24:36.421" endtime="20210327 01:24:36.422"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:36.422" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 01:24:36.674" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:36.422" endtime="20210327 01:24:36.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.674" level="INFO">{'id': '89ae9a6771a6424b8b989140b3a1a841', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/phones/89ae9a6771a6424b8b989140b3a1a841', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:36.674" endtime="20210327 01:24:36.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.676" level="INFO">4fc095736db798c5</msg>
<status status="PASS" starttime="20210327 01:24:36.676" endtime="20210327 01:24:36.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.677" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:36.676" endtime="20210327 01:24:36.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:36.677" level="INFO">${phone_external_key} = 89ae9a6771a6424b8b989140b3a1a841</msg>
<status status="PASS" starttime="20210327 01:24:36.677" endtime="20210327 01:24:36.677"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.678" level="INFO">${phone_external_key} = 89ae9a6771a6424b8b989140b3a1a841</msg>
<status status="PASS" starttime="20210327 01:24:36.678" endtime="20210327 01:24:36.678"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:36.421" endtime="20210327 01:24:36.678"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:36.679" endtime="20210327 01:24:36.679"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:36.678" endtime="20210327 01:24:36.679"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:36.680" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:36.680" endtime="20210327 01:24:36.680"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:36.681" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 01:24:36.680" endtime="20210327 01:24:36.681"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:36.681" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 01:24:36.955" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:36.681" endtime="20210327 01:24:36.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.956" level="INFO">{'id': '3b3113b1a75b47c6a3601ed59dc2046a', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/addresses/3b3113b1a75b47c6a3601ed59dc2046a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:36.956" endtime="20210327 01:24:36.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.956" level="INFO">4d311e9b1c3fcd81</msg>
<status status="PASS" starttime="20210327 01:24:36.956" endtime="20210327 01:24:36.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.957" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:36.957" endtime="20210327 01:24:36.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:36.958" level="INFO">${address_external_key} = 3b3113b1a75b47c6a3601ed59dc2046a</msg>
<status status="PASS" starttime="20210327 01:24:36.957" endtime="20210327 01:24:36.958"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.958" level="INFO">${address_external_key} = 3b3113b1a75b47c6a3601ed59dc2046a</msg>
<status status="PASS" starttime="20210327 01:24:36.958" endtime="20210327 01:24:36.958"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:36.679" endtime="20210327 01:24:36.958"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:36.959" endtime="20210327 01:24:36.959"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:36.958" endtime="20210327 01:24:36.959"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:36.960" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 01:24:36.960" endtime="20210327 01:24:36.960"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:36.961" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:24:36.960" endtime="20210327 01:24:36.961"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:24:36.961" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:24:36.962" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:24:36.961" endtime="20210327 01:24:36.962"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:36.963" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:24:37.308" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:36.962" endtime="20210327 01:24:37.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.311" level="INFO">{'id': '30b597485eb94ea094ed0d0a56dcb30e', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents/30b597485eb94ea094ed0d0a56dcb30e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents/30b597485eb94ea094ed0d0a56dcb30e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:37.309" endtime="20210327 01:24:37.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.313" level="INFO">d43acca5209ed461</msg>
<status status="PASS" starttime="20210327 01:24:37.312" endtime="20210327 01:24:37.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.314" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:37.313" endtime="20210327 01:24:37.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:37.317" level="INFO">${document_external_key} = 30b597485eb94ea094ed0d0a56dcb30e</msg>
<status status="PASS" starttime="20210327 01:24:37.316" endtime="20210327 01:24:37.317"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.318" level="INFO">${document_external_key} = 30b597485eb94ea094ed0d0a56dcb30e</msg>
<status status="PASS" starttime="20210327 01:24:37.317" endtime="20210327 01:24:37.318"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:36.960" endtime="20210327 01:24:37.319"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:37.320" endtime="20210327 01:24:37.321"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:37.319" endtime="20210327 01:24:37.321"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.323" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 01:24:37.323" endtime="20210327 01:24:37.324"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:37.324" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:24:37.324" endtime="20210327 01:24:37.324"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:24:37.325" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:24:37.326" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:24:37.324" endtime="20210327 01:24:37.326"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:37.326" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:24:37.616" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:37.326" endtime="20210327 01:24:37.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.618" level="INFO">{'id': '21d3ff949acd4fd8a66194df21d88050', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents/21d3ff949acd4fd8a66194df21d88050', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents/21d3ff949acd4fd8a66194df21d88050/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:37.617" endtime="20210327 01:24:37.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.619" level="INFO">b3279570522e0c89</msg>
<status status="PASS" starttime="20210327 01:24:37.618" endtime="20210327 01:24:37.619"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.621" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:37.620" endtime="20210327 01:24:37.621"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:37.623" level="INFO">${document_external_key} = 21d3ff949acd4fd8a66194df21d88050</msg>
<status status="PASS" starttime="20210327 01:24:37.622" endtime="20210327 01:24:37.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.624" level="INFO">${document_external_key} = 21d3ff949acd4fd8a66194df21d88050</msg>
<status status="PASS" starttime="20210327 01:24:37.623" endtime="20210327 01:24:37.624"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:37.322" endtime="20210327 01:24:37.625"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:37.626" endtime="20210327 01:24:37.627"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:37.625" endtime="20210327 01:24:37.627"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.628" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 01:24:37.628" endtime="20210327 01:24:37.628"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:37.628" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:24:37.628" endtime="20210327 01:24:37.628"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:24:37.629" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:24:37.630" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:24:37.629" endtime="20210327 01:24:37.630"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:37.631" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:24:37.928" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:37.630" endtime="20210327 01:24:37.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.928" level="INFO">{'id': '1fed84fa491f4b6486e4d3224657455c', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents/1fed84fa491f4b6486e4d3224657455c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/documents/1fed84fa491f4b6486e4d3224657455c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:37.928" endtime="20210327 01:24:37.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.929" level="INFO">83a2dc2548e4f93b</msg>
<status status="PASS" starttime="20210327 01:24:37.929" endtime="20210327 01:24:37.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.930" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:37.929" endtime="20210327 01:24:37.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:37.930" level="INFO">${document_external_key} = 1fed84fa491f4b6486e4d3224657455c</msg>
<status status="PASS" starttime="20210327 01:24:37.930" endtime="20210327 01:24:37.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:37.931" level="INFO">${document_external_key} = 1fed84fa491f4b6486e4d3224657455c</msg>
<status status="PASS" starttime="20210327 01:24:37.931" endtime="20210327 01:24:37.931"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:37.628" endtime="20210327 01:24:37.931"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:37.932" endtime="20210327 01:24:37.932"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:37.931" endtime="20210327 01:24:37.933"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:37.933" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:37.933" endtime="20210327 01:24:37.933"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:37.934" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:38.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:37.934" endtime="20210327 01:24:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:38.230" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 01:24:38.230" endtime="20210327 01:24:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:38.231" level="INFO">b8a5fa2cff655812</msg>
<status status="PASS" starttime="20210327 01:24:38.230" endtime="20210327 01:24:38.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:38.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:38.231" endtime="20210327 01:24:38.231"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:37.933" endtime="20210327 01:24:38.231"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:38.232" endtime="20210327 01:24:38.232"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:38.231" endtime="20210327 01:24:38.232"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 01:24:38.233" level="INFO">${assessment_id} = d11d510b-3a09-48e7-8fca-467a58d540cf</msg>
<status status="PASS" starttime="20210327 01:24:38.233" endtime="20210327 01:24:38.233"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 01:24:38.234" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 01:24:38.233" endtime="20210327 01:24:38.234"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 01:24:38.234" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 01:24:38.234" endtime="20210327 01:24:38.234"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 01:24:38.235" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 01:24:38.234" endtime="20210327 01:24:38.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:38.235" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:38.235" endtime="20210327 01:24:38.235"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:38.236" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 01:24:38.235" endtime="20210327 01:24:38.236"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:38.237" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/afb4ddd17a12446a8d10e0739ed11e34/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "afb4ddd17a12446a8d10e0739ed11e34", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "d11d510b-3a09-48e7-8fca-467a58d540cf" } } 
json=None</msg>
<msg timestamp="20210327 01:24:38.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:38.236" endtime="20210327 01:24:38.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:38.458" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 01:24:38.457" endtime="20210327 01:24:38.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:38.461" level="INFO">7ec445cebd168619</msg>
<status status="PASS" starttime="20210327 01:24:38.460" endtime="20210327 01:24:38.461"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:38.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:38.462" endtime="20210327 01:24:38.464"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 01:24:38.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:38.465" endtime="20210327 01:24:38.466"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:38.233" endtime="20210327 01:24:38.466"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:38.468" endtime="20210327 01:24:38.470"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:38.467" endtime="20210327 01:24:38.470"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:38.472" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:38.472" endtime="20210327 01:24:38.472"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:38.471" endtime="20210327 01:24:38.473"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:38.473" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/afb4ddd17a12446a8d10e0739ed11e34/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:39.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:38.473" endtime="20210327 01:24:39.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.113" level="INFO">{'items': [{'id': '82b4e8ad20a94bf780d8b9c2375d782b', 'holder': 'afb4ddd17a12446a8d10e0739ed11e34', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6559227830', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:24:38.681783', 'updated_at': '2021-03-27T04:24:38.681783', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/82b4e8ad20a94bf780d8b9c2375d782b', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 01:24:39.112" endtime="20210327 01:24:39.113"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:39.113" endtime="20210327 01:24:39.113"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:39.114" level="INFO">${account_external_key} = 82b4e8ad20a94bf780d8b9c2375d782b</msg>
<status status="PASS" starttime="20210327 01:24:39.113" endtime="20210327 01:24:39.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.114" level="INFO">${account_external_key} = 82b4e8ad20a94bf780d8b9c2375d782b</msg>
<status status="PASS" starttime="20210327 01:24:39.114" endtime="20210327 01:24:39.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 01:24:39.115" level="INFO">${account_number} = 6559227830</msg>
<status status="PASS" starttime="20210327 01:24:39.115" endtime="20210327 01:24:39.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.115" level="INFO">${account_number} = 6559227830</msg>
<status status="PASS" starttime="20210327 01:24:39.115" endtime="20210327 01:24:39.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 01:24:39.116" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:24:39.116" endtime="20210327 01:24:39.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.116" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:24:39.116" endtime="20210327 01:24:39.116"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:38.470" endtime="20210327 01:24:39.117"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:39.117" endtime="20210327 01:24:39.117"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.117" endtime="20210327 01:24:39.117"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:35.689" endtime="20210327 01:24:39.118"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:35.689" endtime="20210327 01:24:39.118"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 01:24:39.118" level="INFO">${uuid} = daa26c65-a29a-479b-8854-da4c618a5129</msg>
<status status="PASS" starttime="20210327 01:24:39.118" endtime="20210327 01:24:39.118"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:39.119" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:39.119" endtime="20210327 01:24:39.119"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.118" endtime="20210327 01:24:39.119"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:39.120" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:39.119" endtime="20210327 01:24:39.120"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:39.120" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "daa26c65-a29a-479b-8854-da4c618a5129", "transaction_id": "daa26c65-a29a-479b-8854-da4c618a5129", "id": "daa26c65-a29a-479b-8854-da4c...</msg>
<status status="PASS" starttime="20210327 01:24:39.120" endtime="20210327 01:24:39.120"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:39.121" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/daa26c65-a29a-479b-8854-da4c618a5129, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "daa26c65-a29a-479b-8854-da4c618a5129", "transaction_id": "daa26c65-a29a-479b-8854-da4c618a5129", "id": "daa26c65-a29a-479b-8854-da4c618a5129", "id_checking_account": "82b4e8ad20a94bf780d8b9c2375d782b", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "daa26c65-a29a-479b-8854-da4c618a5129", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 01:24:39.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:39.120" endtime="20210327 01:24:39.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:39.803" endtime="20210327 01:24:39.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:39.806" endtime="20210327 01:24:39.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:39.808" endtime="20210327 01:24:39.809"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.118" endtime="20210327 01:24:39.810"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:39.811" endtime="20210327 01:24:39.813"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.810" endtime="20210327 01:24:39.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:39.817" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:39.816" endtime="20210327 01:24:39.818"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.816" endtime="20210327 01:24:39.818"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.819" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 01:24:39.819" endtime="20210327 01:24:39.819"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 01:24:39.820" level="INFO">${value} = marianamartins@hotmail.com</msg>
<status status="PASS" starttime="20210327 01:24:39.820" endtime="20210327 01:24:39.820"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:39.821" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:39.821" endtime="20210327 01:24:39.821"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:39.821" level="INFO">${body} = { "type": "email", "value": "marianamartins@hotmail.com" }</msg>
<status status="PASS" starttime="20210327 01:24:39.821" endtime="20210327 01:24:39.821"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:39.822" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/afb4ddd17a12446a8d10e0739ed11e34/accounts/82b4e8ad20a94bf780d8b9c2375d782b/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "marianamartins@hotmail.com" } 
json=None</msg>
<msg timestamp="20210327 01:24:40.553" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:39.822" endtime="20210327 01:24:40.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:40.556" level="INFO">{'id': '428c2e3424c14abba6285c3990b83fd7', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T01:24:40.789', 'updated_at': '2021-03-27T01:24:40.789', 'key': {'value': 'marianamartins@hotmail.com', 'type': 'email'}, 'account': {'id': '82b4e8ad20a94bf780d8b9c2375d782b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'afb4ddd17a12446a8d10e0739ed11e34', 'owner': {'name': 'Holder de teste', 'national_registration': '85267394173', 'type': 'individual'}, 'routing_number': '001', 'number': '6559227830', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:24:40.555" endtime="20210327 01:24:40.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:40.558" level="INFO">983381e50ea0854f</msg>
<status status="PASS" starttime="20210327 01:24:40.557" endtime="20210327 01:24:40.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:40.559" level="INFO">202</msg>
<status status="PASS" starttime="20210327 01:24:40.559" endtime="20210327 01:24:40.560"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:40.561" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:40.560" endtime="20210327 01:24:40.561"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:40.563" endtime="20210327 01:24:40.564"></status>
</kw>
<msg timestamp="20210327 01:24:40.564" level="INFO">${entry_external_key} = 428c2e3424c14abba6285c3990b83fd7</msg>
<status status="PASS" starttime="20210327 01:24:40.562" endtime="20210327 01:24:40.565"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:40.566" level="INFO">${entry_external_key} = 428c2e3424c14abba6285c3990b83fd7</msg>
<status status="PASS" starttime="20210327 01:24:40.565" endtime="20210327 01:24:40.566"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:40.567" endtime="20210327 01:24:40.568"></status>
</kw>
<msg timestamp="20210327 01:24:40.568" level="INFO">${entry_key_value} = marianamartins@hotmail.com</msg>
<status status="PASS" starttime="20210327 01:24:40.566" endtime="20210327 01:24:40.568"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 01:24:40.569" level="INFO">${entry_key_value} = marianamartins@hotmail.com</msg>
<status status="PASS" starttime="20210327 01:24:40.569" endtime="20210327 01:24:40.569"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.815" endtime="20210327 01:24:40.569"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:39.813" endtime="20210327 01:24:40.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:40.572" endtime="20210327 01:24:40.573"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:40.571" endtime="20210327 01:24:40.573"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:40.570" endtime="20210327 01:24:40.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:40.577" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:40.576" endtime="20210327 01:24:40.578"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:40.576" endtime="20210327 01:24:40.578"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:40.579" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/afb4ddd17a12446a8d10e0739ed11e34/accounts/82b4e8ad20a94bf780d8b9c2375d782b/entries/428c2e3424c14abba6285c3990b83fd7/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:41.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:40.578" endtime="20210327 01:24:41.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:41.218" level="INFO">{'code': '7630'}</msg>
<status status="PASS" starttime="20210327 01:24:41.217" endtime="20210327 01:24:41.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:41.220" level="INFO">737ad25f17d03ad0</msg>
<status status="PASS" starttime="20210327 01:24:41.220" endtime="20210327 01:24:41.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:41.223" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:24:41.222" endtime="20210327 01:24:41.223"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:41.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:41.224" endtime="20210327 01:24:41.226"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 01:24:41.228" level="INFO">${verification_code} = 7630</msg>
<status status="PASS" starttime="20210327 01:24:41.226" endtime="20210327 01:24:41.228"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:41.230" level="INFO">${verification_code} = 7630</msg>
<status status="PASS" starttime="20210327 01:24:41.229" endtime="20210327 01:24:41.230"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:40.575" endtime="20210327 01:24:41.230"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:40.574" endtime="20210327 01:24:41.232"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:41.232" endtime="20210327 01:24:41.235"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:41.232" endtime="20210327 01:24:41.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:41.239" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:41.238" endtime="20210327 01:24:41.239"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:41.237" endtime="20210327 01:24:41.239"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:41.240" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:41.240" endtime="20210327 01:24:41.240"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:41.241" level="INFO">${body} = { "code": "7630" }</msg>
<status status="PASS" starttime="20210327 01:24:41.241" endtime="20210327 01:24:41.241"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:41.243" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/afb4ddd17a12446a8d10e0739ed11e34/accounts/82b4e8ad20a94bf780d8b9c2375d782b/entries/428c2e3424c14abba6285c3990b83fd7/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "7630" } 
json=None</msg>
<msg timestamp="20210327 01:24:43.170" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:41.241" endtime="20210327 01:24:43.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.170" level="INFO">{'id': '428c2e3424c14abba6285c3990b83fd7', 'status': 'active', 'created_at': '2021-03-27T01:24:40.789', 'updated_at': '2021-03-27T01:24:43.434', 'key': {'value': 'marianamartins@hotmail.com', 'type': 'email'}, 'account': {'id': '82b4e8ad20a94bf780d8b9c2375d782b', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'afb4ddd17a12446a8d10e0739ed11e34', 'owner': {'name': 'Holder de teste', 'national_registration': '85267394173', 'type': 'individual'}, 'routing_number': '001', 'number': '6559227830', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:24:43.170" endtime="20210327 01:24:43.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.171" level="INFO">ffaf5455eec1b818</msg>
<status status="PASS" starttime="20210327 01:24:43.171" endtime="20210327 01:24:43.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.171" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:24:43.171" endtime="20210327 01:24:43.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.172" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:43.172" endtime="20210327 01:24:43.172"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:41.236" endtime="20210327 01:24:43.172"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:41.235" endtime="20210327 01:24:43.172"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.173" endtime="20210327 01:24:43.173"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.172" endtime="20210327 01:24:43.173"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:35.686" endtime="20210327 01:24:43.173"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:43.175" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:43.175" endtime="20210327 01:24:43.175"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.174" endtime="20210327 01:24:43.175"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:43.176" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:43.175" endtime="20210327 01:24:43.176"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:43.176" level="INFO">${body} = { "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210327 01:24:43.176" endtime="20210327 01:24:43.177"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:43.177" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/afb4ddd17a12446a8d10e0739ed11e34/accounts/82b4e8ad20a94bf780d8b9c2375d782b/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210327 01:24:43.920" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:43.177" endtime="20210327 01:24:43.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.922" level="INFO">{'id': '577d44a58f764efcb63fdf2d219e658c', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E1946824220210327042444445260a66', 'message_id': 'M19468242563afb16fa946eaaf74446b', 'amount': 290, 'created_at': '2021-03-27T01:24:44.101447', 'description': 'Envio de PIX', 'debtor': {'national_registration': '85267394173', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': 'afb4ddd17a12446a8d10e0739ed11e34', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '82b4e8ad20a94bf780d8b9c2375d782b', 'number': '6559227830', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 01:24:43.921" endtime="20210327 01:24:43.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.922" level="INFO">fd367db44eab5585</msg>
<status status="PASS" starttime="20210327 01:24:43.922" endtime="20210327 01:24:43.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.923" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:24:43.923" endtime="20210327 01:24:43.923"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.923" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:43.923" endtime="20210327 01:24:43.923"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:43.924" level="INFO">${payment_external_key} = 577d44a58f764efcb63fdf2d219e658c</msg>
<status status="PASS" starttime="20210327 01:24:43.923" endtime="20210327 01:24:43.924"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.925" level="INFO">${payment_external_key} = 577d44a58f764efcb63fdf2d219e658c</msg>
<status status="PASS" starttime="20210327 01:24:43.924" endtime="20210327 01:24:43.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 01:24:43.925" level="INFO">${end_to_end_id} = E1946824220210327042444445260a66</msg>
<status status="PASS" starttime="20210327 01:24:43.925" endtime="20210327 01:24:43.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.926" level="INFO">${end_to_end_id} = E1946824220210327042444445260a66</msg>
<status status="PASS" starttime="20210327 01:24:43.926" endtime="20210327 01:24:43.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 01:24:43.927" level="INFO">${message_id} = M19468242563afb16fa946eaaf74446b</msg>
<status status="PASS" starttime="20210327 01:24:43.926" endtime="20210327 01:24:43.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.927" level="INFO">${message_id} = M19468242563afb16fa946eaaf74446b</msg>
<status status="PASS" starttime="20210327 01:24:43.927" endtime="20210327 01:24:43.927"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.174" endtime="20210327 01:24:43.927"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:43.930" level="INFO">${date} = 2021-03-27 01:24:43.930371</msg>
<status status="PASS" starttime="20210327 01:24:43.930" endtime="20210327 01:24:43.930"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:43.931" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:24:43.930" endtime="20210327 01:24:43.931"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.931" endtime="20210327 01:24:43.932"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.931" endtime="20210327 01:24:43.932"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.932" endtime="20210327 01:24:43.933"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.933" endtime="20210327 01:24:43.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.934" endtime="20210327 01:24:43.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.934" endtime="20210327 01:24:43.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:24:43.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:43.935" endtime="20210327 01:24:43.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.936" endtime="20210327 01:24:43.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.937" endtime="20210327 01:24:43.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.937" endtime="20210327 01:24:43.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.938" endtime="20210327 01:24:43.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.938" endtime="20210327 01:24:43.939"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.939" endtime="20210327 01:24:43.939"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.939" endtime="20210327 01:24:43.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.940" endtime="20210327 01:24:43.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.940" endtime="20210327 01:24:43.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.941" endtime="20210327 01:24:43.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.941" endtime="20210327 01:24:43.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.942" endtime="20210327 01:24:43.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.942" endtime="20210327 01:24:43.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.943" endtime="20210327 01:24:43.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.943" endtime="20210327 01:24:43.943"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.944" endtime="20210327 01:24:43.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.944" endtime="20210327 01:24:43.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:43.945" endtime="20210327 01:24:43.945"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.928" endtime="20210327 01:24:43.945"></status>
</kw>
<kw name="cancelar pagamento pix" library="pix_payments_cancel_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:43.947" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:43.946" endtime="20210327 01:24:43.947"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.946" endtime="20210327 01:24:43.947"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:43.948" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:43.947" endtime="20210327 01:24:43.948"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/cancel</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:43.949" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/afb4ddd17a12446a8d10e0739ed11e34/accounts/82b4e8ad20a94bf780d8b9c2375d782b/payments/577d44a58f764efcb63fdf2d219e658c/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:44.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:43.949" endtime="20210327 01:24:44.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.613" level="INFO">{'id': '577d44a58f764efcb63fdf2d219e658c', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'canceled', 'end_to_end_id': 'E1946824220210327042444445260a66', 'amount': 290, 'description': 'Envio de PIX', 'debtor': {'national_registration': '85267394173', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': 'afb4ddd17a12446a8d10e0739ed11e34', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '82b4e8ad20a94bf780d8b9c2375d782b', 'number': '6559227830', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210327 01:24:44.612" endtime="20210327 01:24:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.615" level="INFO">5e33aea555fe4a5e</msg>
<status status="PASS" starttime="20210327 01:24:44.614" endtime="20210327 01:24:44.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.618" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:24:44.617" endtime="20210327 01:24:44.618"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:44.619" endtime="20210327 01:24:44.620"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:43.946" endtime="20210327 01:24:44.620"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=200</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=canceled</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:44.623" level="INFO">${date} = 2021-03-27 01:24:44.622908</msg>
<status status="PASS" starttime="20210327 01:24:44.623" endtime="20210327 01:24:44.623"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:44.623" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:24:44.623" endtime="20210327 01:24:44.623"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.624" endtime="20210327 01:24:44.624"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.623" endtime="20210327 01:24:44.624"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.624" endtime="20210327 01:24:44.625"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.625" endtime="20210327 01:24:44.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.625" endtime="20210327 01:24:44.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.627" endtime="20210327 01:24:44.627"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.626" endtime="20210327 01:24:44.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:44.627" endtime="20210327 01:24:44.628"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.628" endtime="20210327 01:24:44.628"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.628" endtime="20210327 01:24:44.629"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.629" endtime="20210327 01:24:44.629"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.629" endtime="20210327 01:24:44.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.630" endtime="20210327 01:24:44.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.630" endtime="20210327 01:24:44.631"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.631" endtime="20210327 01:24:44.631"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.631" endtime="20210327 01:24:44.632"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.632" endtime="20210327 01:24:44.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.633" endtime="20210327 01:24:44.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.633" endtime="20210327 01:24:44.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.634" endtime="20210327 01:24:44.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.634" endtime="20210327 01:24:44.635"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.635" endtime="20210327 01:24:44.635"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.635" endtime="20210327 01:24:44.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.636" endtime="20210327 01:24:44.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.636" endtime="20210327 01:24:44.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:44.637" endtime="20210327 01:24:44.637"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.621" endtime="20210327 01:24:44.637"></status>
</kw>
<doc>Cancelamento de pagament PIX, efetuado antes da confirmação do pagamento</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 01:24:35.686" endtime="20210327 01:24:44.638" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Envio de Pagamento PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar o pagamento de um envio de PIX</doc>
<status status="PASS" starttime="20210327 01:24:35.127" endtime="20210327 01:24:44.639"></status>
</suite>
<suite id="s1-s1-s2" name="Confirmar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Confirmar Pagamento PIX.robot">
<test id="s1-s1-s2-t1" name="Cenário: Confirmar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 01:24:44.705" level="INFO">${phone} = 71172815</msg>
<status status="PASS" starttime="20210327 01:24:44.705" endtime="20210327 01:24:44.705"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 01:24:44.706" level="INFO">${phone_pix} = +5521971172815</msg>
<status status="PASS" starttime="20210327 01:24:44.706" endtime="20210327 01:24:44.706"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.706" level="INFO">${phone_pix} = +5521971172815</msg>
<status status="PASS" starttime="20210327 01:24:44.706" endtime="20210327 01:24:44.706"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 01:24:44.707" level="INFO">${email_pix} = isabelly19@bol.com.br</msg>
<status status="PASS" starttime="20210327 01:24:44.707" endtime="20210327 01:24:44.707"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.707" level="INFO">${email_pix} = isabelly19@bol.com.br</msg>
<status status="PASS" starttime="20210327 01:24:44.707" endtime="20210327 01:24:44.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:44.709" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:44.709" endtime="20210327 01:24:44.709"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.708" endtime="20210327 01:24:44.709"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:24:44.709" level="INFO">${national_registration} = 483.127.596-46</msg>
<status status="PASS" starttime="20210327 01:24:44.709" endtime="20210327 01:24:44.710"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:24:44.710" level="INFO">${national_registration} = 483127596-46</msg>
<status status="PASS" starttime="20210327 01:24:44.710" endtime="20210327 01:24:44.710"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:24:44.710" level="INFO">${national_registration} = 48312759646</msg>
<status status="PASS" starttime="20210327 01:24:44.710" endtime="20210327 01:24:44.710"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.711" level="INFO">${national_registration} = 48312759646</msg>
<status status="PASS" starttime="20210327 01:24:44.711" endtime="20210327 01:24:44.711"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 01:24:44.711" level="INFO">${identity_card} = 653470812</msg>
<status status="PASS" starttime="20210327 01:24:44.711" endtime="20210327 01:24:44.711"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.712" level="INFO">${identity_card} = 653470812</msg>
<status status="PASS" starttime="20210327 01:24:44.711" endtime="20210327 01:24:44.712"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:44.713" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:44.713" endtime="20210327 01:24:44.713"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.712" endtime="20210327 01:24:44.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.714" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 01:24:44.713" endtime="20210327 01:24:44.714"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:24:44.714" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:24:44.714" endtime="20210327 01:24:44.714"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:44.715" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:44.714" endtime="20210327 01:24:44.715"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:44.715" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "48312759646", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 01:24:44.715" endtime="20210327 01:24:44.716"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:44.716" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "48312759646", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "653470812", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 01:24:45.411" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:44.716" endtime="20210327 01:24:45.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.414" level="INFO">{'id': '0bd01f6a3a0948bdab7ac00053871416', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T01:24:45.621351', 'updated_at': '2021-03-27T01:24:45.621354', 'type': 'individual', 'national_registration': '48312759646', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '653470812', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:45.412" endtime="20210327 01:24:45.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.416" level="INFO">275720ba43477dd7</msg>
<status status="PASS" starttime="20210327 01:24:45.415" endtime="20210327 01:24:45.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.418" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "48312759646", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "653470812", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 01:24:45.417" endtime="20210327 01:24:45.418"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.420" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:45.419" endtime="20210327 01:24:45.421"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:45.423" level="INFO">${holder_external_key} = 0bd01f6a3a0948bdab7ac00053871416</msg>
<status status="PASS" starttime="20210327 01:24:45.421" endtime="20210327 01:24:45.423"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.424" level="INFO">${holder_external_key} = 0bd01f6a3a0948bdab7ac00053871416</msg>
<status status="PASS" starttime="20210327 01:24:45.423" endtime="20210327 01:24:45.424"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.712" endtime="20210327 01:24:45.425"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.426" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:24:45.425" endtime="20210327 01:24:45.426"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:45.427" endtime="20210327 01:24:45.428"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:45.426" endtime="20210327 01:24:45.428"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:45.430" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:45.430" endtime="20210327 01:24:45.430"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:45.431" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 01:24:45.431" endtime="20210327 01:24:45.432"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:45.433" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 01:24:45.691" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:45.432" endtime="20210327 01:24:45.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.692" level="INFO">{'id': '3fb3e52326074084b7d3b26570870b71', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/phones/3fb3e52326074084b7d3b26570870b71', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:45.691" endtime="20210327 01:24:45.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.692" level="INFO">abcd425ea6b81d20</msg>
<status status="PASS" starttime="20210327 01:24:45.692" endtime="20210327 01:24:45.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.693" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:45.693" endtime="20210327 01:24:45.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:45.694" level="INFO">${phone_external_key} = 3fb3e52326074084b7d3b26570870b71</msg>
<status status="PASS" starttime="20210327 01:24:45.693" endtime="20210327 01:24:45.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.694" level="INFO">${phone_external_key} = 3fb3e52326074084b7d3b26570870b71</msg>
<status status="PASS" starttime="20210327 01:24:45.694" endtime="20210327 01:24:45.694"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:45.429" endtime="20210327 01:24:45.694"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:45.695" endtime="20210327 01:24:45.695"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:45.694" endtime="20210327 01:24:45.695"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:45.696" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:45.696" endtime="20210327 01:24:45.696"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:45.697" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 01:24:45.697" endtime="20210327 01:24:45.697"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:45.698" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 01:24:45.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:45.697" endtime="20210327 01:24:45.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.920" level="INFO">{'id': '0a0d73ffd56a45e09feca0c5cccbee16', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/addresses/0a0d73ffd56a45e09feca0c5cccbee16', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:45.919" endtime="20210327 01:24:45.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.920" level="INFO">3bbe03b27658093b</msg>
<status status="PASS" starttime="20210327 01:24:45.920" endtime="20210327 01:24:45.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.921" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:45.921" endtime="20210327 01:24:45.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:45.922" level="INFO">${address_external_key} = 0a0d73ffd56a45e09feca0c5cccbee16</msg>
<status status="PASS" starttime="20210327 01:24:45.921" endtime="20210327 01:24:45.922"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.922" level="INFO">${address_external_key} = 0a0d73ffd56a45e09feca0c5cccbee16</msg>
<status status="PASS" starttime="20210327 01:24:45.922" endtime="20210327 01:24:45.922"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:45.696" endtime="20210327 01:24:45.922"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:45.923" endtime="20210327 01:24:45.924"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:45.923" endtime="20210327 01:24:45.924"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:45.926" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 01:24:45.926" endtime="20210327 01:24:45.926"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:45.926" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:24:45.926" endtime="20210327 01:24:45.926"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:24:45.926" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:24:45.927" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:24:45.926" endtime="20210327 01:24:45.927"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:45.928" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:24:46.263" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:45.927" endtime="20210327 01:24:46.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.266" level="INFO">{'id': '13efe353f4a44251b8e12d5cbac8c58d', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents/13efe353f4a44251b8e12d5cbac8c58d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents/13efe353f4a44251b8e12d5cbac8c58d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:46.265" endtime="20210327 01:24:46.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.268" level="INFO">e2a1b75da0ff0642</msg>
<status status="PASS" starttime="20210327 01:24:46.267" endtime="20210327 01:24:46.268"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.270" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:46.269" endtime="20210327 01:24:46.270"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:46.272" level="INFO">${document_external_key} = 13efe353f4a44251b8e12d5cbac8c58d</msg>
<status status="PASS" starttime="20210327 01:24:46.270" endtime="20210327 01:24:46.272"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.273" level="INFO">${document_external_key} = 13efe353f4a44251b8e12d5cbac8c58d</msg>
<status status="PASS" starttime="20210327 01:24:46.272" endtime="20210327 01:24:46.273"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:45.924" endtime="20210327 01:24:46.274"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:46.275" endtime="20210327 01:24:46.277"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:46.274" endtime="20210327 01:24:46.277"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.278" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 01:24:46.278" endtime="20210327 01:24:46.279"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:46.279" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:24:46.279" endtime="20210327 01:24:46.280"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:24:46.280" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:24:46.281" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:24:46.280" endtime="20210327 01:24:46.281"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:46.282" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:24:46.544" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:46.282" endtime="20210327 01:24:46.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.546" level="INFO">{'id': '3b82e3dc02a34a1a839d4a59bb67dbe5', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents/3b82e3dc02a34a1a839d4a59bb67dbe5', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents/3b82e3dc02a34a1a839d4a59bb67dbe5/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:46.545" endtime="20210327 01:24:46.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.546" level="INFO">c0c5f5941a59cd9b</msg>
<status status="PASS" starttime="20210327 01:24:46.546" endtime="20210327 01:24:46.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.546" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:46.546" endtime="20210327 01:24:46.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:46.547" level="INFO">${document_external_key} = 3b82e3dc02a34a1a839d4a59bb67dbe5</msg>
<status status="PASS" starttime="20210327 01:24:46.547" endtime="20210327 01:24:46.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.547" level="INFO">${document_external_key} = 3b82e3dc02a34a1a839d4a59bb67dbe5</msg>
<status status="PASS" starttime="20210327 01:24:46.547" endtime="20210327 01:24:46.547"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:46.277" endtime="20210327 01:24:46.548"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:46.548" endtime="20210327 01:24:46.549"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:46.548" endtime="20210327 01:24:46.549"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.549" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 01:24:46.549" endtime="20210327 01:24:46.550"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:46.550" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:24:46.550" endtime="20210327 01:24:46.550"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:24:46.551" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:24:46.552" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:24:46.550" endtime="20210327 01:24:46.552"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:46.553" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:24:46.820" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:46.552" endtime="20210327 01:24:46.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.821" level="INFO">{'id': '9bc353e61c1348a8b348edb89c416aa8', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents/9bc353e61c1348a8b348edb89c416aa8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/documents/9bc353e61c1348a8b348edb89c416aa8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:24:46.821" endtime="20210327 01:24:46.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.822" level="INFO">cc700bf6a491b2ca</msg>
<status status="PASS" starttime="20210327 01:24:46.822" endtime="20210327 01:24:46.822"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.823" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:46.823" endtime="20210327 01:24:46.823"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:46.824" level="INFO">${document_external_key} = 9bc353e61c1348a8b348edb89c416aa8</msg>
<status status="PASS" starttime="20210327 01:24:46.823" endtime="20210327 01:24:46.824"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:46.824" level="INFO">${document_external_key} = 9bc353e61c1348a8b348edb89c416aa8</msg>
<status status="PASS" starttime="20210327 01:24:46.824" endtime="20210327 01:24:46.824"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:46.549" endtime="20210327 01:24:46.825"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:46.825" endtime="20210327 01:24:46.826"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:46.825" endtime="20210327 01:24:46.826"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:46.827" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:46.827" endtime="20210327 01:24:46.827"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:46.828" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:47.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:46.827" endtime="20210327 01:24:47.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:47.121" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 01:24:47.120" endtime="20210327 01:24:47.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:47.121" level="INFO">9e37cbfa648da8d2</msg>
<status status="PASS" starttime="20210327 01:24:47.121" endtime="20210327 01:24:47.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:47.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:47.123" endtime="20210327 01:24:47.123"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:46.826" endtime="20210327 01:24:47.123"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:47.124" endtime="20210327 01:24:47.125"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:47.123" endtime="20210327 01:24:47.125"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 01:24:47.127" level="INFO">${assessment_id} = 9161596e-df7f-45f6-b8d0-9e6620f80d6d</msg>
<status status="PASS" starttime="20210327 01:24:47.126" endtime="20210327 01:24:47.127"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 01:24:47.128" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 01:24:47.127" endtime="20210327 01:24:47.128"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 01:24:47.129" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 01:24:47.128" endtime="20210327 01:24:47.129"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 01:24:47.129" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 01:24:47.129" endtime="20210327 01:24:47.129"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:47.130" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:47.130" endtime="20210327 01:24:47.130"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:47.131" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 01:24:47.130" endtime="20210327 01:24:47.131"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:47.133" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/0bd01f6a3a0948bdab7ac00053871416/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "0bd01f6a3a0948bdab7ac00053871416", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "9161596e-df7f-45f6-b8d0-9e6620f80d6d" } } 
json=None</msg>
<msg timestamp="20210327 01:24:47.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:47.132" endtime="20210327 01:24:47.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:47.370" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 01:24:47.369" endtime="20210327 01:24:47.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:47.373" level="INFO">552d2d46380ea862</msg>
<status status="PASS" starttime="20210327 01:24:47.371" endtime="20210327 01:24:47.373"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:47.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:47.373" endtime="20210327 01:24:47.374"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 01:24:47.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:47.375" endtime="20210327 01:24:47.376"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:47.126" endtime="20210327 01:24:47.376"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:47.377" endtime="20210327 01:24:47.378"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:47.377" endtime="20210327 01:24:47.378"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:47.379" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:47.379" endtime="20210327 01:24:47.379"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:47.378" endtime="20210327 01:24:47.379"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:47.379" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/0bd01f6a3a0948bdab7ac00053871416/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:48.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:47.379" endtime="20210327 01:24:48.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.016" level="INFO">{'items': [{'id': '0ced8b3b900f486b845a5f98307049c1', 'holder': '0bd01f6a3a0948bdab7ac00053871416', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9207128479', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:24:47.569655', 'updated_at': '2021-03-27T04:24:47.569655', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0ced8b3b900f486b845a5f98307049c1', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 01:24:48.016" endtime="20210327 01:24:48.016"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:48.017" endtime="20210327 01:24:48.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:48.019" level="INFO">${account_external_key} = 0ced8b3b900f486b845a5f98307049c1</msg>
<status status="PASS" starttime="20210327 01:24:48.017" endtime="20210327 01:24:48.019"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.019" level="INFO">${account_external_key} = 0ced8b3b900f486b845a5f98307049c1</msg>
<status status="PASS" starttime="20210327 01:24:48.019" endtime="20210327 01:24:48.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 01:24:48.020" level="INFO">${account_number} = 9207128479</msg>
<status status="PASS" starttime="20210327 01:24:48.020" endtime="20210327 01:24:48.020"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.021" level="INFO">${account_number} = 9207128479</msg>
<status status="PASS" starttime="20210327 01:24:48.020" endtime="20210327 01:24:48.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 01:24:48.021" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:24:48.021" endtime="20210327 01:24:48.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.022" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:24:48.022" endtime="20210327 01:24:48.022"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:47.378" endtime="20210327 01:24:48.022"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:48.023" endtime="20210327 01:24:48.023"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.022" endtime="20210327 01:24:48.023"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.708" endtime="20210327 01:24:48.023"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.708" endtime="20210327 01:24:48.024"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 01:24:48.024" level="INFO">${uuid} = 98bd34b9-1d3d-403e-95a9-8dbfd49471fa</msg>
<status status="PASS" starttime="20210327 01:24:48.024" endtime="20210327 01:24:48.024"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:48.025" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:48.025" endtime="20210327 01:24:48.025"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.025" endtime="20210327 01:24:48.026"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:48.026" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:48.026" endtime="20210327 01:24:48.026"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:48.027" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "98bd34b9-1d3d-403e-95a9-8dbfd49471fa", "transaction_id": "98bd34b9-1d3d-403e-95a9-8dbfd49471fa", "id": "98bd34b9-1d3d-403e-95a9-8dbf...</msg>
<status status="PASS" starttime="20210327 01:24:48.026" endtime="20210327 01:24:48.027"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:48.027" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/98bd34b9-1d3d-403e-95a9-8dbfd49471fa, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "98bd34b9-1d3d-403e-95a9-8dbfd49471fa", "transaction_id": "98bd34b9-1d3d-403e-95a9-8dbfd49471fa", "id": "98bd34b9-1d3d-403e-95a9-8dbfd49471fa", "id_checking_account": "0ced8b3b900f486b845a5f98307049c1", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "98bd34b9-1d3d-403e-95a9-8dbfd49471fa", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 01:24:48.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:48.027" endtime="20210327 01:24:48.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:48.677" endtime="20210327 01:24:48.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:48.680" endtime="20210327 01:24:48.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:48.682" endtime="20210327 01:24:48.684"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.024" endtime="20210327 01:24:48.684"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:48.686" endtime="20210327 01:24:48.687"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.685" endtime="20210327 01:24:48.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:48.690" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:48.689" endtime="20210327 01:24:48.690"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.689" endtime="20210327 01:24:48.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.690" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 01:24:48.690" endtime="20210327 01:24:48.690"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 01:24:48.691" level="INFO">${value} = isabelly19@bol.com.br</msg>
<status status="PASS" starttime="20210327 01:24:48.691" endtime="20210327 01:24:48.691"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:48.691" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:48.691" endtime="20210327 01:24:48.691"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:48.692" level="INFO">${body} = { "type": "email", "value": "isabelly19@bol.com.br" }</msg>
<status status="PASS" starttime="20210327 01:24:48.691" endtime="20210327 01:24:48.692"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:48.692" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0bd01f6a3a0948bdab7ac00053871416/accounts/0ced8b3b900f486b845a5f98307049c1/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "isabelly19@bol.com.br" } 
json=None</msg>
<msg timestamp="20210327 01:24:49.376" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:48.692" endtime="20210327 01:24:49.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:49.379" level="INFO">{'id': '28f33454bef44677873b3b899eed388b', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T01:24:49.620', 'updated_at': '2021-03-27T01:24:49.620', 'key': {'value': 'isabelly19@bol.com.br', 'type': 'email'}, 'account': {'id': '0ced8b3b900f486b845a5f98307049c1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0bd01f6a3a0948bdab7ac00053871416', 'owner': {'name': 'Holder de teste', 'national_registration': '48312759646', 'type': 'individual'}, 'routing_number': '001', 'number': '9207128479', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:24:49.377" endtime="20210327 01:24:49.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:49.381" level="INFO">0c09ecd71428bd60</msg>
<status status="PASS" starttime="20210327 01:24:49.380" endtime="20210327 01:24:49.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:49.383" level="INFO">202</msg>
<status status="PASS" starttime="20210327 01:24:49.382" endtime="20210327 01:24:49.383"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:49.384" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:49.383" endtime="20210327 01:24:49.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:49.386" endtime="20210327 01:24:49.388"></status>
</kw>
<msg timestamp="20210327 01:24:49.388" level="INFO">${entry_external_key} = 28f33454bef44677873b3b899eed388b</msg>
<status status="PASS" starttime="20210327 01:24:49.385" endtime="20210327 01:24:49.388"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:49.389" level="INFO">${entry_external_key} = 28f33454bef44677873b3b899eed388b</msg>
<status status="PASS" starttime="20210327 01:24:49.389" endtime="20210327 01:24:49.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:49.391" endtime="20210327 01:24:49.393"></status>
</kw>
<msg timestamp="20210327 01:24:49.393" level="INFO">${entry_key_value} = isabelly19@bol.com.br</msg>
<status status="PASS" starttime="20210327 01:24:49.390" endtime="20210327 01:24:49.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 01:24:49.394" level="INFO">${entry_key_value} = isabelly19@bol.com.br</msg>
<status status="PASS" starttime="20210327 01:24:49.393" endtime="20210327 01:24:49.394"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.689" endtime="20210327 01:24:49.394"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:48.688" endtime="20210327 01:24:49.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:49.396" endtime="20210327 01:24:49.396"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:49.395" endtime="20210327 01:24:49.396"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:49.394" endtime="20210327 01:24:49.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:49.397" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:49.397" endtime="20210327 01:24:49.398"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:49.397" endtime="20210327 01:24:49.398"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:49.398" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0bd01f6a3a0948bdab7ac00053871416/accounts/0ced8b3b900f486b845a5f98307049c1/entries/28f33454bef44677873b3b899eed388b/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:50.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:49.398" endtime="20210327 01:24:50.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:50.036" level="INFO">{'code': '5654'}</msg>
<status status="PASS" starttime="20210327 01:24:50.035" endtime="20210327 01:24:50.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:50.037" level="INFO">32db0a89c516d25b</msg>
<status status="PASS" starttime="20210327 01:24:50.037" endtime="20210327 01:24:50.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:50.039" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:24:50.039" endtime="20210327 01:24:50.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:50.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:50.040" endtime="20210327 01:24:50.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 01:24:50.042" level="INFO">${verification_code} = 5654</msg>
<status status="PASS" starttime="20210327 01:24:50.041" endtime="20210327 01:24:50.042"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:50.043" level="INFO">${verification_code} = 5654</msg>
<status status="PASS" starttime="20210327 01:24:50.042" endtime="20210327 01:24:50.043"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:49.397" endtime="20210327 01:24:50.043"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:49.396" endtime="20210327 01:24:50.043"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:50.045" endtime="20210327 01:24:50.046"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:50.044" endtime="20210327 01:24:50.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:50.048" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:50.048" endtime="20210327 01:24:50.050"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:50.048" endtime="20210327 01:24:50.050"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:50.052" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:50.052" endtime="20210327 01:24:50.052"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:50.052" level="INFO">${body} = { "code": "5654" }</msg>
<status status="PASS" starttime="20210327 01:24:50.052" endtime="20210327 01:24:50.052"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:50.055" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/0bd01f6a3a0948bdab7ac00053871416/accounts/0ced8b3b900f486b845a5f98307049c1/entries/28f33454bef44677873b3b899eed388b/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "5654" } 
json=None</msg>
<msg timestamp="20210327 01:24:51.593" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:50.053" endtime="20210327 01:24:51.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:51.593" level="INFO">{'id': '28f33454bef44677873b3b899eed388b', 'status': 'active', 'created_at': '2021-03-27T01:24:49.620', 'updated_at': '2021-03-27T01:24:51.855', 'key': {'value': 'isabelly19@bol.com.br', 'type': 'email'}, 'account': {'id': '0ced8b3b900f486b845a5f98307049c1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '0bd01f6a3a0948bdab7ac00053871416', 'owner': {'name': 'Holder de teste', 'national_registration': '48312759646', 'type': 'individual'}, 'routing_number': '001', 'number': '9207128479', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:24:51.593" endtime="20210327 01:24:51.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:51.594" level="INFO">9d7e56d21c872651</msg>
<status status="PASS" starttime="20210327 01:24:51.593" endtime="20210327 01:24:51.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:51.594" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:24:51.594" endtime="20210327 01:24:51.594"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:51.594" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:51.594" endtime="20210327 01:24:51.595"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:50.047" endtime="20210327 01:24:51.595"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:50.046" endtime="20210327 01:24:51.595"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:51.595" endtime="20210327 01:24:51.596"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:51.595" endtime="20210327 01:24:51.597"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:44.705" endtime="20210327 01:24:51.597"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:51.597" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:51.597" endtime="20210327 01:24:51.598"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:51.597" endtime="20210327 01:24:51.598"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:51.598" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0ced8b3b900f486b845a5f98307049c1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:52.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:51.598" endtime="20210327 01:24:52.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.237" level="INFO">{'id': '0ced8b3b900f486b845a5f98307049c1', 'holder': '0bd01f6a3a0948bdab7ac00053871416', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9207128479', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:24:47.569655', 'updated_at': '2021-03-27T04:24:48.939464', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0ced8b3b900f486b845a5f98307049c1', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 01:24:52.237" endtime="20210327 01:24:52.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:52.237" endtime="20210327 01:24:52.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 01:24:52.238" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 01:24:52.238" endtime="20210327 01:24:52.238"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.239" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 01:24:52.239" endtime="20210327 01:24:52.239"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:51.597" endtime="20210327 01:24:52.239"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_initial}</var>
</assign>
<msg timestamp="20210327 01:24:52.240" level="INFO">${account_balance_initial} = 9000000.00</msg>
<status status="PASS" starttime="20210327 01:24:52.240" endtime="20210327 01:24:52.240"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:52.242" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:52.241" endtime="20210327 01:24:52.242"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:52.241" endtime="20210327 01:24:52.242"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:52.243" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:52.242" endtime="20210327 01:24:52.243"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:52.244" level="INFO">${body} = { "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210327 01:24:52.243" endtime="20210327 01:24:52.244"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:52.244" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/0bd01f6a3a0948bdab7ac00053871416/accounts/0ced8b3b900f486b845a5f98307049c1/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210327 01:24:52.937" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:52.244" endtime="20210327 01:24:52.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.938" level="INFO">{'id': '0a8610b3ac1d4fe69cbde4b3ee3e76c7', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103270424befe5ebfde6', 'message_id': 'M19468242dadff684495876aabb07fa4', 'amount': 290, 'created_at': '2021-03-27T01:24:53.133515', 'description': 'Envio de PIX', 'debtor': {'national_registration': '48312759646', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '0bd01f6a3a0948bdab7ac00053871416', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '0ced8b3b900f486b845a5f98307049c1', 'number': '9207128479', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 01:24:52.938" endtime="20210327 01:24:52.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.939" level="INFO">39554f5bab9f8aa5</msg>
<status status="PASS" starttime="20210327 01:24:52.939" endtime="20210327 01:24:52.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.940" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:24:52.939" endtime="20210327 01:24:52.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.940" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:52.940" endtime="20210327 01:24:52.941"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 01:24:52.941" level="INFO">${payment_external_key} = 0a8610b3ac1d4fe69cbde4b3ee3e76c7</msg>
<status status="PASS" starttime="20210327 01:24:52.941" endtime="20210327 01:24:52.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.942" level="INFO">${payment_external_key} = 0a8610b3ac1d4fe69cbde4b3ee3e76c7</msg>
<status status="PASS" starttime="20210327 01:24:52.942" endtime="20210327 01:24:52.942"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 01:24:52.943" level="INFO">${end_to_end_id} = E19468242202103270424befe5ebfde6</msg>
<status status="PASS" starttime="20210327 01:24:52.942" endtime="20210327 01:24:52.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.943" level="INFO">${end_to_end_id} = E19468242202103270424befe5ebfde6</msg>
<status status="PASS" starttime="20210327 01:24:52.943" endtime="20210327 01:24:52.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 01:24:52.944" level="INFO">${message_id} = M19468242dadff684495876aabb07fa4</msg>
<status status="PASS" starttime="20210327 01:24:52.944" endtime="20210327 01:24:52.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.945" level="INFO">${message_id} = M19468242dadff684495876aabb07fa4</msg>
<status status="PASS" starttime="20210327 01:24:52.944" endtime="20210327 01:24:52.945"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:52.240" endtime="20210327 01:24:52.945"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:52.947" level="INFO">${date} = 2021-03-27 01:24:52.946912</msg>
<status status="PASS" starttime="20210327 01:24:52.947" endtime="20210327 01:24:52.948"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:52.948" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:24:52.948" endtime="20210327 01:24:52.948"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.949" endtime="20210327 01:24:52.949"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:52.948" endtime="20210327 01:24:52.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.949" endtime="20210327 01:24:52.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.950" endtime="20210327 01:24:52.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.951" endtime="20210327 01:24:52.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.951" endtime="20210327 01:24:52.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:24:52.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:52.952" endtime="20210327 01:24:52.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.953" endtime="20210327 01:24:52.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.953" endtime="20210327 01:24:52.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.954" endtime="20210327 01:24:52.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.954" endtime="20210327 01:24:52.955"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.955" endtime="20210327 01:24:52.955"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.956" endtime="20210327 01:24:52.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.956" endtime="20210327 01:24:52.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.957" endtime="20210327 01:24:52.957"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.957" endtime="20210327 01:24:52.957"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.958" endtime="20210327 01:24:52.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.958" endtime="20210327 01:24:52.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.959" endtime="20210327 01:24:52.959"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.959" endtime="20210327 01:24:52.959"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.960" endtime="20210327 01:24:52.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.960" endtime="20210327 01:24:52.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.960" endtime="20210327 01:24:52.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.961" endtime="20210327 01:24:52.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:52.961" endtime="20210327 01:24:52.962"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:52.945" endtime="20210327 01:24:52.962"></status>
</kw>
<kw name="confirmar pagamento pix" library="pix_payments_confirm_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:52.964" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:52.963" endtime="20210327 01:24:52.964"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:52.963" endtime="20210327 01:24:52.964"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:52.965" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:52.965" endtime="20210327 01:24:52.965"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/confirm</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:52.966" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/0bd01f6a3a0948bdab7ac00053871416/accounts/0ced8b3b900f486b845a5f98307049c1/payments/0a8610b3ac1d4fe69cbde4b3ee3e76c7/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:58.206" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:52.965" endtime="20210327 01:24:58.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:58.209" level="INFO">{'id': '0a8610b3ac1d4fe69cbde4b3ee3e76c7', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E19468242202103270424befe5ebfde6', 'message_id': 'M19468242dadff684495876aabb07fa4', 'amount': 290, 'description': 'Envio de PIX', 'debtor': {'national_registration': '48312759646', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '0bd01f6a3a0948bdab7ac00053871416', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '0ced8b3b900f486b845a5f98307049c1', 'number': '9207128479', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210327 01:24:58.207" endtime="20210327 01:24:58.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:58.211" level="INFO">6bf8dfebc1169e69</msg>
<status status="PASS" starttime="20210327 01:24:58.210" endtime="20210327 01:24:58.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:58.214" level="INFO">202</msg>
<status status="PASS" starttime="20210327 01:24:58.212" endtime="20210327 01:24:58.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:58.215" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:58.215" endtime="20210327 01:24:58.216"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:52.963" endtime="20210327 01:24:58.216"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=202</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=executed</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:58.224" level="INFO">${date} = 2021-03-27 01:24:58.223994</msg>
<status status="PASS" starttime="20210327 01:24:58.223" endtime="20210327 01:24:58.224"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:58.226" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:24:58.225" endtime="20210327 01:24:58.226"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.227" endtime="20210327 01:24:58.229"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:58.226" endtime="20210327 01:24:58.229"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.229" endtime="20210327 01:24:58.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.231" endtime="20210327 01:24:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.232" endtime="20210327 01:24:58.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.235" endtime="20210327 01:24:58.235"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:58.233" endtime="20210327 01:24:58.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:24:58.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:58.236" endtime="20210327 01:24:58.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.236" endtime="20210327 01:24:58.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.237" endtime="20210327 01:24:58.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.237" endtime="20210327 01:24:58.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.237" endtime="20210327 01:24:58.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.238" endtime="20210327 01:24:58.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.238" endtime="20210327 01:24:58.239"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.239" endtime="20210327 01:24:58.239"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.239" endtime="20210327 01:24:58.240"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.240" endtime="20210327 01:24:58.240"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.240" endtime="20210327 01:24:58.241"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.241" endtime="20210327 01:24:58.241"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.241" endtime="20210327 01:24:58.242"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.242" endtime="20210327 01:24:58.242"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.242" endtime="20210327 01:24:58.243"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.243" endtime="20210327 01:24:58.243"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.243" endtime="20210327 01:24:58.244"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.244" endtime="20210327 01:24:58.244"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:58.244" endtime="20210327 01:24:58.245"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:58.219" endtime="20210327 01:24:58.245"></status>
</kw>
<kw name="confirmar pagamento pix admin" library="pix_admin_confirm_payment">
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:58.246" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:58.246" endtime="20210327 01:24:58.247"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:58.246" endtime="20210327 01:24:58.247"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20210327 01:24:58.247" level="INFO">${random_number} = 33536246251990403658007</msg>
<status status="PASS" starttime="20210327 01:24:58.247" endtime="20210327 01:24:58.247"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 01:24:58.247" level="INFO">${message_id} = M1946824233536246251990403658007</msg>
<status status="PASS" starttime="20210327 01:24:58.247" endtime="20210327 01:24:58.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 01:24:58.248" level="INFO">M1946824233536246251990403658007</msg>
<status status="PASS" starttime="20210327 01:24:58.248" endtime="20210327 01:24:58.248"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:24:58.248" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:24:58.248" endtime="20210327 01:24:58.248"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"instruction_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:24:58.249" level="INFO">${body} = { "instruction_id": "E19468242202103270424befe5ebfde6", "message_id": "M1946824233536246251990403658007" }</msg>
<status status="PASS" starttime="20210327 01:24:58.249" endtime="20210327 01:24:58.249"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix/${end_to_end_id}/confirmation</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:58.249" level="INFO">POST Request using : uri=/admin/internal_operation/pix/E19468242202103270424befe5ebfde6/confirmation, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "instruction_id": "E19468242202103270424befe5ebfde6", "message_id": "M1946824233536246251990403658007" } 
json=None</msg>
<msg timestamp="20210327 01:24:59.016" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:58.249" endtime="20210327 01:24:59.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.018" level="INFO">154ffd4054769ff2</msg>
<status status="PASS" starttime="20210327 01:24:59.017" endtime="20210327 01:24:59.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.020" level="INFO">204</msg>
<status status="PASS" starttime="20210327 01:24:59.020" endtime="20210327 01:24:59.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.023" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:59.022" endtime="20210327 01:24:59.023"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:58.245" endtime="20210327 01:24:59.024"></status>
</kw>
<kw name="${index} IN RANGE [ 60 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:59.033" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:59.031" endtime="20210327 01:24:59.034"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.030" endtime="20210327 01:24:59.035"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:59.036" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/0bd01f6a3a0948bdab7ac00053871416/accounts/0ced8b3b900f486b845a5f98307049c1/payments/0a8610b3ac1d4fe69cbde4b3ee3e76c7, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:24:59.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:59.035" endtime="20210327 01:24:59.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.670" level="INFO">{'id': '0a8610b3ac1d4fe69cbde4b3ee3e76c7', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'succeeded', 'end_to_end_id': 'E19468242202103270424befe5ebfde6', 'message_id': 'M19468242dadff684495876aabb07fa4', 'amount': 290, 'created_at': '2021-03-27T01:24:53.133515', 'description': 'Envio de PIX', 'debtor': {'national_registration': '48312759646', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '0bd01f6a3a0948bdab7ac00053871416', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '0ced8b3b900f486b845a5f98307049c1', 'number': '9207128479', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 01:24:59.669" endtime="20210327 01:24:59.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.670" level="INFO">d397939ba6ea38d6</msg>
<status status="PASS" starttime="20210327 01:24:59.670" endtime="20210327 01:24:59.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.671" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:24:59.670" endtime="20210327 01:24:59.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:59.671" endtime="20210327 01:24:59.671"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.028" endtime="20210327 01:24:59.671"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<msg timestamp="20210327 01:24:59.672" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210327 01:24:59.671" endtime="20210327 01:24:59.672"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.026" endtime="20210327 01:24:59.672"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.026" endtime="20210327 01:24:59.672"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=200</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=succeeded</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:59.675" level="INFO">${date} = 2021-03-27 01:24:59.675275</msg>
<status status="PASS" starttime="20210327 01:24:59.675" endtime="20210327 01:24:59.675"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:24:59.676" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:24:59.675" endtime="20210327 01:24:59.676"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.676" endtime="20210327 01:24:59.677"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.676" endtime="20210327 01:24:59.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.677" endtime="20210327 01:24:59.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.677" endtime="20210327 01:24:59.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.678" endtime="20210327 01:24:59.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.679" endtime="20210327 01:24:59.680"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.678" endtime="20210327 01:24:59.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:24:59.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:24:59.680" endtime="20210327 01:24:59.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.680" endtime="20210327 01:24:59.681"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.681" endtime="20210327 01:24:59.681"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.681" endtime="20210327 01:24:59.682"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.682" endtime="20210327 01:24:59.682"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.682" endtime="20210327 01:24:59.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.683" endtime="20210327 01:24:59.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.683" endtime="20210327 01:24:59.684"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.684" endtime="20210327 01:24:59.684"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.684" endtime="20210327 01:24:59.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.685" endtime="20210327 01:24:59.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.685" endtime="20210327 01:24:59.686"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.686" endtime="20210327 01:24:59.686"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.686" endtime="20210327 01:24:59.687"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.687" endtime="20210327 01:24:59.687"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.687" endtime="20210327 01:24:59.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.688" endtime="20210327 01:24:59.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.688" endtime="20210327 01:24:59.689"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:24:59.689" endtime="20210327 01:24:59.689"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.674" endtime="20210327 01:24:59.689"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:24:59.691" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:24:59.691" endtime="20210327 01:24:59.691"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.690" endtime="20210327 01:24:59.692"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:24:59.693" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0ced8b3b900f486b845a5f98307049c1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:00.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:24:59.693" endtime="20210327 01:25:00.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.319" level="INFO">{'id': '0ced8b3b900f486b845a5f98307049c1', 'holder': '0bd01f6a3a0948bdab7ac00053871416', 'balance': '8999997.10', 'currency': 'BRL', 'routing_number': '001', 'number': '9207128479', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:24:47.569655', 'updated_at': '2021-03-27T04:24:53.984029', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0ced8b3b900f486b845a5f98307049c1', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 01:25:00.318" endtime="20210327 01:25:00.319"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:00.320" endtime="20210327 01:25:00.322"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 01:25:00.324" level="INFO">${account_balance} = 8999997.10</msg>
<status status="PASS" starttime="20210327 01:25:00.322" endtime="20210327 01:25:00.324"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.326" level="INFO">${account_balance} = 8999997.10</msg>
<status status="PASS" starttime="20210327 01:25:00.325" endtime="20210327 01:25:00.326"></status>
</kw>
<status status="PASS" starttime="20210327 01:24:59.690" endtime="20210327 01:25:00.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210327 01:25:00.329" level="INFO">${account_balance_final} = 8999997.10</msg>
<status status="PASS" starttime="20210327 01:25:00.328" endtime="20210327 01:25:00.329"></status>
</kw>
<kw name="validar debito na account" library="asserts">
<arguments>
<arg>account_balance_initial=${account_balance_initial}</arg>
<arg>account_balance_final=${account_balance_final}</arg>
<arg>amount=${amount}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${account_balance_initial} - (${amount}/100)</arg>
</arguments>
<assign>
<var>${account_balance_actual}</var>
</assign>
<msg timestamp="20210327 01:25:00.340" level="INFO">${account_balance_actual} = 8999997.1</msg>
<status status="PASS" starttime="20210327 01:25:00.332" endtime="20210327 01:25:00.340"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${account_balance_final}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210327 01:25:00.340" level="INFO">${account_balance_final} = 8999997.1</msg>
<status status="PASS" starttime="20210327 01:25:00.340" endtime="20210327 01:25:00.340"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${account_balance_final}</arg>
<arg>${account_balance_actual}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:00.340" endtime="20210327 01:25:00.341"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.331" endtime="20210327 01:25:00.341"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<tags>
<tag>regression_test</tag>
</tags>
<status status="PASS" starttime="20210327 01:24:44.704" endtime="20210327 01:25:00.341" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo confirmar o pagamento de um envio de PIX</doc>
<status status="PASS" starttime="20210327 01:24:44.641" endtime="20210327 01:25:00.342"></status>
</suite>
<suite id="s1-s1-s3" name="Criar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot">
<test id="s1-s1-s3-t1" name="Cenário: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 01:25:00.397" level="INFO">${phone} = 44305556</msg>
<status status="PASS" starttime="20210327 01:25:00.397" endtime="20210327 01:25:00.397"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 01:25:00.398" level="INFO">${phone_pix} = +5521944305556</msg>
<status status="PASS" starttime="20210327 01:25:00.398" endtime="20210327 01:25:00.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.398" level="INFO">${phone_pix} = +5521944305556</msg>
<status status="PASS" starttime="20210327 01:25:00.398" endtime="20210327 01:25:00.398"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 01:25:00.399" level="INFO">${email_pix} = ana-laurada-conceicao@correia.org</msg>
<status status="PASS" starttime="20210327 01:25:00.398" endtime="20210327 01:25:00.399"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.399" level="INFO">${email_pix} = ana-laurada-conceicao@correia.org</msg>
<status status="PASS" starttime="20210327 01:25:00.399" endtime="20210327 01:25:00.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:00.400" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:00.400" endtime="20210327 01:25:00.401"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.400" endtime="20210327 01:25:00.401"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:00.401" level="INFO">${national_registration} = 24.063.798/0001-89</msg>
<status status="PASS" starttime="20210327 01:25:00.401" endtime="20210327 01:25:00.401"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:00.402" level="INFO">${national_registration} = 24063798/0001-89</msg>
<status status="PASS" starttime="20210327 01:25:00.401" endtime="20210327 01:25:00.402"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:00.402" level="INFO">${national_registration} = 24063798/000189</msg>
<status status="PASS" starttime="20210327 01:25:00.402" endtime="20210327 01:25:00.402"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:00.402" level="INFO">${national_registration} = 24063798000189</msg>
<status status="PASS" starttime="20210327 01:25:00.402" endtime="20210327 01:25:00.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.403" level="INFO">${national_registration} = 24063798000189</msg>
<status status="PASS" starttime="20210327 01:25:00.403" endtime="20210327 01:25:00.403"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 01:25:00.403" level="INFO">${identity_card} = 04728156X</msg>
<status status="PASS" starttime="20210327 01:25:00.403" endtime="20210327 01:25:00.403"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.403" level="INFO">${identity_card} = 04728156X</msg>
<status status="PASS" starttime="20210327 01:25:00.403" endtime="20210327 01:25:00.404"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:00.405" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:00.405" endtime="20210327 01:25:00.405"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.404" endtime="20210327 01:25:00.405"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.405" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210327 01:25:00.405" endtime="20210327 01:25:00.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.406" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:25:00.406" endtime="20210327 01:25:00.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210327 01:25:00.406" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210327 01:25:00.406" endtime="20210327 01:25:00.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:00.407" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:00.407" endtime="20210327 01:25:00.407"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:00.408" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "24063798000189", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210327 01:25:00.407" endtime="20210327 01:25:00.408"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:00.408" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "24063798000189", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210327 01:25:01.165" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:00.408" endtime="20210327 01:25:01.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.165" level="INFO">{'id': 'cccc445e79fd4a619c24441b2004642c', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T01:25:01.342654', 'updated_at': '2021-03-27T01:25:01.342656', 'type': 'business', 'national_registration': '24063798000189', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:01.165" endtime="20210327 01:25:01.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.166" level="INFO">ae375be315f9b22a</msg>
<status status="PASS" starttime="20210327 01:25:01.166" endtime="20210327 01:25:01.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.166" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "24063798000189", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210327 01:25:01.166" endtime="20210327 01:25:01.166"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.167" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:01.167" endtime="20210327 01:25:01.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:01.168" level="INFO">${holder_external_key} = cccc445e79fd4a619c24441b2004642c</msg>
<status status="PASS" starttime="20210327 01:25:01.167" endtime="20210327 01:25:01.168"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.168" level="INFO">${holder_external_key} = cccc445e79fd4a619c24441b2004642c</msg>
<status status="PASS" starttime="20210327 01:25:01.168" endtime="20210327 01:25:01.168"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.404" endtime="20210327 01:25:01.168"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder business</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:01.169" endtime="20210327 01:25:01.169"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:01.168" endtime="20210327 01:25:01.169"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:01.170" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:01.170" endtime="20210327 01:25:01.170"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:01.171" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 01:25:01.170" endtime="20210327 01:25:01.171"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:01.171" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 01:25:01.435" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:01.171" endtime="20210327 01:25:01.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.437" level="INFO">{'id': 'e54a1f1150c444498e80c18b30980b1f', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/phones/e54a1f1150c444498e80c18b30980b1f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:01.436" endtime="20210327 01:25:01.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.440" level="INFO">ab6e9c0f9090d333</msg>
<status status="PASS" starttime="20210327 01:25:01.438" endtime="20210327 01:25:01.440"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.442" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:01.441" endtime="20210327 01:25:01.442"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:01.443" level="INFO">${phone_external_key} = e54a1f1150c444498e80c18b30980b1f</msg>
<status status="PASS" starttime="20210327 01:25:01.442" endtime="20210327 01:25:01.443"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.444" level="INFO">${phone_external_key} = e54a1f1150c444498e80c18b30980b1f</msg>
<status status="PASS" starttime="20210327 01:25:01.443" endtime="20210327 01:25:01.444"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:01.170" endtime="20210327 01:25:01.444"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do Holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:01.444" endtime="20210327 01:25:01.445"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:01.444" endtime="20210327 01:25:01.445"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:01.446" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:01.446" endtime="20210327 01:25:01.446"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:01.446" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 01:25:01.446" endtime="20210327 01:25:01.446"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:01.447" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 01:25:01.690" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:01.447" endtime="20210327 01:25:01.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.690" level="INFO">{'id': '63c7da63f72749939dfa86f50cbb4111', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/addresses/63c7da63f72749939dfa86f50cbb4111', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:01.690" endtime="20210327 01:25:01.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.691" level="INFO">335e04076440a233</msg>
<status status="PASS" starttime="20210327 01:25:01.691" endtime="20210327 01:25:01.691"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:01.691" endtime="20210327 01:25:01.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:01.692" level="INFO">${address_external_key} = 63c7da63f72749939dfa86f50cbb4111</msg>
<status status="PASS" starttime="20210327 01:25:01.692" endtime="20210327 01:25:01.692"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.693" level="INFO">${address_external_key} = 63c7da63f72749939dfa86f50cbb4111</msg>
<status status="PASS" starttime="20210327 01:25:01.693" endtime="20210327 01:25:01.693"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:01.445" endtime="20210327 01:25:01.693"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do Holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:01.694" endtime="20210327 01:25:01.694"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:01.693" endtime="20210327 01:25:01.694"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=CCMEI</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:01.695" level="INFO">${document_type} = CCMEI</msg>
<status status="PASS" starttime="20210327 01:25:01.695" endtime="20210327 01:25:01.695"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:01.696" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:01.696" endtime="20210327 01:25:01.696"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:01.697" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:01.698" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:01.696" endtime="20210327 01:25:01.698"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:01.698" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:02.064" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:01.698" endtime="20210327 01:25:02.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.066" level="INFO">{'id': '358bfeb0d28d403eabb1d038e43852ff', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/documents/358bfeb0d28d403eabb1d038e43852ff', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/documents/358bfeb0d28d403eabb1d038e43852ff/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:02.065" endtime="20210327 01:25:02.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.066" level="INFO">4efc516345a40917</msg>
<status status="PASS" starttime="20210327 01:25:02.066" endtime="20210327 01:25:02.066"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.067" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.066" endtime="20210327 01:25:02.067"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:02.067" level="INFO">${document_external_key} = 358bfeb0d28d403eabb1d038e43852ff</msg>
<status status="PASS" starttime="20210327 01:25:02.067" endtime="20210327 01:25:02.067"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.068" level="INFO">${document_external_key} = 358bfeb0d28d403eabb1d038e43852ff</msg>
<status status="PASS" starttime="20210327 01:25:02.067" endtime="20210327 01:25:02.069"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:01.695" endtime="20210327 01:25:02.069"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:02.069" endtime="20210327 01:25:02.069"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.069" endtime="20210327 01:25:02.069"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:02.070" level="INFO">${partner_individual_national_registration} = 718.649.325-46</msg>
<status status="PASS" starttime="20210327 01:25:02.070" endtime="20210327 01:25:02.070"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:02.070" level="INFO">${partner_individual_national_registration} = 718649325-46</msg>
<status status="PASS" starttime="20210327 01:25:02.070" endtime="20210327 01:25:02.070"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:02.071" level="INFO">${partner_individual_national_registration} = 71864932546</msg>
<status status="PASS" starttime="20210327 01:25:02.071" endtime="20210327 01:25:02.071"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.071" level="INFO">${partner_individual_national_registration} = 71864932546</msg>
<status status="PASS" starttime="20210327 01:25:02.071" endtime="20210327 01:25:02.072"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210327 01:25:02.072" level="INFO">${partner_individual_identity_card} = 756824035</msg>
<status status="PASS" starttime="20210327 01:25:02.072" endtime="20210327 01:25:02.072"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.072" level="INFO">${partner_individual_identity_card} = 756824035</msg>
<status status="PASS" starttime="20210327 01:25:02.072" endtime="20210327 01:25:02.073"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:02.075" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:02.075" endtime="20210327 01:25:02.075"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:02.076" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "71864932546", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe...</msg>
<status status="PASS" starttime="20210327 01:25:02.075" endtime="20210327 01:25:02.076"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:02.077" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "71864932546", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Individual Partner", "identity_card": "756824035", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 01:25:02.351" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.076" endtime="20210327 01:25:02.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.352" level="INFO">{'id': '3bc7dce6dc0f4651bd0d1ba733331f5f', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-27T01:25:02.499581', 'updated_at': '2021-03-27T01:25:02.499583', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '71864932546', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Individual Partner', 'identity_card': '756824035', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:02.351" endtime="20210327 01:25:02.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.352" level="INFO">89dd2b6221e9a57a</msg>
<status status="PASS" starttime="20210327 01:25:02.352" endtime="20210327 01:25:02.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.353" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.353" endtime="20210327 01:25:02.353"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:02.354" level="INFO">${partner_external_key} = 3bc7dce6dc0f4651bd0d1ba733331f5f</msg>
<status status="PASS" starttime="20210327 01:25:02.354" endtime="20210327 01:25:02.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.355" level="INFO">${partner_external_key} = 3bc7dce6dc0f4651bd0d1ba733331f5f</msg>
<status status="PASS" starttime="20210327 01:25:02.354" endtime="20210327 01:25:02.355"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.074" endtime="20210327 01:25:02.355"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar partner individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:02.356" endtime="20210327 01:25:02.356"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.355" endtime="20210327 01:25:02.356"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:02.357" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:02.357" endtime="20210327 01:25:02.357"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:02.358" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210327 01:25:02.357" endtime="20210327 01:25:02.358"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:02.359" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210327 01:25:02.630" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.358" endtime="20210327 01:25:02.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.633" level="INFO">{'id': '29b8070c0b7645979f0af3c6f817c3be', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/phones/29b8070c0b7645979f0af3c6f817c3be', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:02.632" endtime="20210327 01:25:02.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.636" level="INFO">e6437650000bdf9e</msg>
<status status="PASS" starttime="20210327 01:25:02.634" endtime="20210327 01:25:02.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.639" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.638" endtime="20210327 01:25:02.640"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:02.642" level="INFO">${holder_external_key} = 29b8070c0b7645979f0af3c6f817c3be</msg>
<status status="PASS" starttime="20210327 01:25:02.640" endtime="20210327 01:25:02.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.644" level="INFO">${phone_external_key} = e54a1f1150c444498e80c18b30980b1f</msg>
<status status="PASS" starttime="20210327 01:25:02.643" endtime="20210327 01:25:02.644"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.356" endtime="20210327 01:25:02.645"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do partner</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:02.646" endtime="20210327 01:25:02.647"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.645" endtime="20210327 01:25:02.647"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:02.649" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:02.649" endtime="20210327 01:25:02.649"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:02.650" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 01:25:02.650" endtime="20210327 01:25:02.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:02.652" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210327 01:25:02.901" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.651" endtime="20210327 01:25:02.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.905" level="INFO">{'id': '8753d7673c83438a8fd5bca02592e156', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/addresses/8753d7673c83438a8fd5bca02592e156', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:02.903" endtime="20210327 01:25:02.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.906" level="INFO">e01d522fa213c291</msg>
<status status="PASS" starttime="20210327 01:25:02.905" endtime="20210327 01:25:02.907"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.908" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.907" endtime="20210327 01:25:02.908"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:02.910" level="INFO">${address_external_key} = 8753d7673c83438a8fd5bca02592e156</msg>
<status status="PASS" starttime="20210327 01:25:02.909" endtime="20210327 01:25:02.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:02.910" level="INFO">${address_external_key} = 8753d7673c83438a8fd5bca02592e156</msg>
<status status="PASS" starttime="20210327 01:25:02.910" endtime="20210327 01:25:02.910"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.647" endtime="20210327 01:25:02.910"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do partner</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:02.911" endtime="20210327 01:25:02.911"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.910" endtime="20210327 01:25:02.911"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:02.912" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:02.912" endtime="20210327 01:25:02.912"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\partner_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:02.912" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:02.913" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:02.912" endtime="20210327 01:25:02.913"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:02.914" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:03.200" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:02.914" endtime="20210327 01:25:03.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.203" level="INFO">{'id': 'c6452616559f49b08ecb502cdd46123c', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents/c6452616559f49b08ecb502cdd46123c', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents/c6452616559f49b08ecb502cdd46123c/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:03.201" endtime="20210327 01:25:03.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.206" level="INFO">9265dc596747b280</msg>
<status status="PASS" starttime="20210327 01:25:03.204" endtime="20210327 01:25:03.206"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.207" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:03.206" endtime="20210327 01:25:03.207"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:03.209" level="INFO">${document_external_key} = c6452616559f49b08ecb502cdd46123c</msg>
<status status="PASS" starttime="20210327 01:25:03.209" endtime="20210327 01:25:03.209"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.211" level="INFO">${document_external_key} = c6452616559f49b08ecb502cdd46123c</msg>
<status status="PASS" starttime="20210327 01:25:03.210" endtime="20210327 01:25:03.211"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:02.911" endtime="20210327 01:25:03.211"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do partner</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:03.212" endtime="20210327 01:25:03.212"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:03.211" endtime="20210327 01:25:03.212"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:03.213" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:03.213" endtime="20210327 01:25:03.213"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\partner_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:03.213" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:03.214" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:03.213" endtime="20210327 01:25:03.214"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:03.215" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:03.597" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:03.214" endtime="20210327 01:25:03.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.600" level="INFO">{'id': '12eae2db9cab48bb88812c5ffdbe73fe', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents/12eae2db9cab48bb88812c5ffdbe73fe', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents/12eae2db9cab48bb88812c5ffdbe73fe/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:03.599" endtime="20210327 01:25:03.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.602" level="INFO">8173f875b951907c</msg>
<status status="PASS" starttime="20210327 01:25:03.602" endtime="20210327 01:25:03.602"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.605" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:03.603" endtime="20210327 01:25:03.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:03.608" level="INFO">${document_external_key} = 12eae2db9cab48bb88812c5ffdbe73fe</msg>
<status status="PASS" starttime="20210327 01:25:03.606" endtime="20210327 01:25:03.608"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.611" level="INFO">${document_external_key} = 12eae2db9cab48bb88812c5ffdbe73fe</msg>
<status status="PASS" starttime="20210327 01:25:03.609" endtime="20210327 01:25:03.611"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:03.212" endtime="20210327 01:25:03.611"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do partner</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:03.613" endtime="20210327 01:25:03.614"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:03.612" endtime="20210327 01:25:03.614"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:03.616" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:03.616" endtime="20210327 01:25:03.616"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\partner_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:03.618" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:03.620" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:03.617" endtime="20210327 01:25:03.620"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:03.621" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:03.910" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:03.620" endtime="20210327 01:25:03.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.910" level="INFO">{'id': '1f4de39dc4c74f3ba2e3a4aa5c71c5a8', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents/1f4de39dc4c74f3ba2e3a4aa5c71c5a8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/partners/3bc7dce6dc0f4651bd0d1ba733331f5f/documents/1f4de39dc4c74f3ba2e3a4aa5c71c5a8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:03.910" endtime="20210327 01:25:03.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.911" level="INFO">a7bc003562d2dd4c</msg>
<status status="PASS" starttime="20210327 01:25:03.911" endtime="20210327 01:25:03.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.912" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:03.911" endtime="20210327 01:25:03.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:03.912" level="INFO">${document_external_key} = 1f4de39dc4c74f3ba2e3a4aa5c71c5a8</msg>
<status status="PASS" starttime="20210327 01:25:03.912" endtime="20210327 01:25:03.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:03.913" level="INFO">${document_external_key} = 1f4de39dc4c74f3ba2e3a4aa5c71c5a8</msg>
<status status="PASS" starttime="20210327 01:25:03.913" endtime="20210327 01:25:03.913"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:03.614" endtime="20210327 01:25:03.913"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do partner</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:03.914" endtime="20210327 01:25:03.914"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:03.913" endtime="20210327 01:25:03.914"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:03.915" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:03.915" endtime="20210327 01:25:03.915"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:03.916" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:04.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:03.915" endtime="20210327 01:25:04.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:04.228" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 01:25:04.228" endtime="20210327 01:25:04.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:04.229" level="INFO">87c0cb8116c8e5c5</msg>
<status status="PASS" starttime="20210327 01:25:04.229" endtime="20210327 01:25:04.229"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:04.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:04.230" endtime="20210327 01:25:04.230"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:03.915" endtime="20210327 01:25:04.230"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:04.231" endtime="20210327 01:25:04.231"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:04.230" endtime="20210327 01:25:04.232"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 01:25:04.232" level="INFO">${assessment_id} = 4b89b91a-e885-4750-992d-ed1f6e107b95</msg>
<status status="PASS" starttime="20210327 01:25:04.232" endtime="20210327 01:25:04.232"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 01:25:04.233" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 01:25:04.233" endtime="20210327 01:25:04.233"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 01:25:04.233" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 01:25:04.233" endtime="20210327 01:25:04.233"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 01:25:04.234" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 01:25:04.234" endtime="20210327 01:25:04.234"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:04.235" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:04.234" endtime="20210327 01:25:04.235"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:04.235" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 01:25:04.235" endtime="20210327 01:25:04.235"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:04.236" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/cccc445e79fd4a619c24441b2004642c/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "cccc445e79fd4a619c24441b2004642c", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "4b89b91a-e885-4750-992d-ed1f6e107b95" } } 
json=None</msg>
<msg timestamp="20210327 01:25:04.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:04.236" endtime="20210327 01:25:04.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:04.454" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 01:25:04.453" endtime="20210327 01:25:04.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:04.456" level="INFO">c283f7c0339e3d84</msg>
<status status="PASS" starttime="20210327 01:25:04.455" endtime="20210327 01:25:04.457"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:04.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:04.458" endtime="20210327 01:25:04.459"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 01:25:04.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:25:04.459" endtime="20210327 01:25:04.460"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:04.232" endtime="20210327 01:25:04.461"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:04.463" endtime="20210327 01:25:04.464"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:04.461" endtime="20210327 01:25:04.464"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:04.465" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:04.465" endtime="20210327 01:25:04.466"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:04.465" endtime="20210327 01:25:04.466"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:04.466" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/cccc445e79fd4a619c24441b2004642c/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:05.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:04.466" endtime="20210327 01:25:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.115" level="INFO">{'items': [{'id': '048669a101d0471eba6a1618d8b767f6', 'holder': 'cccc445e79fd4a619c24441b2004642c', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6835588694', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:25:04.675959', 'updated_at': '2021-03-27T04:25:04.675959', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/048669a101d0471eba6a1618d8b767f6', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 01:25:05.113" endtime="20210327 01:25:05.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:05.116" endtime="20210327 01:25:05.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:05.120" level="INFO">${account_external_key} = 048669a101d0471eba6a1618d8b767f6</msg>
<status status="PASS" starttime="20210327 01:25:05.118" endtime="20210327 01:25:05.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.122" level="INFO">${account_external_key} = 048669a101d0471eba6a1618d8b767f6</msg>
<status status="PASS" starttime="20210327 01:25:05.122" endtime="20210327 01:25:05.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 01:25:05.124" level="INFO">${account_number} = 6835588694</msg>
<status status="PASS" starttime="20210327 01:25:05.123" endtime="20210327 01:25:05.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.126" level="INFO">${account_number} = 6835588694</msg>
<status status="PASS" starttime="20210327 01:25:05.125" endtime="20210327 01:25:05.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 01:25:05.127" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:25:05.127" endtime="20210327 01:25:05.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.127" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:25:05.127" endtime="20210327 01:25:05.128"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:04.465" endtime="20210327 01:25:05.128"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:05.128" endtime="20210327 01:25:05.129"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.128" endtime="20210327 01:25:05.129"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.400" endtime="20210327 01:25:05.129"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.399" endtime="20210327 01:25:05.129"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 01:25:05.129" level="INFO">${uuid} = 788eeab3-3000-4630-86ef-9d7de02bd40c</msg>
<status status="PASS" starttime="20210327 01:25:05.129" endtime="20210327 01:25:05.129"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:05.130" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:05.130" endtime="20210327 01:25:05.130"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.130" endtime="20210327 01:25:05.130"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:05.131" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:05.131" endtime="20210327 01:25:05.131"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:05.131" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "788eeab3-3000-4630-86ef-9d7de02bd40c", "transaction_id": "788eeab3-3000-4630-86ef-9d7de02bd40c", "id": "788eeab3-3000-4630-86ef-9d7d...</msg>
<status status="PASS" starttime="20210327 01:25:05.131" endtime="20210327 01:25:05.131"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:05.132" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/788eeab3-3000-4630-86ef-9d7de02bd40c, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "788eeab3-3000-4630-86ef-9d7de02bd40c", "transaction_id": "788eeab3-3000-4630-86ef-9d7de02bd40c", "id": "788eeab3-3000-4630-86ef-9d7de02bd40c", "id_checking_account": "048669a101d0471eba6a1618d8b767f6", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "788eeab3-3000-4630-86ef-9d7de02bd40c", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 01:25:05.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:05.132" endtime="20210327 01:25:05.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:05.818" endtime="20210327 01:25:05.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:05.821" endtime="20210327 01:25:05.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:05.823" endtime="20210327 01:25:05.825"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.129" endtime="20210327 01:25:05.825"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:05.827" endtime="20210327 01:25:05.828"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.825" endtime="20210327 01:25:05.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:05.830" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:05.830" endtime="20210327 01:25:05.830"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.829" endtime="20210327 01:25:05.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.831" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 01:25:05.830" endtime="20210327 01:25:05.831"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 01:25:05.831" level="INFO">${value} = ana-laurada-conceicao@correia.org</msg>
<status status="PASS" starttime="20210327 01:25:05.831" endtime="20210327 01:25:05.831"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:05.831" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:05.831" endtime="20210327 01:25:05.831"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:05.832" level="INFO">${body} = { "type": "email", "value": "ana-laurada-conceicao@correia.org" }</msg>
<status status="PASS" starttime="20210327 01:25:05.832" endtime="20210327 01:25:05.832"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:05.832" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/cccc445e79fd4a619c24441b2004642c/accounts/048669a101d0471eba6a1618d8b767f6/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "ana-laurada-conceicao@correia.org" } 
json=None</msg>
<msg timestamp="20210327 01:25:06.556" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:05.832" endtime="20210327 01:25:06.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:06.559" level="INFO">{'id': '93988986eacd49669aa8cc418544fa14', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T01:25:06.798', 'updated_at': '2021-03-27T01:25:06.798', 'key': {'value': 'ana-laurada-conceicao@correia.org', 'type': 'email'}, 'account': {'id': '048669a101d0471eba6a1618d8b767f6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'cccc445e79fd4a619c24441b2004642c', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '24063798000189', 'type': 'business'}, 'routing_number': '001', 'number': '6835588694', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:25:06.558" endtime="20210327 01:25:06.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:06.561" level="INFO">a0ece084877a0f8b</msg>
<status status="PASS" starttime="20210327 01:25:06.560" endtime="20210327 01:25:06.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:06.563" level="INFO">202</msg>
<status status="PASS" starttime="20210327 01:25:06.562" endtime="20210327 01:25:06.564"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:06.565" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:06.564" endtime="20210327 01:25:06.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:06.567" endtime="20210327 01:25:06.568"></status>
</kw>
<msg timestamp="20210327 01:25:06.568" level="INFO">${entry_external_key} = 93988986eacd49669aa8cc418544fa14</msg>
<status status="PASS" starttime="20210327 01:25:06.566" endtime="20210327 01:25:06.569"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:06.570" level="INFO">${entry_external_key} = 93988986eacd49669aa8cc418544fa14</msg>
<status status="PASS" starttime="20210327 01:25:06.569" endtime="20210327 01:25:06.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:06.572" endtime="20210327 01:25:06.573"></status>
</kw>
<msg timestamp="20210327 01:25:06.573" level="INFO">${entry_key_value} = ana-laurada-conceicao@correia.org</msg>
<status status="PASS" starttime="20210327 01:25:06.571" endtime="20210327 01:25:06.573"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 01:25:06.574" level="INFO">${entry_key_value} = ana-laurada-conceicao@correia.org</msg>
<status status="PASS" starttime="20210327 01:25:06.573" endtime="20210327 01:25:06.574"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.829" endtime="20210327 01:25:06.574"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:05.829" endtime="20210327 01:25:06.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:06.577" endtime="20210327 01:25:06.578"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:06.576" endtime="20210327 01:25:06.578"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:06.575" endtime="20210327 01:25:06.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:06.580" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:06.580" endtime="20210327 01:25:06.580"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:06.579" endtime="20210327 01:25:06.580"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:06.581" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/cccc445e79fd4a619c24441b2004642c/accounts/048669a101d0471eba6a1618d8b767f6/entries/93988986eacd49669aa8cc418544fa14/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:07.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:06.580" endtime="20210327 01:25:07.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:07.215" level="INFO">{'code': '8258'}</msg>
<status status="PASS" starttime="20210327 01:25:07.214" endtime="20210327 01:25:07.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:07.215" level="INFO">fbdd5f5fc4ceac55</msg>
<status status="PASS" starttime="20210327 01:25:07.215" endtime="20210327 01:25:07.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:07.217" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:25:07.216" endtime="20210327 01:25:07.217"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:07.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:07.217" endtime="20210327 01:25:07.217"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 01:25:07.218" level="INFO">${verification_code} = 8258</msg>
<status status="PASS" starttime="20210327 01:25:07.218" endtime="20210327 01:25:07.218"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:07.218" level="INFO">${verification_code} = 8258</msg>
<status status="PASS" starttime="20210327 01:25:07.218" endtime="20210327 01:25:07.218"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:06.579" endtime="20210327 01:25:07.218"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:06.578" endtime="20210327 01:25:07.218"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:07.219" endtime="20210327 01:25:07.220"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:07.218" endtime="20210327 01:25:07.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:07.221" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:07.221" endtime="20210327 01:25:07.221"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:07.220" endtime="20210327 01:25:07.221"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:07.222" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:07.222" endtime="20210327 01:25:07.222"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:07.222" level="INFO">${body} = { "code": "8258" }</msg>
<status status="PASS" starttime="20210327 01:25:07.222" endtime="20210327 01:25:07.222"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:07.223" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/cccc445e79fd4a619c24441b2004642c/accounts/048669a101d0471eba6a1618d8b767f6/entries/93988986eacd49669aa8cc418544fa14/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8258" } 
json=None</msg>
<msg timestamp="20210327 01:25:08.874" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:07.222" endtime="20210327 01:25:08.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:08.875" level="INFO">{'id': '93988986eacd49669aa8cc418544fa14', 'status': 'active', 'created_at': '2021-03-27T01:25:06.798', 'updated_at': '2021-03-27T01:25:09.136', 'key': {'value': 'ana-laurada-conceicao@correia.org', 'type': 'email'}, 'account': {'id': '048669a101d0471eba6a1618d8b767f6', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'cccc445e79fd4a619c24441b2004642c', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '24063798000189', 'type': 'business'}, 'routing_number': '001', 'number': '6835588694', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:25:08.874" endtime="20210327 01:25:08.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:08.875" level="INFO">c14e5d84c8ce8e17</msg>
<status status="PASS" starttime="20210327 01:25:08.875" endtime="20210327 01:25:08.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:08.876" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:25:08.876" endtime="20210327 01:25:08.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:08.877" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:08.876" endtime="20210327 01:25:08.878"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:07.220" endtime="20210327 01:25:08.878"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:07.220" endtime="20210327 01:25:08.878"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:08.879" endtime="20210327 01:25:08.879"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:08.878" endtime="20210327 01:25:08.879"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:00.397" endtime="20210327 01:25:08.880"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:08.882" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:08.881" endtime="20210327 01:25:08.882"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:08.881" endtime="20210327 01:25:08.882"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:08.882" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:08.882" endtime="20210327 01:25:08.882"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:08.883" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210327 01:25:08.883" endtime="20210327 01:25:08.883"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:08.884" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/cccc445e79fd4a619c24441b2004642c/accounts/048669a101d0471eba6a1618d8b767f6/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210327 01:25:09.626" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:08.883" endtime="20210327 01:25:09.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.627" level="INFO">{'id': '434e2c67dd8c44aba0a79869fd462811', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103270425200cf1bb42b', 'message_id': 'M1946824286e6d463e1de6a4e34e050d', 'amount': 100, 'created_at': '2021-03-27T01:25:09.783151', 'description': 'Envio de PIX', 'debtor': {'national_registration': '24063798000189', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': 'cccc445e79fd4a619c24441b2004642c', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '048669a101d0471eba6a1618d8b767f6', 'number': '6835588694', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 01:25:09.627" endtime="20210327 01:25:09.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.628" level="INFO">b33a6468cb7e3abf</msg>
<status status="PASS" starttime="20210327 01:25:09.627" endtime="20210327 01:25:09.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.628" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:25:09.628" endtime="20210327 01:25:09.628"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.629" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:09.629" endtime="20210327 01:25:09.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:09.630" level="INFO">${payment_external_key} = 434e2c67dd8c44aba0a79869fd462811</msg>
<status status="PASS" starttime="20210327 01:25:09.629" endtime="20210327 01:25:09.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.630" level="INFO">${payment_external_key} = 434e2c67dd8c44aba0a79869fd462811</msg>
<status status="PASS" starttime="20210327 01:25:09.630" endtime="20210327 01:25:09.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 01:25:09.631" level="INFO">${end_to_end_id} = E19468242202103270425200cf1bb42b</msg>
<status status="PASS" starttime="20210327 01:25:09.631" endtime="20210327 01:25:09.631"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.632" level="INFO">${end_to_end_id} = E19468242202103270425200cf1bb42b</msg>
<status status="PASS" starttime="20210327 01:25:09.631" endtime="20210327 01:25:09.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 01:25:09.632" level="INFO">${message_id} = M1946824286e6d463e1de6a4e34e050d</msg>
<status status="PASS" starttime="20210327 01:25:09.632" endtime="20210327 01:25:09.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.633" level="INFO">${message_id} = M1946824286e6d463e1de6a4e34e050d</msg>
<status status="PASS" starttime="20210327 01:25:09.633" endtime="20210327 01:25:09.633"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:08.880" endtime="20210327 01:25:09.633"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:25:09.635" level="INFO">${date} = 2021-03-27 01:25:09.635180</msg>
<status status="PASS" starttime="20210327 01:25:09.635" endtime="20210327 01:25:09.635"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:25:09.636" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:25:09.636" endtime="20210327 01:25:09.636"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.637" endtime="20210327 01:25:09.637"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.636" endtime="20210327 01:25:09.637"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.637" endtime="20210327 01:25:09.638"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.638" endtime="20210327 01:25:09.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.639" endtime="20210327 01:25:09.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.639" endtime="20210327 01:25:09.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:25:09.640" endtime="20210327 01:25:09.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.641" endtime="20210327 01:25:09.641"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.641" endtime="20210327 01:25:09.641"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:09.642" endtime="20210327 01:25:09.642"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.642" level="FAIL">individual != business</msg>
<status status="FAIL" starttime="20210327 01:25:09.642" endtime="20210327 01:25:09.643"></status>
</kw>
<status status="FAIL" starttime="20210327 01:25:09.634" endtime="20210327 01:25:09.643"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Individual</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="FAIL" starttime="20210327 01:25:00.396" endtime="20210327 01:25:09.643" critical="yes">individual != business</status>
</test>
<test id="s1-s1-s3-t2" name="Cenário: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 01:25:09.646" level="INFO">${phone} = 13075867</msg>
<status status="PASS" starttime="20210327 01:25:09.645" endtime="20210327 01:25:09.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 01:25:09.646" level="INFO">${phone_pix} = +5521913075867</msg>
<status status="PASS" starttime="20210327 01:25:09.646" endtime="20210327 01:25:09.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.646" level="INFO">${phone_pix} = +5521913075867</msg>
<status status="PASS" starttime="20210327 01:25:09.646" endtime="20210327 01:25:09.646"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 01:25:09.647" level="INFO">${email_pix} = costarafaela@ig.com.br</msg>
<status status="PASS" starttime="20210327 01:25:09.647" endtime="20210327 01:25:09.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.647" level="INFO">${email_pix} = costarafaela@ig.com.br</msg>
<status status="PASS" starttime="20210327 01:25:09.647" endtime="20210327 01:25:09.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:09.649" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:09.649" endtime="20210327 01:25:09.649"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.648" endtime="20210327 01:25:09.649"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:09.650" level="INFO">${national_registration} = 165.293.078-77</msg>
<status status="PASS" starttime="20210327 01:25:09.649" endtime="20210327 01:25:09.650"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:09.650" level="INFO">${national_registration} = 165293078-77</msg>
<status status="PASS" starttime="20210327 01:25:09.650" endtime="20210327 01:25:09.650"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:09.650" level="INFO">${national_registration} = 16529307877</msg>
<status status="PASS" starttime="20210327 01:25:09.650" endtime="20210327 01:25:09.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.651" level="INFO">${national_registration} = 16529307877</msg>
<status status="PASS" starttime="20210327 01:25:09.651" endtime="20210327 01:25:09.651"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 01:25:09.652" level="INFO">${identity_card} = 416705832</msg>
<status status="PASS" starttime="20210327 01:25:09.651" endtime="20210327 01:25:09.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.652" level="INFO">${identity_card} = 416705832</msg>
<status status="PASS" starttime="20210327 01:25:09.652" endtime="20210327 01:25:09.652"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:09.654" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:09.653" endtime="20210327 01:25:09.654"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.653" endtime="20210327 01:25:09.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.654" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 01:25:09.654" endtime="20210327 01:25:09.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:25:09.655" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:25:09.654" endtime="20210327 01:25:09.655"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:09.655" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:09.655" endtime="20210327 01:25:09.655"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:09.656" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16529307877", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 01:25:09.655" endtime="20210327 01:25:09.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:09.656" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16529307877", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "416705832", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 01:25:10.343" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:09.656" endtime="20210327 01:25:10.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.345" level="INFO">{'id': '216b0d1531db4f4eada08d82cbb6b32e', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T01:25:10.559164', 'updated_at': '2021-03-27T01:25:10.559166', 'type': 'individual', 'national_registration': '16529307877', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '416705832', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:10.344" endtime="20210327 01:25:10.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.348" level="INFO">b6655b6c964fbb1e</msg>
<status status="PASS" starttime="20210327 01:25:10.347" endtime="20210327 01:25:10.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.349" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "16529307877", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "416705832", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 01:25:10.349" endtime="20210327 01:25:10.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.351" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:10.350" endtime="20210327 01:25:10.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:10.354" level="INFO">${holder_external_key} = 216b0d1531db4f4eada08d82cbb6b32e</msg>
<status status="PASS" starttime="20210327 01:25:10.353" endtime="20210327 01:25:10.354"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.355" level="INFO">${holder_external_key} = 216b0d1531db4f4eada08d82cbb6b32e</msg>
<status status="PASS" starttime="20210327 01:25:10.354" endtime="20210327 01:25:10.355"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.652" endtime="20210327 01:25:10.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.357" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:25:10.356" endtime="20210327 01:25:10.357"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:10.358" endtime="20210327 01:25:10.360"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:10.357" endtime="20210327 01:25:10.360"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:10.362" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:10.361" endtime="20210327 01:25:10.362"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:10.363" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 01:25:10.362" endtime="20210327 01:25:10.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:10.364" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 01:25:10.619" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:10.363" endtime="20210327 01:25:10.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.622" level="INFO">{'id': '4071d90d36b24286bd18be7158b57ee1', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/phones/4071d90d36b24286bd18be7158b57ee1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:10.620" endtime="20210327 01:25:10.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.624" level="INFO">cf0a7447a8741115</msg>
<status status="PASS" starttime="20210327 01:25:10.623" endtime="20210327 01:25:10.625"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.627" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:10.626" endtime="20210327 01:25:10.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:10.630" level="INFO">${phone_external_key} = 4071d90d36b24286bd18be7158b57ee1</msg>
<status status="PASS" starttime="20210327 01:25:10.628" endtime="20210327 01:25:10.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.632" level="INFO">${phone_external_key} = 4071d90d36b24286bd18be7158b57ee1</msg>
<status status="PASS" starttime="20210327 01:25:10.631" endtime="20210327 01:25:10.632"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:10.360" endtime="20210327 01:25:10.633"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:10.635" endtime="20210327 01:25:10.637"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:10.634" endtime="20210327 01:25:10.637"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:10.640" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:10.639" endtime="20210327 01:25:10.640"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:10.641" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 01:25:10.640" endtime="20210327 01:25:10.641"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:10.642" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 01:25:10.869" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:10.641" endtime="20210327 01:25:10.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.872" level="INFO">{'id': '41c787d4d11a4d37b05c48476f7b1676', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/addresses/41c787d4d11a4d37b05c48476f7b1676', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:10.871" endtime="20210327 01:25:10.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.875" level="INFO">c6366fc2d6ab691b</msg>
<status status="PASS" starttime="20210327 01:25:10.873" endtime="20210327 01:25:10.875"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.877" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:10.876" endtime="20210327 01:25:10.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:10.880" level="INFO">${address_external_key} = 41c787d4d11a4d37b05c48476f7b1676</msg>
<status status="PASS" starttime="20210327 01:25:10.878" endtime="20210327 01:25:10.880"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.882" level="INFO">${address_external_key} = 41c787d4d11a4d37b05c48476f7b1676</msg>
<status status="PASS" starttime="20210327 01:25:10.881" endtime="20210327 01:25:10.882"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:10.638" endtime="20210327 01:25:10.882"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:10.884" endtime="20210327 01:25:10.885"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:10.883" endtime="20210327 01:25:10.886"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:10.888" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 01:25:10.888" endtime="20210327 01:25:10.889"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:10.890" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:10.889" endtime="20210327 01:25:10.890"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:10.891" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:10.894" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:10.890" endtime="20210327 01:25:10.894"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:10.895" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:11.177" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:10.894" endtime="20210327 01:25:11.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.178" level="INFO">{'id': 'ec70f924c33a4d548337565b71cf6156', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents/ec70f924c33a4d548337565b71cf6156', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents/ec70f924c33a4d548337565b71cf6156/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:11.178" endtime="20210327 01:25:11.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.179" level="INFO">2ede67955a99075e</msg>
<status status="PASS" starttime="20210327 01:25:11.179" endtime="20210327 01:25:11.179"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.180" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:11.179" endtime="20210327 01:25:11.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:11.180" level="INFO">${document_external_key} = ec70f924c33a4d548337565b71cf6156</msg>
<status status="PASS" starttime="20210327 01:25:11.180" endtime="20210327 01:25:11.180"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.181" level="INFO">${document_external_key} = ec70f924c33a4d548337565b71cf6156</msg>
<status status="PASS" starttime="20210327 01:25:11.181" endtime="20210327 01:25:11.181"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:10.886" endtime="20210327 01:25:11.181"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:11.182" endtime="20210327 01:25:11.182"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:11.181" endtime="20210327 01:25:11.182"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.183" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 01:25:11.183" endtime="20210327 01:25:11.183"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:11.184" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:11.184" endtime="20210327 01:25:11.184"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:11.185" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:11.186" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:11.184" endtime="20210327 01:25:11.186"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:11.187" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:11.533" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:11.187" endtime="20210327 01:25:11.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.536" level="INFO">{'id': '2541d5385fcb48e8a7c35c7cdadac162', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents/2541d5385fcb48e8a7c35c7cdadac162', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents/2541d5385fcb48e8a7c35c7cdadac162/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:11.535" endtime="20210327 01:25:11.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.538" level="INFO">c68942a7ff06e44c</msg>
<status status="PASS" starttime="20210327 01:25:11.538" endtime="20210327 01:25:11.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.540" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:11.539" endtime="20210327 01:25:11.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:11.542" level="INFO">${document_external_key} = 2541d5385fcb48e8a7c35c7cdadac162</msg>
<status status="PASS" starttime="20210327 01:25:11.540" endtime="20210327 01:25:11.542"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.544" level="INFO">${document_external_key} = 2541d5385fcb48e8a7c35c7cdadac162</msg>
<status status="PASS" starttime="20210327 01:25:11.542" endtime="20210327 01:25:11.544"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:11.183" endtime="20210327 01:25:11.544"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:11.545" endtime="20210327 01:25:11.547"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:11.544" endtime="20210327 01:25:11.547"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.548" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 01:25:11.548" endtime="20210327 01:25:11.548"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:11.548" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:11.548" endtime="20210327 01:25:11.548"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:11.548" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:11.549" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:11.548" endtime="20210327 01:25:11.549"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:11.550" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:11.882" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:11.550" endtime="20210327 01:25:11.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.885" level="INFO">{'id': '1b60b647d4e644aea50c9d385199ff00', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents/1b60b647d4e644aea50c9d385199ff00', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/documents/1b60b647d4e644aea50c9d385199ff00/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:11.883" endtime="20210327 01:25:11.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.889" level="INFO">b9da111b34ba242f</msg>
<status status="PASS" starttime="20210327 01:25:11.887" endtime="20210327 01:25:11.889"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.892" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:11.891" endtime="20210327 01:25:11.892"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:11.895" level="INFO">${document_external_key} = 1b60b647d4e644aea50c9d385199ff00</msg>
<status status="PASS" starttime="20210327 01:25:11.893" endtime="20210327 01:25:11.895"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:11.896" level="INFO">${document_external_key} = 1b60b647d4e644aea50c9d385199ff00</msg>
<status status="PASS" starttime="20210327 01:25:11.896" endtime="20210327 01:25:11.897"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:11.547" endtime="20210327 01:25:11.897"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:11.899" endtime="20210327 01:25:11.900"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:11.897" endtime="20210327 01:25:11.900"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:11.902" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:11.901" endtime="20210327 01:25:11.902"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:11.903" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:12.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:11.902" endtime="20210327 01:25:12.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:12.241" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 01:25:12.239" endtime="20210327 01:25:12.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:12.243" level="INFO">32850373556e3399</msg>
<status status="PASS" starttime="20210327 01:25:12.242" endtime="20210327 01:25:12.243"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:12.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:12.244" endtime="20210327 01:25:12.246"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:11.900" endtime="20210327 01:25:12.246"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:12.248" endtime="20210327 01:25:12.250"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:12.247" endtime="20210327 01:25:12.250"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 01:25:12.252" level="INFO">${assessment_id} = 0fed6e44-c346-4852-a5b3-c2a8adb1efea</msg>
<status status="PASS" starttime="20210327 01:25:12.252" endtime="20210327 01:25:12.252"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 01:25:12.253" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 01:25:12.253" endtime="20210327 01:25:12.253"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 01:25:12.255" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 01:25:12.254" endtime="20210327 01:25:12.255"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 01:25:12.256" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 01:25:12.255" endtime="20210327 01:25:12.256"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:12.257" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:12.256" endtime="20210327 01:25:12.257"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:12.258" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 01:25:12.257" endtime="20210327 01:25:12.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:12.260" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/216b0d1531db4f4eada08d82cbb6b32e/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "216b0d1531db4f4eada08d82cbb6b32e", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "0fed6e44-c346-4852-a5b3-c2a8adb1efea" } } 
json=None</msg>
<msg timestamp="20210327 01:25:12.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:12.259" endtime="20210327 01:25:12.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:12.496" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 01:25:12.494" endtime="20210327 01:25:12.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:12.498" level="INFO">8a4810de98005de5</msg>
<status status="PASS" starttime="20210327 01:25:12.497" endtime="20210327 01:25:12.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:12.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:12.499" endtime="20210327 01:25:12.500"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 01:25:12.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:25:12.500" endtime="20210327 01:25:12.501"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:12.251" endtime="20210327 01:25:12.501"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:12.503" endtime="20210327 01:25:12.504"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:12.502" endtime="20210327 01:25:12.505"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:12.507" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:12.507" endtime="20210327 01:25:12.508"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:12.506" endtime="20210327 01:25:12.508"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:12.510" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/216b0d1531db4f4eada08d82cbb6b32e/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:13.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:12.509" endtime="20210327 01:25:13.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.126" level="INFO">{'items': [{'id': 'a6b99fee7bde4c809866a2dd09b8cd5f', 'holder': '216b0d1531db4f4eada08d82cbb6b32e', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '759900233', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:25:12.690966', 'updated_at': '2021-03-27T04:25:12.690966', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a6b99fee7bde4c809866a2dd09b8cd5f', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 01:25:13.125" endtime="20210327 01:25:13.126"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:13.126" endtime="20210327 01:25:13.127"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:13.128" level="INFO">${account_external_key} = a6b99fee7bde4c809866a2dd09b8cd5f</msg>
<status status="PASS" starttime="20210327 01:25:13.127" endtime="20210327 01:25:13.128"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.128" level="INFO">${account_external_key} = a6b99fee7bde4c809866a2dd09b8cd5f</msg>
<status status="PASS" starttime="20210327 01:25:13.128" endtime="20210327 01:25:13.128"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 01:25:13.129" level="INFO">${account_number} = 759900233</msg>
<status status="PASS" starttime="20210327 01:25:13.129" endtime="20210327 01:25:13.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.130" level="INFO">${account_number} = 759900233</msg>
<status status="PASS" starttime="20210327 01:25:13.130" endtime="20210327 01:25:13.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 01:25:13.131" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:25:13.130" endtime="20210327 01:25:13.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.132" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:25:13.131" endtime="20210327 01:25:13.132"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:12.505" endtime="20210327 01:25:13.132"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:13.133" endtime="20210327 01:25:13.133"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.132" endtime="20210327 01:25:13.133"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.648" endtime="20210327 01:25:13.133"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.648" endtime="20210327 01:25:13.133"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 01:25:13.134" level="INFO">${uuid} = 54b2f92b-c161-4154-85b6-052306e6f5bc</msg>
<status status="PASS" starttime="20210327 01:25:13.134" endtime="20210327 01:25:13.134"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:13.135" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:13.135" endtime="20210327 01:25:13.135"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.135" endtime="20210327 01:25:13.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:13.136" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:13.136" endtime="20210327 01:25:13.136"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:13.137" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "54b2f92b-c161-4154-85b6-052306e6f5bc", "transaction_id": "54b2f92b-c161-4154-85b6-052306e6f5bc", "id": "54b2f92b-c161-4154-85b6-0523...</msg>
<status status="PASS" starttime="20210327 01:25:13.136" endtime="20210327 01:25:13.137"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:13.137" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/54b2f92b-c161-4154-85b6-052306e6f5bc, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "54b2f92b-c161-4154-85b6-052306e6f5bc", "transaction_id": "54b2f92b-c161-4154-85b6-052306e6f5bc", "id": "54b2f92b-c161-4154-85b6-052306e6f5bc", "id_checking_account": "a6b99fee7bde4c809866a2dd09b8cd5f", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "54b2f92b-c161-4154-85b6-052306e6f5bc", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 01:25:13.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:13.137" endtime="20210327 01:25:13.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:13.792" endtime="20210327 01:25:13.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:13.794" endtime="20210327 01:25:13.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:13.795" endtime="20210327 01:25:13.796"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.134" endtime="20210327 01:25:13.796"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:13.798" endtime="20210327 01:25:13.799"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.796" endtime="20210327 01:25:13.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:13.803" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:13.803" endtime="20210327 01:25:13.803"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.803" endtime="20210327 01:25:13.803"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.804" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 01:25:13.804" endtime="20210327 01:25:13.804"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 01:25:13.804" level="INFO">${value} = costarafaela@ig.com.br</msg>
<status status="PASS" starttime="20210327 01:25:13.804" endtime="20210327 01:25:13.804"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:13.805" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:13.804" endtime="20210327 01:25:13.805"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:13.805" level="INFO">${body} = { "type": "email", "value": "costarafaela@ig.com.br" }</msg>
<status status="PASS" starttime="20210327 01:25:13.805" endtime="20210327 01:25:13.805"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:13.805" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/216b0d1531db4f4eada08d82cbb6b32e/accounts/a6b99fee7bde4c809866a2dd09b8cd5f/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "costarafaela@ig.com.br" } 
json=None</msg>
<msg timestamp="20210327 01:25:14.508" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:13.805" endtime="20210327 01:25:14.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:14.511" level="INFO">{'id': 'ca92714d129c456683f07bc35d0e72a6', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T01:25:14.753', 'updated_at': '2021-03-27T01:25:14.753', 'key': {'value': 'costarafaela@ig.com.br', 'type': 'email'}, 'account': {'id': 'a6b99fee7bde4c809866a2dd09b8cd5f', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '216b0d1531db4f4eada08d82cbb6b32e', 'owner': {'name': 'Holder de teste', 'national_registration': '16529307877', 'type': 'individual'}, 'routing_number': '001', 'number': '759900233', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:25:14.509" endtime="20210327 01:25:14.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:14.513" level="INFO">0dd5d9649474d136</msg>
<status status="PASS" starttime="20210327 01:25:14.512" endtime="20210327 01:25:14.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:14.516" level="INFO">202</msg>
<status status="PASS" starttime="20210327 01:25:14.515" endtime="20210327 01:25:14.516"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:14.517" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:14.517" endtime="20210327 01:25:14.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:14.519" endtime="20210327 01:25:14.520"></status>
</kw>
<msg timestamp="20210327 01:25:14.521" level="INFO">${entry_external_key} = ca92714d129c456683f07bc35d0e72a6</msg>
<status status="PASS" starttime="20210327 01:25:14.518" endtime="20210327 01:25:14.521"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:14.522" level="INFO">${entry_external_key} = ca92714d129c456683f07bc35d0e72a6</msg>
<status status="PASS" starttime="20210327 01:25:14.521" endtime="20210327 01:25:14.522"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:14.523" endtime="20210327 01:25:14.524"></status>
</kw>
<msg timestamp="20210327 01:25:14.524" level="INFO">${entry_key_value} = costarafaela@ig.com.br</msg>
<status status="PASS" starttime="20210327 01:25:14.522" endtime="20210327 01:25:14.524"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 01:25:14.525" level="INFO">${entry_key_value} = costarafaela@ig.com.br</msg>
<status status="PASS" starttime="20210327 01:25:14.525" endtime="20210327 01:25:14.525"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.802" endtime="20210327 01:25:14.525"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:13.800" endtime="20210327 01:25:14.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:14.529" endtime="20210327 01:25:14.529"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:14.528" endtime="20210327 01:25:14.529"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:14.526" endtime="20210327 01:25:14.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:14.530" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:14.530" endtime="20210327 01:25:14.530"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:14.530" endtime="20210327 01:25:14.530"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:14.531" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/216b0d1531db4f4eada08d82cbb6b32e/accounts/a6b99fee7bde4c809866a2dd09b8cd5f/entries/ca92714d129c456683f07bc35d0e72a6/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:15.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:14.531" endtime="20210327 01:25:15.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:15.166" level="INFO">{'code': '2426'}</msg>
<status status="PASS" starttime="20210327 01:25:15.165" endtime="20210327 01:25:15.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:15.169" level="INFO">3289d9efa19bd3c6</msg>
<status status="PASS" starttime="20210327 01:25:15.168" endtime="20210327 01:25:15.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:15.171" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:25:15.170" endtime="20210327 01:25:15.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:15.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:15.173" endtime="20210327 01:25:15.174"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 01:25:15.176" level="INFO">${verification_code} = 2426</msg>
<status status="PASS" starttime="20210327 01:25:15.174" endtime="20210327 01:25:15.176"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:15.177" level="INFO">${verification_code} = 2426</msg>
<status status="PASS" starttime="20210327 01:25:15.177" endtime="20210327 01:25:15.178"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:14.529" endtime="20210327 01:25:15.178"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:14.529" endtime="20210327 01:25:15.178"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:15.178" endtime="20210327 01:25:15.179"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:15.178" endtime="20210327 01:25:15.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:15.180" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:15.180" endtime="20210327 01:25:15.180"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:15.180" endtime="20210327 01:25:15.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:15.181" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:15.181" endtime="20210327 01:25:15.181"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:15.181" level="INFO">${body} = { "code": "2426" }</msg>
<status status="PASS" starttime="20210327 01:25:15.181" endtime="20210327 01:25:15.181"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:15.182" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/216b0d1531db4f4eada08d82cbb6b32e/accounts/a6b99fee7bde4c809866a2dd09b8cd5f/entries/ca92714d129c456683f07bc35d0e72a6/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2426" } 
json=None</msg>
<msg timestamp="20210327 01:25:16.789" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:15.181" endtime="20210327 01:25:16.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:16.792" level="INFO">{'id': 'ca92714d129c456683f07bc35d0e72a6', 'status': 'active', 'created_at': '2021-03-27T01:25:14.753', 'updated_at': '2021-03-27T01:25:17.051', 'key': {'value': 'costarafaela@ig.com.br', 'type': 'email'}, 'account': {'id': 'a6b99fee7bde4c809866a2dd09b8cd5f', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '216b0d1531db4f4eada08d82cbb6b32e', 'owner': {'name': 'Holder de teste', 'national_registration': '16529307877', 'type': 'individual'}, 'routing_number': '001', 'number': '759900233', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:25:16.790" endtime="20210327 01:25:16.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:16.795" level="INFO">f36acb6bcc097a3c</msg>
<status status="PASS" starttime="20210327 01:25:16.794" endtime="20210327 01:25:16.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:16.797" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:25:16.796" endtime="20210327 01:25:16.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:16.799" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:16.798" endtime="20210327 01:25:16.799"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:15.179" endtime="20210327 01:25:16.799"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:15.179" endtime="20210327 01:25:16.799"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:16.801" endtime="20210327 01:25:16.802"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:16.800" endtime="20210327 01:25:16.802"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:09.645" endtime="20210327 01:25:16.803"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:16.805" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:16.805" endtime="20210327 01:25:16.805"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:16.804" endtime="20210327 01:25:16.805"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:16.805" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:16.805" endtime="20210327 01:25:16.805"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:16.806" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210327 01:25:16.806" endtime="20210327 01:25:16.806"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:16.807" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/216b0d1531db4f4eada08d82cbb6b32e/accounts/a6b99fee7bde4c809866a2dd09b8cd5f/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210327 01:25:17.543" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:16.806" endtime="20210327 01:25:17.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.544" level="INFO">{'id': '3a70f5783f3a46c3a1e2ad8c70009b95', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E194682422021032704253434a1d52d4', 'message_id': 'M194682425a7487abbd4ef78a0d723dc', 'amount': 100, 'created_at': '2021-03-27T01:25:17.723464', 'description': 'Envio de PIX', 'debtor': {'national_registration': '16529307877', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '216b0d1531db4f4eada08d82cbb6b32e', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'a6b99fee7bde4c809866a2dd09b8cd5f', 'number': '759900233', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 01:25:17.543" endtime="20210327 01:25:17.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.545" level="INFO">f5a43723fff5ebbf</msg>
<status status="PASS" starttime="20210327 01:25:17.544" endtime="20210327 01:25:17.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.545" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:25:17.545" endtime="20210327 01:25:17.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.546" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:17.545" endtime="20210327 01:25:17.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:17.546" level="INFO">${payment_external_key} = 3a70f5783f3a46c3a1e2ad8c70009b95</msg>
<status status="PASS" starttime="20210327 01:25:17.546" endtime="20210327 01:25:17.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.547" level="INFO">${payment_external_key} = 3a70f5783f3a46c3a1e2ad8c70009b95</msg>
<status status="PASS" starttime="20210327 01:25:17.546" endtime="20210327 01:25:17.547"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 01:25:17.547" level="INFO">${end_to_end_id} = E194682422021032704253434a1d52d4</msg>
<status status="PASS" starttime="20210327 01:25:17.547" endtime="20210327 01:25:17.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.548" level="INFO">${end_to_end_id} = E194682422021032704253434a1d52d4</msg>
<status status="PASS" starttime="20210327 01:25:17.547" endtime="20210327 01:25:17.548"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 01:25:17.548" level="INFO">${message_id} = M194682425a7487abbd4ef78a0d723dc</msg>
<status status="PASS" starttime="20210327 01:25:17.548" endtime="20210327 01:25:17.548"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.549" level="INFO">${message_id} = M194682425a7487abbd4ef78a0d723dc</msg>
<status status="PASS" starttime="20210327 01:25:17.548" endtime="20210327 01:25:17.549"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:16.804" endtime="20210327 01:25:17.549"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:25:17.550" level="INFO">${date} = 2021-03-27 01:25:17.550150</msg>
<status status="PASS" starttime="20210327 01:25:17.550" endtime="20210327 01:25:17.550"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:25:17.551" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 01:25:17.551" endtime="20210327 01:25:17.551"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>${status_code}</arg>
<arg>Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.551" endtime="20210327 01:25:17.552"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.551" endtime="20210327 01:25:17.552"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.552" endtime="20210327 01:25:17.552"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.552" endtime="20210327 01:25:17.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.553" endtime="20210327 01:25:17.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.554" endtime="20210327 01:25:17.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:25:17.554" endtime="20210327 01:25:17.555"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.555" endtime="20210327 01:25:17.555"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.555" endtime="20210327 01:25:17.556"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.556" endtime="20210327 01:25:17.556"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.556" endtime="20210327 01:25:17.556"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.557" endtime="20210327 01:25:17.557"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.557" endtime="20210327 01:25:17.557"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.558" endtime="20210327 01:25:17.558"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.558" endtime="20210327 01:25:17.558"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.559" endtime="20210327 01:25:17.559"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.559" endtime="20210327 01:25:17.559"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.560" endtime="20210327 01:25:17.560"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.560" endtime="20210327 01:25:17.560"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.561" endtime="20210327 01:25:17.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.562" endtime="20210327 01:25:17.562"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.562" endtime="20210327 01:25:17.562"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.562" endtime="20210327 01:25:17.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.563" endtime="20210327 01:25:17.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:17.563" endtime="20210327 01:25:17.564"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.549" endtime="20210327 01:25:17.564"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 01:25:09.644" endtime="20210327 01:25:17.564" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma pagamento PIX</doc>
<status status="FAIL" starttime="20210327 01:25:00.345" endtime="20210327 01:25:17.567"></status>
</suite>
<status status="FAIL" starttime="20210327 01:24:35.126" endtime="20210327 01:25:17.569"></status>
</suite>
<suite id="s1-s2" name="Recebimento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento">
<suite id="s1-s2-s1" name="Receber Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento\Receber Pagamento PIX.robot">
<test id="s1-s2-s1-t1" name="Cenário: Receber PIX">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=phone</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 01:25:17.645" level="INFO">${phone} = 44364707</msg>
<status status="PASS" starttime="20210327 01:25:17.645" endtime="20210327 01:25:17.645"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 01:25:17.645" level="INFO">${phone_pix} = +5521944364707</msg>
<status status="PASS" starttime="20210327 01:25:17.645" endtime="20210327 01:25:17.645"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.646" level="INFO">${phone_pix} = +5521944364707</msg>
<status status="PASS" starttime="20210327 01:25:17.645" endtime="20210327 01:25:17.646"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 01:25:17.646" level="INFO">${email_pix} = isabellyda-cunha@gmail.com</msg>
<status status="PASS" starttime="20210327 01:25:17.646" endtime="20210327 01:25:17.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.647" level="INFO">${email_pix} = isabellyda-cunha@gmail.com</msg>
<status status="PASS" starttime="20210327 01:25:17.646" endtime="20210327 01:25:17.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:17.648" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:17.648" endtime="20210327 01:25:17.648"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.647" endtime="20210327 01:25:17.648"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:17.649" level="INFO">${national_registration} = 854.219.360-15</msg>
<status status="PASS" starttime="20210327 01:25:17.648" endtime="20210327 01:25:17.649"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:17.649" level="INFO">${national_registration} = 854219360-15</msg>
<status status="PASS" starttime="20210327 01:25:17.649" endtime="20210327 01:25:17.649"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 01:25:17.649" level="INFO">${national_registration} = 85421936015</msg>
<status status="PASS" starttime="20210327 01:25:17.649" endtime="20210327 01:25:17.649"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.650" level="INFO">${national_registration} = 85421936015</msg>
<status status="PASS" starttime="20210327 01:25:17.650" endtime="20210327 01:25:17.650"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 01:25:17.650" level="INFO">${identity_card} = 864537219</msg>
<status status="PASS" starttime="20210327 01:25:17.650" endtime="20210327 01:25:17.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.651" level="INFO">${identity_card} = 864537219</msg>
<status status="PASS" starttime="20210327 01:25:17.650" endtime="20210327 01:25:17.651"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:17.652" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:17.652" endtime="20210327 01:25:17.652"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.651" endtime="20210327 01:25:17.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.653" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 01:25:17.652" endtime="20210327 01:25:17.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:25:17.653" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:25:17.653" endtime="20210327 01:25:17.653"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:17.653" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:17.653" endtime="20210327 01:25:17.654"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:17.654" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85421936015", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 01:25:17.654" endtime="20210327 01:25:17.654"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:17.655" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85421936015", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "864537219", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 01:25:18.330" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:17.655" endtime="20210327 01:25:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.331" level="INFO">{'id': '30ff6b8c299345f2a6e5332868281aa6', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T01:25:18.558046', 'updated_at': '2021-03-27T01:25:18.558048', 'type': 'individual', 'national_registration': '85421936015', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '864537219', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:18.331" endtime="20210327 01:25:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.332" level="INFO">82a7000b456acf4c</msg>
<status status="PASS" starttime="20210327 01:25:18.332" endtime="20210327 01:25:18.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.333" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "85421936015", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "864537219", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 01:25:18.332" endtime="20210327 01:25:18.333"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.333" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:18.333" endtime="20210327 01:25:18.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:18.334" level="INFO">${holder_external_key} = 30ff6b8c299345f2a6e5332868281aa6</msg>
<status status="PASS" starttime="20210327 01:25:18.334" endtime="20210327 01:25:18.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.335" level="INFO">${holder_external_key} = 30ff6b8c299345f2a6e5332868281aa6</msg>
<status status="PASS" starttime="20210327 01:25:18.335" endtime="20210327 01:25:18.335"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.651" endtime="20210327 01:25:18.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.336" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 01:25:18.335" endtime="20210327 01:25:18.336"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:18.337" endtime="20210327 01:25:18.337"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:18.336" endtime="20210327 01:25:18.337"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:18.339" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:18.338" endtime="20210327 01:25:18.339"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:18.339" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 01:25:18.339" endtime="20210327 01:25:18.339"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:18.340" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 01:25:18.594" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:18.340" endtime="20210327 01:25:18.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.596" level="INFO">{'id': '872fac2496a6499cab6611d45bc53456', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/phones/872fac2496a6499cab6611d45bc53456', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:18.595" endtime="20210327 01:25:18.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.599" level="INFO">b0723db8cc0d97f9</msg>
<status status="PASS" starttime="20210327 01:25:18.598" endtime="20210327 01:25:18.599"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.602" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:18.600" endtime="20210327 01:25:18.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:18.605" level="INFO">${phone_external_key} = 872fac2496a6499cab6611d45bc53456</msg>
<status status="PASS" starttime="20210327 01:25:18.603" endtime="20210327 01:25:18.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.606" level="INFO">${phone_external_key} = 872fac2496a6499cab6611d45bc53456</msg>
<status status="PASS" starttime="20210327 01:25:18.605" endtime="20210327 01:25:18.606"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:18.338" endtime="20210327 01:25:18.607"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:18.608" endtime="20210327 01:25:18.609"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:18.607" endtime="20210327 01:25:18.610"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:18.611" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:18.611" endtime="20210327 01:25:18.612"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:18.613" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 01:25:18.612" endtime="20210327 01:25:18.613"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:18.614" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 01:25:18.847" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:18.614" endtime="20210327 01:25:18.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.848" level="INFO">{'id': 'dfa33f8b40de431a9efe29b776ad78b4', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/addresses/dfa33f8b40de431a9efe29b776ad78b4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:18.847" endtime="20210327 01:25:18.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.849" level="INFO">19a76a279587c5d2</msg>
<status status="PASS" starttime="20210327 01:25:18.848" endtime="20210327 01:25:18.849"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.849" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:18.849" endtime="20210327 01:25:18.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:18.850" level="INFO">${address_external_key} = dfa33f8b40de431a9efe29b776ad78b4</msg>
<status status="PASS" starttime="20210327 01:25:18.849" endtime="20210327 01:25:18.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.851" level="INFO">${address_external_key} = dfa33f8b40de431a9efe29b776ad78b4</msg>
<status status="PASS" starttime="20210327 01:25:18.850" endtime="20210327 01:25:18.851"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:18.610" endtime="20210327 01:25:18.851"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:18.851" endtime="20210327 01:25:18.852"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:18.851" endtime="20210327 01:25:18.852"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:18.853" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 01:25:18.853" endtime="20210327 01:25:18.853"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:18.853" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:18.853" endtime="20210327 01:25:18.853"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:18.854" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:18.855" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:18.854" endtime="20210327 01:25:18.855"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:18.856" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:19.216" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:18.856" endtime="20210327 01:25:19.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.217" level="INFO">{'id': '0c20fc15976040d1b8b330463f6093f3', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents/0c20fc15976040d1b8b330463f6093f3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents/0c20fc15976040d1b8b330463f6093f3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:19.217" endtime="20210327 01:25:19.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.218" level="INFO">d28d241d621dea10</msg>
<status status="PASS" starttime="20210327 01:25:19.218" endtime="20210327 01:25:19.218"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.219" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:19.218" endtime="20210327 01:25:19.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:19.220" level="INFO">${document_external_key} = 0c20fc15976040d1b8b330463f6093f3</msg>
<status status="PASS" starttime="20210327 01:25:19.219" endtime="20210327 01:25:19.220"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.221" level="INFO">${document_external_key} = 0c20fc15976040d1b8b330463f6093f3</msg>
<status status="PASS" starttime="20210327 01:25:19.220" endtime="20210327 01:25:19.221"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:18.852" endtime="20210327 01:25:19.221"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:19.223" endtime="20210327 01:25:19.224"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:19.221" endtime="20210327 01:25:19.224"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.226" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 01:25:19.224" endtime="20210327 01:25:19.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:19.226" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:19.226" endtime="20210327 01:25:19.226"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:19.227" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:19.229" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:19.227" endtime="20210327 01:25:19.229"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:19.231" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:19.532" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:19.229" endtime="20210327 01:25:19.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.534" level="INFO">{'id': '85fe38b4df2b467e9a6e85bad97e2ce2', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents/85fe38b4df2b467e9a6e85bad97e2ce2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents/85fe38b4df2b467e9a6e85bad97e2ce2/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:19.533" endtime="20210327 01:25:19.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.537" level="INFO">2024d5304584ae03</msg>
<status status="PASS" starttime="20210327 01:25:19.536" endtime="20210327 01:25:19.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.539" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:19.538" endtime="20210327 01:25:19.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:19.542" level="INFO">${document_external_key} = 85fe38b4df2b467e9a6e85bad97e2ce2</msg>
<status status="PASS" starttime="20210327 01:25:19.541" endtime="20210327 01:25:19.542"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.544" level="INFO">${document_external_key} = 85fe38b4df2b467e9a6e85bad97e2ce2</msg>
<status status="PASS" starttime="20210327 01:25:19.543" endtime="20210327 01:25:19.544"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:19.224" endtime="20210327 01:25:19.544"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:19.546" endtime="20210327 01:25:19.547"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:19.545" endtime="20210327 01:25:19.547"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.550" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 01:25:19.549" endtime="20210327 01:25:19.550"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:19.551" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 01:25:19.550" endtime="20210327 01:25:19.551"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 01:25:19.552" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 01:25:19.553" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 01:25:19.551" endtime="20210327 01:25:19.553"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:19.554" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 01:25:19.889" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:19.553" endtime="20210327 01:25:19.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.890" level="INFO">{'id': 'c40402fbf41f4eb39d35b22cc6c63a2b', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents/c40402fbf41f4eb39d35b22cc6c63a2b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/documents/c40402fbf41f4eb39d35b22cc6c63a2b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 01:25:19.889" endtime="20210327 01:25:19.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.891" level="INFO">a8e34001e95eacb9</msg>
<status status="PASS" starttime="20210327 01:25:19.891" endtime="20210327 01:25:19.891"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.892" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:19.891" endtime="20210327 01:25:19.892"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:19.892" level="INFO">${document_external_key} = c40402fbf41f4eb39d35b22cc6c63a2b</msg>
<status status="PASS" starttime="20210327 01:25:19.892" endtime="20210327 01:25:19.892"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:19.893" level="INFO">${document_external_key} = c40402fbf41f4eb39d35b22cc6c63a2b</msg>
<status status="PASS" starttime="20210327 01:25:19.893" endtime="20210327 01:25:19.893"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:19.548" endtime="20210327 01:25:19.893"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:19.894" endtime="20210327 01:25:19.895"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:19.893" endtime="20210327 01:25:19.895"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:19.896" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:19.895" endtime="20210327 01:25:19.896"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:19.897" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:20.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:19.896" endtime="20210327 01:25:20.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:20.199" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 01:25:20.198" endtime="20210327 01:25:20.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:20.200" level="INFO">ea8bf95cf5a1eae8</msg>
<status status="PASS" starttime="20210327 01:25:20.200" endtime="20210327 01:25:20.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:20.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:20.201" endtime="20210327 01:25:20.202"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:19.895" endtime="20210327 01:25:20.202"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:20.204" endtime="20210327 01:25:20.205"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:20.203" endtime="20210327 01:25:20.205"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 01:25:20.206" level="INFO">${assessment_id} = acdef697-fa7b-4cab-9997-f5afe058beda</msg>
<status status="PASS" starttime="20210327 01:25:20.206" endtime="20210327 01:25:20.206"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 01:25:20.207" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 01:25:20.207" endtime="20210327 01:25:20.207"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 01:25:20.208" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 01:25:20.208" endtime="20210327 01:25:20.208"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 01:25:20.209" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 01:25:20.208" endtime="20210327 01:25:20.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:20.210" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:20.209" endtime="20210327 01:25:20.210"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:20.211" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 01:25:20.210" endtime="20210327 01:25:20.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:20.212" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/30ff6b8c299345f2a6e5332868281aa6/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "30ff6b8c299345f2a6e5332868281aa6", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "acdef697-fa7b-4cab-9997-f5afe058beda" } } 
json=None</msg>
<msg timestamp="20210327 01:25:20.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:20.211" endtime="20210327 01:25:20.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:20.444" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 01:25:20.443" endtime="20210327 01:25:20.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:20.446" level="INFO">3e3d6bd8fdbacd06</msg>
<status status="PASS" starttime="20210327 01:25:20.445" endtime="20210327 01:25:20.446"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:20.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:20.447" endtime="20210327 01:25:20.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 01:25:20.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 01:25:20.448" endtime="20210327 01:25:20.449"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:20.205" endtime="20210327 01:25:20.449"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:20.451" endtime="20210327 01:25:20.452"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:20.450" endtime="20210327 01:25:20.452"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:20.454" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:20.454" endtime="20210327 01:25:20.455"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:20.453" endtime="20210327 01:25:20.455"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:20.456" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/30ff6b8c299345f2a6e5332868281aa6/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:21.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:20.455" endtime="20210327 01:25:21.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.085" level="INFO">{'items': [{'id': '8d8f0657dad04b2ea3048597801960f5', 'holder': '30ff6b8c299345f2a6e5332868281aa6', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '2120451722', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-27T04:25:20.651542', 'updated_at': '2021-03-27T04:25:20.651542', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/8d8f0657dad04b2ea3048597801960f5', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 01:25:21.085" endtime="20210327 01:25:21.086"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:21.086" endtime="20210327 01:25:21.087"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 01:25:21.088" level="INFO">${account_external_key} = 8d8f0657dad04b2ea3048597801960f5</msg>
<status status="PASS" starttime="20210327 01:25:21.087" endtime="20210327 01:25:21.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.088" level="INFO">${account_external_key} = 8d8f0657dad04b2ea3048597801960f5</msg>
<status status="PASS" starttime="20210327 01:25:21.088" endtime="20210327 01:25:21.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 01:25:21.089" level="INFO">${account_number} = 2120451722</msg>
<status status="PASS" starttime="20210327 01:25:21.088" endtime="20210327 01:25:21.089"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.089" level="INFO">${account_number} = 2120451722</msg>
<status status="PASS" starttime="20210327 01:25:21.089" endtime="20210327 01:25:21.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 01:25:21.090" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:25:21.090" endtime="20210327 01:25:21.090"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.090" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 01:25:21.090" endtime="20210327 01:25:21.090"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:20.452" endtime="20210327 01:25:21.091"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:21.091" endtime="20210327 01:25:21.091"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.091" endtime="20210327 01:25:21.092"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.647" endtime="20210327 01:25:21.092"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.647" endtime="20210327 01:25:21.092"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 01:25:21.092" level="INFO">${uuid} = 6dcfbe41-8f8e-40d9-baa4-04f6a44d9975</msg>
<status status="PASS" starttime="20210327 01:25:21.092" endtime="20210327 01:25:21.092"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:21.093" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:21.093" endtime="20210327 01:25:21.093"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.093" endtime="20210327 01:25:21.094"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:21.094" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:21.094" endtime="20210327 01:25:21.094"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:21.095" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "6dcfbe41-8f8e-40d9-baa4-04f6a44d9975", "transaction_id": "6dcfbe41-8f8e-40d9-baa4-04f6a44d9975", "id": "6dcfbe41-8f8e-40d9-baa4-04f6...</msg>
<status status="PASS" starttime="20210327 01:25:21.094" endtime="20210327 01:25:21.095"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:21.095" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/6dcfbe41-8f8e-40d9-baa4-04f6a44d9975, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "6dcfbe41-8f8e-40d9-baa4-04f6a44d9975", "transaction_id": "6dcfbe41-8f8e-40d9-baa4-04f6a44d9975", "id": "6dcfbe41-8f8e-40d9-baa4-04f6a44d9975", "id_checking_account": "8d8f0657dad04b2ea3048597801960f5", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "6dcfbe41-8f8e-40d9-baa4-04f6a44d9975", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 01:25:21.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:21.095" endtime="20210327 01:25:21.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:21.769" endtime="20210327 01:25:21.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:21.770" endtime="20210327 01:25:21.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:21.771" endtime="20210327 01:25:21.771"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.092" endtime="20210327 01:25:21.773"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:21.773" endtime="20210327 01:25:21.773"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.773" endtime="20210327 01:25:21.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:21.777" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:21.776" endtime="20210327 01:25:21.778"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.776" endtime="20210327 01:25:21.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.779" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210327 01:25:21.778" endtime="20210327 01:25:21.779"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 01:25:21.779" level="INFO">${value} = +5521944364707</msg>
<status status="PASS" starttime="20210327 01:25:21.779" endtime="20210327 01:25:21.779"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:21.779" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:21.779" endtime="20210327 01:25:21.779"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:21.780" level="INFO">${body} = { "type": "phone", "value": "+5521944364707" }</msg>
<status status="PASS" starttime="20210327 01:25:21.780" endtime="20210327 01:25:21.780"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:21.781" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/30ff6b8c299345f2a6e5332868281aa6/accounts/8d8f0657dad04b2ea3048597801960f5/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521944364707" } 
json=None</msg>
<msg timestamp="20210327 01:25:22.471" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:21.780" endtime="20210327 01:25:22.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:22.474" level="INFO">{'id': '4aa3b8fdff834ce0ae8f904a347c0a95', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T01:25:22.700', 'updated_at': '2021-03-27T01:25:22.700', 'key': {'value': '+5521944364707', 'type': 'phone'}, 'account': {'id': '8d8f0657dad04b2ea3048597801960f5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '30ff6b8c299345f2a6e5332868281aa6', 'owner': {'name': 'Holder de teste', 'national_registration': '85421936015', 'type': 'individual'}, 'routing_number': '001', 'number': '2120451722', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:25:22.472" endtime="20210327 01:25:22.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:22.476" level="INFO">38d838723aee7e07</msg>
<status status="PASS" starttime="20210327 01:25:22.475" endtime="20210327 01:25:22.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:22.477" level="INFO">202</msg>
<status status="PASS" starttime="20210327 01:25:22.477" endtime="20210327 01:25:22.478"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:22.478" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:22.478" endtime="20210327 01:25:22.478"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:22.479" endtime="20210327 01:25:22.479"></status>
</kw>
<msg timestamp="20210327 01:25:22.479" level="INFO">${entry_external_key} = 4aa3b8fdff834ce0ae8f904a347c0a95</msg>
<status status="PASS" starttime="20210327 01:25:22.478" endtime="20210327 01:25:22.479"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 01:25:22.480" level="INFO">${entry_external_key} = 4aa3b8fdff834ce0ae8f904a347c0a95</msg>
<status status="PASS" starttime="20210327 01:25:22.479" endtime="20210327 01:25:22.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:22.480" endtime="20210327 01:25:22.481"></status>
</kw>
<msg timestamp="20210327 01:25:22.481" level="INFO">${entry_key_value} = +5521944364707</msg>
<status status="PASS" starttime="20210327 01:25:22.480" endtime="20210327 01:25:22.481"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 01:25:22.481" level="INFO">${entry_key_value} = +5521944364707</msg>
<status status="PASS" starttime="20210327 01:25:22.481" endtime="20210327 01:25:22.481"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.776" endtime="20210327 01:25:22.481"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:21.774" endtime="20210327 01:25:22.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:22.482" endtime="20210327 01:25:22.483"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:22.482" endtime="20210327 01:25:22.483"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:22.481" endtime="20210327 01:25:22.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:22.484" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:22.484" endtime="20210327 01:25:22.485"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:22.484" endtime="20210327 01:25:22.485"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:22.485" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/30ff6b8c299345f2a6e5332868281aa6/accounts/8d8f0657dad04b2ea3048597801960f5/entries/4aa3b8fdff834ce0ae8f904a347c0a95/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 01:25:23.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:22.485" endtime="20210327 01:25:23.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:23.131" level="INFO">{'code': '6817'}</msg>
<status status="PASS" starttime="20210327 01:25:23.130" endtime="20210327 01:25:23.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:23.131" level="INFO">230a48ebd52ffc88</msg>
<status status="PASS" starttime="20210327 01:25:23.131" endtime="20210327 01:25:23.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:23.132" level="INFO">200</msg>
<status status="PASS" starttime="20210327 01:25:23.132" endtime="20210327 01:25:23.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:23.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:23.132" endtime="20210327 01:25:23.133"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 01:25:23.134" level="INFO">${verification_code} = 6817</msg>
<status status="PASS" starttime="20210327 01:25:23.133" endtime="20210327 01:25:23.134"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:23.134" level="INFO">${verification_code} = 6817</msg>
<status status="PASS" starttime="20210327 01:25:23.134" endtime="20210327 01:25:23.134"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:22.483" endtime="20210327 01:25:23.134"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:22.483" endtime="20210327 01:25:23.134"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:23.135" endtime="20210327 01:25:23.136"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:23.135" endtime="20210327 01:25:23.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 01:25:23.138" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 01:25:23.138" endtime="20210327 01:25:23.138"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:23.137" endtime="20210327 01:25:23.138"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 01:25:23.139" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 01:25:23.138" endtime="20210327 01:25:23.139"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 01:25:23.139" level="INFO">${body} = { "code": "6817" }</msg>
<status status="PASS" starttime="20210327 01:25:23.139" endtime="20210327 01:25:23.139"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 01:25:23.140" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/30ff6b8c299345f2a6e5332868281aa6/accounts/8d8f0657dad04b2ea3048597801960f5/entries/4aa3b8fdff834ce0ae8f904a347c0a95/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6817" } 
json=None</msg>
<msg timestamp="20210327 01:25:24.690" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:23.139" endtime="20210327 01:25:24.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 01:25:24.693" level="INFO">{'id': '4aa3b8fdff834ce0ae8f904a347c0a95', 'status': 'active', 'created_at': '2021-03-27T01:25:22.700', 'updated_at': '2021-03-27T01:25:24.953', 'key': {'value': '+5521944364707', 'type': 'phone'}, 'account': {'id': '8d8f0657dad04b2ea3048597801960f5', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '30ff6b8c299345f2a6e5332868281aa6', 'owner': {'name': 'Holder de teste', 'national_registration': '85421936015', 'type': 'individual'}, 'routing_number': '001', 'number': '2120451722', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 01:25:24.691" endtime="20210327 01:25:24.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 01:25:24.695" level="INFO">24261ad6e3d940e1</msg>
<status status="PASS" starttime="20210327 01:25:24.694" endtime="20210327 01:25:24.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 01:25:24.697" level="INFO">201</msg>
<status status="PASS" starttime="20210327 01:25:24.696" endtime="20210327 01:25:24.697"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 01:25:24.698" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 01:25:24.697" endtime="20210327 01:25:24.699"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:23.137" endtime="20210327 01:25:24.699"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:23.136" endtime="20210327 01:25:24.699"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 01:25:24.701" endtime="20210327 01:25:24.702"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:24.699" endtime="20210327 01:25:24.702"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:17.644" endtime="20210327 01:25:24.703"></status>
</kw>
<kw name="gerar end_to_end_id" library="end_to_end_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:25:24.706" level="INFO">${date} = 2021-03-27 01:25:24.705931</msg>
<status status="PASS" starttime="20210327 01:25:24.705" endtime="20210327 01:25:24.706"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 01:25:24.707" level="INFO">${datetime} = 202103270125</msg>
<status status="PASS" starttime="20210327 01:25:24.706" endtime="20210327 01:25:24.707"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210327 01:25:24.708" level="INFO">${random_number_end_to_end_id} = 74004458791</msg>
<status status="PASS" starttime="20210327 01:25:24.707" endtime="20210327 01:25:24.708"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 01:25:24.709" level="INFO">${end_to_end_id} = E1946824220210327012574004458791</msg>
<status status="PASS" starttime="20210327 01:25:24.708" endtime="20210327 01:25:24.709"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 01:25:24.710" level="INFO">${end_to_end_id} = E1946824220210327012574004458791</msg>
<status status="PASS" starttime="20210327 01:25:24.709" endtime="20210327 01:25:24.710"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:24.704" endtime="20210327 01:25:24.710"></status>
</kw>
<kw name="gerar message_id" library="message_id_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 01:25:24.711" level="INFO">${date} = 2021-03-27 01:25:24.709866</msg>
<status status="PASS" starttime="20210327 01:25:24.710" endtime="20210327 01:25:24.711"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 01:25:24.711" level="INFO">${datetime} = 202103270125</msg>
<status status="PASS" starttime="20210327 01:25:24.711" endtime="20210327 01:25:24.711"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210327 01:25:24.711" level="INFO">${random_number_message_id} = 41448636180314900811997</msg>
<status status="PASS" starttime="20210327 01:25:24.711" endtime="20210327 01:25:24.711"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 01:25:24.712" level="INFO">${message_id} = M1946824241448636180314900811997</msg>
<status status="PASS" starttime="20210327 01:25:24.712" endtime="20210327 01:25:24.712"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 01:25:24.713" level="INFO">${message_id} = M1946824241448636180314900811997</msg>
<status status="PASS" starttime="20210327 01:25:24.712" endtime="20210327 01:25:24.713"></status>
</kw>
<status status="PASS" starttime="20210327 01:25:24.710" endtime="20210327 01:25:24.713"></status>
</kw>
<doc>Receber PIX com sucesso</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 01:25:17.643" endtime="20210327 01:25:24.714" critical="yes"></status>
</test>
<doc>Funcionalidade: Recebimento de PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo receber um pagamento PIX</doc>
<status status="PASS" starttime="20210327 01:25:17.573" endtime="20210327 01:25:24.717"></status>
</suite>
<status status="PASS" starttime="20210327 01:25:17.571" endtime="20210327 01:25:24.720"></status>
</suite>
<status status="FAIL" starttime="20210327 01:24:35.103" endtime="20210327 01:25:24.721"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="1">Critical Tests</stat>
<stat pass="4" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">regression_test</stat>
<stat pass="3" fail="1">smoke_test</stat>
</tag>
<suite>
<stat pass="4" fail="1" id="s1" name="Pix-Payments">Pix-Payments</stat>
<stat pass="3" fail="1" id="s1-s1" name="Envio">Pix-Payments.Envio</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Cancelar Pagamento PIX">Pix-Payments.Envio.Cancelar Pagamento PIX</stat>
<stat pass="1" fail="0" id="s1-s1-s2" name="Confirmar Pagamento PIX">Pix-Payments.Envio.Confirmar Pagamento PIX</stat>
<stat pass="1" fail="1" id="s1-s1-s3" name="Criar Pagamento PIX">Pix-Payments.Envio.Criar Pagamento PIX</stat>
<stat pass="1" fail="0" id="s1-s2" name="Recebimento">Pix-Payments.Recebimento</stat>
<stat pass="1" fail="0" id="s1-s2-s1" name="Receber Pagamento PIX">Pix-Payments.Recebimento.Receber Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210321 21:44:36.159" generator="Robot 3.1.2 (Python 2.7.17 on win32)">
<suite source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments" id="s1" name="Pix-Payments">
<suite source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio" id="s1-s1" name="Envio">
<suite source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot" id="s1-s1-s1" name="Criar Pagamento PIX">
<test id="s1-s1-s1-t1" name="CenÃ¡rio: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210321 21:44:37.079" level="INFO">${phone} = 57308798</msg>
<status status="PASS" endtime="20210321 21:44:37.080" starttime="20210321 21:44:37.079"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210321 21:44:37.080" level="INFO">${phone_pix} = +5521957308798</msg>
<status status="PASS" endtime="20210321 21:44:37.080" starttime="20210321 21:44:37.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.081" level="INFO">${phone_pix} = +5521957308798</msg>
<status status="PASS" endtime="20210321 21:44:37.081" starttime="20210321 21:44:37.081"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210321 21:44:37.082" level="INFO">${email_pix} = jesussabrina@hotmail.com</msg>
<status status="PASS" endtime="20210321 21:44:37.082" starttime="20210321 21:44:37.082"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.083" level="INFO">${email_pix} = jesussabrina@hotmail.com</msg>
<status status="PASS" endtime="20210321 21:44:37.083" starttime="20210321 21:44:37.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:37.085" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:37.086" starttime="20210321 21:44:37.085"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:37.086" starttime="20210321 21:44:37.084"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:37.086" level="INFO">${national_registration} = 03.765.892/0001-00</msg>
<status status="PASS" endtime="20210321 21:44:37.086" starttime="20210321 21:44:37.086"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:37.087" level="INFO">${national_registration} = 03765892/0001-00</msg>
<status status="PASS" endtime="20210321 21:44:37.087" starttime="20210321 21:44:37.087"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:37.088" level="INFO">${national_registration} = 03765892/000100</msg>
<status status="PASS" endtime="20210321 21:44:37.088" starttime="20210321 21:44:37.088"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:37.089" level="INFO">${national_registration} = 03765892000100</msg>
<status status="PASS" endtime="20210321 21:44:37.089" starttime="20210321 21:44:37.088"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.090" level="INFO">${national_registration} = 03765892000100</msg>
<status status="PASS" endtime="20210321 21:44:37.090" starttime="20210321 21:44:37.089"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210321 21:44:37.090" level="INFO">${identity_card} = 832470569</msg>
<status status="PASS" endtime="20210321 21:44:37.090" starttime="20210321 21:44:37.090"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.091" level="INFO">${identity_card} = 832470569</msg>
<status status="PASS" endtime="20210321 21:44:37.091" starttime="20210321 21:44:37.091"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:37.093" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:37.094" starttime="20210321 21:44:37.093"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:37.094" starttime="20210321 21:44:37.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.095" level="INFO">${holder_type} = business</msg>
<status status="PASS" endtime="20210321 21:44:37.095" starttime="20210321 21:44:37.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.096" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" endtime="20210321 21:44:37.096" starttime="20210321 21:44:37.095"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210321 21:44:37.096" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" endtime="20210321 21:44:37.097" starttime="20210321 21:44:37.096"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:37.098" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:37.098" starttime="20210321 21:44:37.097"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:37.100" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "03765892000100", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" endtime="20210321 21:44:37.100" starttime="20210321 21:44:37.098"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:37.102" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "03765892000100", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210321 21:44:38.586" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:38.586" starttime="20210321 21:44:37.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.588" level="INFO">{u'status': u'waiting_info_and_documents', u'legal_name': u'Nome Legal da Empresa', u'marketplace_id': u'f71a8951368a4cc085cf7875ff44e61c', u'cnae': u'0111301', u'revenue': 1005500.0, u'marketplace_name': u'Marketplace de Teste', u'establishment': {u'date': u'2012-04-25', u'format': u'mei'}, u'created_at': u'2021-03-21T21:44:38.471051', u'updated_at': u'2021-03-21T21:44:38.471054', u'id': u'9870f1f6c74d4821a5f29973b5d8e029', u'_links': {u'partners': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners', u'type': u'GET'}, u'documents': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/documents', u'type': u'GET'}, u'addresses': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/addresses', u'type': u'GET'}, u'phones': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/phones', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}, u'associates': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/associates', u'type': u'GET'}}, u'national_registration': u'03765892000100', u'type': u'business', u'email': u'contato@teste.com.br', u'name': u'Holder de teste'}</msg>
<status status="PASS" endtime="20210321 21:44:38.589" starttime="20210321 21:44:38.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.590" level="INFO">e6676b5472378302</msg>
<status status="PASS" endtime="20210321 21:44:38.592" starttime="20210321 21:44:38.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.593" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "03765892000100", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" endtime="20210321 21:44:38.593" starttime="20210321 21:44:38.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.595" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:38.595" starttime="20210321 21:44:38.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:38.598" level="INFO">${holder_external_key} = 9870f1f6c74d4821a5f29973b5d8e029</msg>
<status status="PASS" endtime="20210321 21:44:38.598" starttime="20210321 21:44:38.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.600" level="INFO">${holder_external_key} = 9870f1f6c74d4821a5f29973b5d8e029</msg>
<status status="PASS" endtime="20210321 21:44:38.600" starttime="20210321 21:44:38.599"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:38.600" starttime="20210321 21:44:37.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:38.602" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:38.602" starttime="20210321 21:44:38.602"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:38.606" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:38.606" starttime="20210321 21:44:38.605"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:38.608" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" endtime="20210321 21:44:38.608" starttime="20210321 21:44:38.607"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:38.611" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/phones, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210321 21:44:38.871" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:38.871" starttime="20210321 21:44:38.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.874" level="INFO">{u'area_code': u'21', u'number': u'996221236', u'_links': {u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/phones/4c286f7bfa894405862389e83dbba1b2', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'country_code': u'51', u'main': True, u'id': u'4c286f7bfa894405862389e83dbba1b2'}</msg>
<status status="PASS" endtime="20210321 21:44:38.874" starttime="20210321 21:44:38.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.876" level="INFO">c58cc17b26de170b</msg>
<status status="PASS" endtime="20210321 21:44:38.876" starttime="20210321 21:44:38.876"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.879" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:38.879" starttime="20210321 21:44:38.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:38.882" level="INFO">${phone_external_key} = 4c286f7bfa894405862389e83dbba1b2</msg>
<status status="PASS" endtime="20210321 21:44:38.882" starttime="20210321 21:44:38.880"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:38.884" level="INFO">${phone_external_key} = 4c286f7bfa894405862389e83dbba1b2</msg>
<status status="PASS" endtime="20210321 21:44:38.885" starttime="20210321 21:44:38.883"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:38.885" starttime="20210321 21:44:38.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:38.887" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:38.887" starttime="20210321 21:44:38.886"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:38.891" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:38.891" starttime="20210321 21:44:38.890"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:38.895" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" endtime="20210321 21:44:38.895" starttime="20210321 21:44:38.892"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:38.901" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/addresses, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210321 21:44:39.156" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.156" starttime="20210321 21:44:38.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.158" level="INFO">{u'city': u'Rio de Janeiro', u'neighborhood': u'Bairro de Testes', u'country': u'Brasil', u'complement': u'apto 200', u'number': u'90', u'state': u'Rio de Janeiro', u'street': u'Rua de Testes', u'postal_code': u'21550987', u'_links': {u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/addresses/fd186e7663b949b3b9ec625e5119e9e6', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'main': True, u'id': u'fd186e7663b949b3b9ec625e5119e9e6'}</msg>
<status status="PASS" endtime="20210321 21:44:39.159" starttime="20210321 21:44:39.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.161" level="INFO">9733bbb604fb8f00</msg>
<status status="PASS" endtime="20210321 21:44:39.161" starttime="20210321 21:44:39.160"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.163" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.163" starttime="20210321 21:44:39.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:39.166" level="INFO">${address_external_key} = fd186e7663b949b3b9ec625e5119e9e6</msg>
<status status="PASS" endtime="20210321 21:44:39.166" starttime="20210321 21:44:39.164"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.168" level="INFO">${address_external_key} = fd186e7663b949b3b9ec625e5119e9e6</msg>
<status status="PASS" endtime="20210321 21:44:39.168" starttime="20210321 21:44:39.167"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:39.168" starttime="20210321 21:44:38.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:39.170" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.170" starttime="20210321 21:44:39.169"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:39.174" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:39.174" starttime="20210321 21:44:39.173"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:39.175" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:39.183" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:39.183" starttime="20210321 21:44:39.175"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:39.187" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/documents?type=CCMEI, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:39.506" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.506" starttime="20210321 21:44:39.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.509" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'ccmei', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/documents/c76681b6148b47efb2aefcf1a7d0da9a/download', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/documents/c76681b6148b47efb2aefcf1a7d0da9a', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'id': u'c76681b6148b47efb2aefcf1a7d0da9a'}</msg>
<status status="PASS" endtime="20210321 21:44:39.509" starttime="20210321 21:44:39.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.511" level="INFO">df20eca88d96da52</msg>
<status status="PASS" endtime="20210321 21:44:39.512" starttime="20210321 21:44:39.510"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.514" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.514" starttime="20210321 21:44:39.513"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:39.517" level="INFO">${document_external_key} = c76681b6148b47efb2aefcf1a7d0da9a</msg>
<status status="PASS" endtime="20210321 21:44:39.517" starttime="20210321 21:44:39.515"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.519" level="INFO">${document_external_key} = c76681b6148b47efb2aefcf1a7d0da9a</msg>
<status status="PASS" endtime="20210321 21:44:39.519" starttime="20210321 21:44:39.518"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:39.519" starttime="20210321 21:44:39.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:39.522" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.522" starttime="20210321 21:44:39.520"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:39.524" level="INFO">${partner_individual_national_registration} = 906.542.183-15</msg>
<status status="PASS" endtime="20210321 21:44:39.524" starttime="20210321 21:44:39.522"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:39.526" level="INFO">${partner_individual_national_registration} = 906542183-15</msg>
<status status="PASS" endtime="20210321 21:44:39.526" starttime="20210321 21:44:39.525"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:39.528" level="INFO">${partner_individual_national_registration} = 90654218315</msg>
<status status="PASS" endtime="20210321 21:44:39.528" starttime="20210321 21:44:39.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.530" level="INFO">${partner_individual_national_registration} = 90654218315</msg>
<status status="PASS" endtime="20210321 21:44:39.531" starttime="20210321 21:44:39.529"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210321 21:44:39.533" level="INFO">${partner_individual_identity_card} = 284167058</msg>
<status status="PASS" endtime="20210321 21:44:39.533" starttime="20210321 21:44:39.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.534" level="INFO">${partner_individual_identity_card} = 284167058</msg>
<status status="PASS" endtime="20210321 21:44:39.535" starttime="20210321 21:44:39.533"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:39.541" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:39.541" starttime="20210321 21:44:39.540"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:39.579" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "90654218315", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e...</msg>
<status status="PASS" endtime="20210321 21:44:39.579" starttime="20210321 21:44:39.543"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:39.582" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "90654218315", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Individual Partner", "identity_card": "284167058", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210321 21:44:39.818" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.819" starttime="20210321 21:44:39.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.821" level="INFO">{u'adm': True, u'name': u'Individual Partner de teste', u'mothers_name': u'M\xe3e do Individual Partner', u'revenue': 5500.0, u'cbo': u'821450', u'created_at': u'2021-03-21T21:44:39.700387', u'pep': False, u'updated_at': u'2021-03-21T21:44:39.700389', u'id': u'57454fa871734295b834e3b7fb48ccb5', u'identity_card': u'284167058', u'birthday': u'1988-04-23', u'_links': {u'phones': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/phones', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5', u'type': u'GET'}, u'documents': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}, u'addresses': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/addresses', u'type': u'GET'}}, u'national_registration': u'90654218315', u'percentage': 100.0, u'main': True, u'type': u'individual', u'email': u'teste@teste.com.br'}</msg>
<status status="PASS" endtime="20210321 21:44:39.822" starttime="20210321 21:44:39.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.824" level="INFO">3ab7fefb3e490a58</msg>
<status status="PASS" endtime="20210321 21:44:39.824" starttime="20210321 21:44:39.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.827" starttime="20210321 21:44:39.825"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:39.830" level="INFO">${partner_external_key} = 57454fa871734295b834e3b7fb48ccb5</msg>
<status status="PASS" endtime="20210321 21:44:39.830" starttime="20210321 21:44:39.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:39.832" level="INFO">${partner_external_key} = 57454fa871734295b834e3b7fb48ccb5</msg>
<status status="PASS" endtime="20210321 21:44:39.833" starttime="20210321 21:44:39.831"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:39.833" starttime="20210321 21:44:39.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:39.835" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:39.836" starttime="20210321 21:44:39.834"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:39.840" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:39.840" starttime="20210321 21:44:39.838"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:39.842" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" endtime="20210321 21:44:39.843" starttime="20210321 21:44:39.841"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:39.846" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/phones/, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210321 21:44:40.104" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.105" starttime="20210321 21:44:39.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.107" level="INFO">{u'area_code': u'21', u'number': u'996554785', u'_links': {u'partner': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/phones/345ede3694e34386badf9fdc88884997', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'country_code': u'51', u'main': True, u'id': u'345ede3694e34386badf9fdc88884997'}</msg>
<status status="PASS" endtime="20210321 21:44:40.107" starttime="20210321 21:44:40.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.109" level="INFO">978eb96ae577849a</msg>
<status status="PASS" endtime="20210321 21:44:40.109" starttime="20210321 21:44:40.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.112" starttime="20210321 21:44:40.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:40.114" level="INFO">${holder_external_key} = 345ede3694e34386badf9fdc88884997</msg>
<status status="PASS" endtime="20210321 21:44:40.114" starttime="20210321 21:44:40.112"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.116" level="INFO">${phone_external_key} = 4c286f7bfa894405862389e83dbba1b2</msg>
<status status="PASS" endtime="20210321 21:44:40.116" starttime="20210321 21:44:40.115"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:40.117" starttime="20210321 21:44:39.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:40.119" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.119" starttime="20210321 21:44:40.118"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:40.123" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:40.124" starttime="20210321 21:44:40.122"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:40.127" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" endtime="20210321 21:44:40.127" starttime="20210321 21:44:40.124"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:40.130" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/addresses, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210321 21:44:40.370" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.371" starttime="20210321 21:44:40.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.373" level="INFO">{u'city': u'Rio de Janeiro', u'neighborhood': u'Bairro de Testes', u'country': u'Brasil', u'complement': u'apto 201', u'number': u'61', u'state': u'Rio de Janeiro', u'street': u'Rua de Testes', u'postal_code': u'21550478', u'_links': {u'partner': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/addresses/6f45cb2f38d64d3c93b781e83168acbd', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'main': True, u'id': u'6f45cb2f38d64d3c93b781e83168acbd'}</msg>
<status status="PASS" endtime="20210321 21:44:40.374" starttime="20210321 21:44:40.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.376" level="INFO">298b08747f9908b8</msg>
<status status="PASS" endtime="20210321 21:44:40.376" starttime="20210321 21:44:40.375"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.378" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.379" starttime="20210321 21:44:40.377"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:40.382" level="INFO">${address_external_key} = 6f45cb2f38d64d3c93b781e83168acbd</msg>
<status status="PASS" endtime="20210321 21:44:40.382" starttime="20210321 21:44:40.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.384" level="INFO">${address_external_key} = 6f45cb2f38d64d3c93b781e83168acbd</msg>
<status status="PASS" endtime="20210321 21:44:40.384" starttime="20210321 21:44:40.383"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:40.385" starttime="20210321 21:44:40.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:40.387" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.388" starttime="20210321 21:44:40.386"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:40.391" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:40.391" starttime="20210321 21:44:40.390"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:40.393" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:40.399" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:40.400" starttime="20210321 21:44:40.392"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:40.403" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents?type=SELFIE, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:40.689" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.689" starttime="20210321 21:44:40.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.692" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'selfie', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents/7f7be33fab8e4b4ebada4a7329f604b0/download', u'type': u'GET'}, u'partner': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents/7f7be33fab8e4b4ebada4a7329f604b0', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'id': u'7f7be33fab8e4b4ebada4a7329f604b0'}</msg>
<status status="PASS" endtime="20210321 21:44:40.692" starttime="20210321 21:44:40.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.694" level="INFO">4796476128257530</msg>
<status status="PASS" endtime="20210321 21:44:40.695" starttime="20210321 21:44:40.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.697" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.697" starttime="20210321 21:44:40.696"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:40.701" level="INFO">${document_external_key} = 7f7be33fab8e4b4ebada4a7329f604b0</msg>
<status status="PASS" endtime="20210321 21:44:40.701" starttime="20210321 21:44:40.698"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:40.703" level="INFO">${document_external_key} = 7f7be33fab8e4b4ebada4a7329f604b0</msg>
<status status="PASS" endtime="20210321 21:44:40.704" starttime="20210321 21:44:40.702"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:40.704" starttime="20210321 21:44:40.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:40.706" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:40.707" starttime="20210321 21:44:40.705"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:40.710" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:40.711" starttime="20210321 21:44:40.709"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:40.712" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:40.719" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:40.719" starttime="20210321 21:44:40.711"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:40.724" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents?type=RG_FRENTE, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:41.075" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.076" starttime="20210321 21:44:40.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.078" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'rg_frente', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents/5c8154610ec54479a9cb290d60d86025/download', u'type': u'GET'}, u'partner': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents/5c8154610ec54479a9cb290d60d86025', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'id': u'5c8154610ec54479a9cb290d60d86025'}</msg>
<status status="PASS" endtime="20210321 21:44:41.079" starttime="20210321 21:44:41.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.081" level="INFO">f56611f40b22c214</msg>
<status status="PASS" endtime="20210321 21:44:41.081" starttime="20210321 21:44:41.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.084" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.084" starttime="20210321 21:44:41.082"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:41.087" level="INFO">${document_external_key} = 5c8154610ec54479a9cb290d60d86025</msg>
<status status="PASS" endtime="20210321 21:44:41.087" starttime="20210321 21:44:41.085"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.089" level="INFO">${document_external_key} = 5c8154610ec54479a9cb290d60d86025</msg>
<status status="PASS" endtime="20210321 21:44:41.089" starttime="20210321 21:44:41.088"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:41.090" starttime="20210321 21:44:40.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:41.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.092" starttime="20210321 21:44:41.091"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:41.096" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:41.096" starttime="20210321 21:44:41.094"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:41.098" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:41.104" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:41.105" starttime="20210321 21:44:41.097"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:41.108" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents?type=RG_VERSO, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:41.385" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.385" starttime="20210321 21:44:41.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.389" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'rg_verso', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents/59b68ed90a8449abb5ab87786444fba3/download', u'type': u'GET'}, u'partner': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/partners/57454fa871734295b834e3b7fb48ccb5/documents/59b68ed90a8449abb5ab87786444fba3', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029', u'type': u'GET'}}, u'id': u'59b68ed90a8449abb5ab87786444fba3'}</msg>
<status status="PASS" endtime="20210321 21:44:41.390" starttime="20210321 21:44:41.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.392" level="INFO">4ecb337823c3d254</msg>
<status status="PASS" endtime="20210321 21:44:41.393" starttime="20210321 21:44:41.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.395" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.395" starttime="20210321 21:44:41.394"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:41.400" level="INFO">${document_external_key} = 59b68ed90a8449abb5ab87786444fba3</msg>
<status status="PASS" endtime="20210321 21:44:41.400" starttime="20210321 21:44:41.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.402" level="INFO">${document_external_key} = 59b68ed90a8449abb5ab87786444fba3</msg>
<status status="PASS" endtime="20210321 21:44:41.403" starttime="20210321 21:44:41.401"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:41.403" starttime="20210321 21:44:41.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:41.406" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.406" starttime="20210321 21:44:41.404"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:41.411" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:41.411" starttime="20210321 21:44:41.409"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:41.414" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/approval, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=None 
json=None</msg>
<msg timestamp="20210321 21:44:41.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.697" starttime="20210321 21:44:41.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.699" level="INFO">{u'message': u'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" endtime="20210321 21:44:41.700" starttime="20210321 21:44:41.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.702" level="INFO">f047457a259383c1</msg>
<status status="PASS" endtime="20210321 21:44:41.702" starttime="20210321 21:44:41.701"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.705" starttime="20210321 21:44:41.703"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:41.705" starttime="20210321 21:44:41.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:41.707" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.708" starttime="20210321 21:44:41.706"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210321 21:44:41.711" level="INFO">${assessment_id} = 171b53da-e82e-4b78-8751-60f6cb864964</msg>
<status status="PASS" endtime="20210321 21:44:41.711" starttime="20210321 21:44:41.711"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210321 21:44:41.715" level="INFO">${year} = 2021</msg>
<status status="PASS" endtime="20210321 21:44:41.715" starttime="20210321 21:44:41.712"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210321 21:44:41.716" level="INFO">${month} = 03</msg>
<status status="PASS" endtime="20210321 21:44:41.716" starttime="20210321 21:44:41.715"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210321 21:44:41.718" level="INFO">${day} = 21</msg>
<status status="PASS" endtime="20210321 21:44:41.718" starttime="20210321 21:44:41.717"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:41.721" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:41.721" starttime="20210321 21:44:41.719"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:41.725" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-21 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" endtime="20210321 21:44:41.725" starttime="20210321 21:44:41.722"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:41.728" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/9870f1f6c74d4821a5f29973b5d8e029/registration/approval, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-21 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "9870f1f6c74d4821a5f29973b5d8e029", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "171b53da-e82e-4b78-8751-60f6cb864964" } } 
json=None</msg>
<msg timestamp="20210321 21:44:41.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.943" starttime="20210321 21:44:41.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.946" level="INFO">{u'message': u'Holder approved successfully'}</msg>
<status status="PASS" endtime="20210321 21:44:41.946" starttime="20210321 21:44:41.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.948" level="INFO">8a6284062b34990c</msg>
<status status="PASS" endtime="20210321 21:44:41.948" starttime="20210321 21:44:41.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:41.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.951" starttime="20210321 21:44:41.949"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:41.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.954" starttime="20210321 21:44:41.952"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:41.954" starttime="20210321 21:44:41.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:41.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:41.957" starttime="20210321 21:44:41.955"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:41.963" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:41.964" starttime="20210321 21:44:41.961"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:41.965" starttime="20210321 21:44:41.959"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:41.967" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/9870f1f6c74d4821a5f29973b5d8e029/accounts, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=None 
json=None</msg>
<msg timestamp="20210321 21:44:42.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:42.604" starttime="20210321 21:44:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:42.607" level="INFO">{u'has_more': False, u'items': [{u'routing_number': u'001', u'status': u'active', u'primary': True, u'marketplace_id': u'f71a8951368a4cc085cf7875ff44e61c', u'created_at': u'2021-03-22T00:44:41.866843', u'uri': u'/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/a82968f63ad64869938ad5145458e2c5', u'number': u'5078563187', u'updated_at': u'2021-03-22T00:44:41.866843', u'currency': u'BRL', u'resource': u'payment_account', u'balance': u'0.00', u'holder': u'9870f1f6c74d4821a5f29973b5d8e029', u'id': u'a82968f63ad64869938ad5145458e2c5', u'metadata': {}}], u'total_pages': 1, u'query_count': u'1', u'limit': 100, u'offset': 0, u'total': u'1', u'page': 1}</msg>
<status status="PASS" endtime="20210321 21:44:42.607" starttime="20210321 21:44:42.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:42.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:42.610" starttime="20210321 21:44:42.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:42.613" level="INFO">${account_external_key} = a82968f63ad64869938ad5145458e2c5</msg>
<status status="PASS" endtime="20210321 21:44:42.613" starttime="20210321 21:44:42.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:42.615" level="INFO">${account_external_key} = a82968f63ad64869938ad5145458e2c5</msg>
<status status="PASS" endtime="20210321 21:44:42.616" starttime="20210321 21:44:42.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210321 21:44:42.619" level="INFO">${account_number} = 5078563187</msg>
<status status="PASS" endtime="20210321 21:44:42.619" starttime="20210321 21:44:42.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210321 21:44:42.622" level="INFO">${account_number} = 5078563187</msg>
<status status="PASS" endtime="20210321 21:44:42.623" starttime="20210321 21:44:42.620"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210321 21:44:42.626" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" endtime="20210321 21:44:42.626" starttime="20210321 21:44:42.624"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210321 21:44:42.628" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" endtime="20210321 21:44:42.629" starttime="20210321 21:44:42.627"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:42.629" starttime="20210321 21:44:41.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:42.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:42.631" starttime="20210321 21:44:42.630"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:42.632" starttime="20210321 21:44:37.084"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:42.632" starttime="20210321 21:44:37.083"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:42.637" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:42.639" starttime="20210321 21:44:42.636"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:42.639" starttime="20210321 21:44:42.635"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210321 21:44:42.641" level="INFO">${uuid} = 37898757-1ecb-4c0f-854a-d46a433aeb80</msg>
<status status="PASS" endtime="20210321 21:44:42.641" starttime="20210321 21:44:42.640"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:42.644" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:42.646" starttime="20210321 21:44:42.643"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:42.647" starttime="20210321 21:44:42.642"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:42.649" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:42.649" starttime="20210321 21:44:42.647"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": ${uuid},</arg>
<arg>"transaction_id": ${uuid},</arg>
<arg>"id": pm.variables.get("uuid"),</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": ${uuid},</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:42.652" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": 37898757-1ecb-4c0f-854a-d46a433aeb80, "transaction_id": 37898757-1ecb-4c0f-854a-d46a433aeb80, "id": pm.variables.get("uuid"), "id_che...</msg>
<status status="PASS" endtime="20210321 21:44:42.652" starttime="20210321 21:44:42.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:42.655" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/37898757-1ecb-4c0f-854a-d46a433aeb80, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data="{ \"operations\": [ { \"amount\": 9000000000000, \"authorization_code\": 37898757-1ecb-4c0f-854a-d46a433aeb80, \"transaction_id\": 37898757-1ecb-4c0f-854a-d46a433aeb80, \"id\": pm.variables.get(\"uuid\"), \"id_checking_account\": \"a82968f63ad64869938ad5145458e2c5\", \"transfer_date\": \"2020-02-20T20:58:06.510Z\", \"fee\": 0, \"description\": \"Teste\", \"object_type\": \"transfer\", \"object_id\": 37898757-1ecb-4c0f-854a-d46a433aeb80, \"dflag\": \"ACTIVE\", \"created_at\": \"2019-10-14T20:58:06.510Z\", \"type\": \"Transfer\" } ], \"reference_id\": \"Criando saldo na account\" }" 
json=None</msg>
<msg timestamp="20210321 21:44:43.295" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:43.295" starttime="20210321 21:44:42.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:43.298" level="INFO">{u'status': 400, u'timestamp': u'2021-03-22T00:44:43.259+0000', u'message': u'Bad Request', u'path': u'/admin/internal_operation/authorization/37898757-1ecb-4c0f-854a-d46a433aeb80', u'error': u'Bad Request'}</msg>
<status status="PASS" endtime="20210321 21:44:43.298" starttime="20210321 21:44:43.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:43.300" level="INFO">510c241c374179df, 510c241c374179df</msg>
<status status="PASS" endtime="20210321 21:44:43.300" starttime="20210321 21:44:43.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:43.304" level="INFO">400</msg>
<status status="PASS" endtime="20210321 21:44:43.304" starttime="20210321 21:44:43.302"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:43.305" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:43.306" starttime="20210321 21:44:43.304"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:43.306" starttime="20210321 21:44:42.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:43.319" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:43.321" starttime="20210321 21:44:43.316"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:43.321" starttime="20210321 21:44:43.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210321 21:44:43.324" level="INFO">${type} = email</msg>
<status status="PASS" endtime="20210321 21:44:43.325" starttime="20210321 21:44:43.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210321 21:44:43.328" level="INFO">${value} = jesussabrina@hotmail.com</msg>
<status status="PASS" endtime="20210321 21:44:43.328" starttime="20210321 21:44:43.327"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:43.331" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:43.332" starttime="20210321 21:44:43.330"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:43.334" level="INFO">${body} = { "type": "email", "value": "jesussabrina@hotmail.com" }</msg>
<status status="PASS" endtime="20210321 21:44:43.334" starttime="20210321 21:44:43.333"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:43.338" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9870f1f6c74d4821a5f29973b5d8e029/accounts/a82968f63ad64869938ad5145458e2c5/entries, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "email", "value": "jesussabrina@hotmail.com" } 
json=None</msg>
<msg timestamp="20210321 21:44:44.014" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:44.014" starttime="20210321 21:44:43.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.017" level="INFO">{u'status': u'waiting_ownership_verification', u'account': {u'routing_number': u'001', u'marketplace': u'f71a8951368a4cc085cf7875ff44e61c', u'type': u'CACC', u'number': u'5078563187', u'owner': {u'type': u'business', u'name': u'Nome Legal da Empresa', u'national_registration': u'03765892000100'}, u'holder': u'9870f1f6c74d4821a5f29973b5d8e029', u'id': u'a82968f63ad64869938ad5145458e2c5'}, u'resource': u'pix.entry', u'created_at': u'2021-03-21T09:44:43.952', u'updated_at': u'2021-03-21T09:44:43.952', u'key': {u'type': u'email', u'value': u'jesussabrina@hotmail.com'}, u'psp': {u'code': u'19468242', u'name': u'Zoop Tecnologia e Meios de Pagamento S.A.'}, u'id': u'3c356ac597bf465aaebb33822dac11ff'}</msg>
<status status="PASS" endtime="20210321 21:44:44.017" starttime="20210321 21:44:44.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.019" level="INFO">879fd12057d47275</msg>
<status status="PASS" endtime="20210321 21:44:44.020" starttime="20210321 21:44:44.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.022" level="INFO">202</msg>
<status status="PASS" endtime="20210321 21:44:44.022" starttime="20210321 21:44:44.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.025" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:44.025" starttime="20210321 21:44:44.023"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:44.032" starttime="20210321 21:44:44.028"></status>
</kw>
<msg timestamp="20210321 21:44:44.032" level="INFO">${entry_external_key} = 3c356ac597bf465aaebb33822dac11ff</msg>
<status status="PASS" endtime="20210321 21:44:44.032" starttime="20210321 21:44:44.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.036" level="INFO">${entry_external_key} = 3c356ac597bf465aaebb33822dac11ff</msg>
<status status="PASS" endtime="20210321 21:44:44.037" starttime="20210321 21:44:44.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:44.043" starttime="20210321 21:44:44.041"></status>
</kw>
<msg timestamp="20210321 21:44:44.043" level="INFO">${entry_key_value} = jesussabrina@hotmail.com</msg>
<status status="PASS" endtime="20210321 21:44:44.043" starttime="20210321 21:44:44.038"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.046" level="INFO">${entry_key_value} = jesussabrina@hotmail.com</msg>
<status status="PASS" endtime="20210321 21:44:44.046" starttime="20210321 21:44:44.044"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:44.047" starttime="20210321 21:44:43.311"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:44.047" starttime="20210321 21:44:43.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:44.057" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:44.059" starttime="20210321 21:44:44.056"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:44.060" starttime="20210321 21:44:44.054"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:44.063" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9870f1f6c74d4821a5f29973b5d8e029/accounts/a82968f63ad64869938ad5145458e2c5/entries/3c356ac597bf465aaebb33822dac11ff/code, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=None 
json=None</msg>
<msg timestamp="20210321 21:44:44.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:44.682" starttime="20210321 21:44:44.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.685" level="INFO">{u'code': u'6435'}</msg>
<status status="PASS" endtime="20210321 21:44:44.686" starttime="20210321 21:44:44.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.688" level="INFO">7b598096c5eb9770</msg>
<status status="PASS" endtime="20210321 21:44:44.689" starttime="20210321 21:44:44.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.690" level="INFO">200</msg>
<status status="PASS" endtime="20210321 21:44:44.691" starttime="20210321 21:44:44.689"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:44.693" starttime="20210321 21:44:44.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210321 21:44:44.696" level="INFO">${verification_code} = 6435</msg>
<status status="PASS" endtime="20210321 21:44:44.696" starttime="20210321 21:44:44.694"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:44.698" level="INFO">${verification_code} = 6435</msg>
<status status="PASS" endtime="20210321 21:44:44.699" starttime="20210321 21:44:44.697"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:44.699" starttime="20210321 21:44:44.052"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:44.699" starttime="20210321 21:44:44.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:44.708" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:44.710" starttime="20210321 21:44:44.707"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:44.710" starttime="20210321 21:44:44.705"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:44.713" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:44.713" starttime="20210321 21:44:44.712"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:44.716" level="INFO">${body} = { "code": "6435" }</msg>
<status status="PASS" endtime="20210321 21:44:44.716" starttime="20210321 21:44:44.714"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:44.720" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/9870f1f6c74d4821a5f29973b5d8e029/accounts/a82968f63ad64869938ad5145458e2c5/entries/3c356ac597bf465aaebb33822dac11ff/ownership, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "code": "6435" } 
json=None</msg>
<msg timestamp="20210321 21:44:46.551" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:46.552" starttime="20210321 21:44:44.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:46.554" level="INFO">{u'status': u'active', u'account': {u'routing_number': u'001', u'marketplace': u'f71a8951368a4cc085cf7875ff44e61c', u'type': u'CACC', u'number': u'5078563187', u'owner': {u'type': u'business', u'name': u'Nome Legal da Empresa', u'national_registration': u'03765892000100'}, u'holder': u'9870f1f6c74d4821a5f29973b5d8e029', u'id': u'a82968f63ad64869938ad5145458e2c5'}, u'resource': u'pix.entry', u'created_at': u'2021-03-21T09:44:43.952', u'updated_at': u'2021-03-21T09:44:46.506', u'key': {u'type': u'email', u'value': u'jesussabrina@hotmail.com'}, u'psp': {u'code': u'19468242', u'name': u'Zoop Tecnologia e Meios de Pagamento S.A.'}, u'id': u'3c356ac597bf465aaebb33822dac11ff'}</msg>
<status status="PASS" endtime="20210321 21:44:46.554" starttime="20210321 21:44:46.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:46.556" level="INFO">a1c01dcbfcaa29e7</msg>
<status status="PASS" endtime="20210321 21:44:46.557" starttime="20210321 21:44:46.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:46.559" level="INFO">201</msg>
<status status="PASS" endtime="20210321 21:44:46.559" starttime="20210321 21:44:46.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:46.561" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:46.561" starttime="20210321 21:44:46.560"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:46.562" starttime="20210321 21:44:44.703"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:46.562" starttime="20210321 21:44:44.700"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:46.566" starttime="20210321 21:44:46.564"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:46.567" starttime="20210321 21:44:46.563"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:46.567" starttime="20210321 21:44:37.078"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>pix_transaction_id=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:46.577" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:46.579" starttime="20210321 21:44:46.576"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:46.580" starttime="20210321 21:44:46.574"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:46.582" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:46.582" starttime="20210321 21:44:46.581"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}",</arg>
<arg>"transaction_id": "${pix_transaction_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:46.587" level="INFO">${body} = { "amount": 2000, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "1719245...</msg>
<status status="PASS" endtime="20210321 21:44:46.587" starttime="20210321 21:44:46.583"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:46.591" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/9870f1f6c74d4821a5f29973b5d8e029/accounts/a82968f63ad64869938ad5145458e2c5/payments, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "amount": 2000, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX", "transaction_id": "" } 
json=None</msg>
<msg timestamp="20210321 21:44:47.276" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:47.276" starttime="20210321 21:44:46.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.279" level="INFO">{u'status': u'pending', u'debtor': {u'account': {u'routing_number': u'0001', u'psp': {u'code': u'19468242', u'name': u'Zoop Tecnologia e Meios de Pagamento S.A.'}, u'type': u'cacc', u'number': u'5078563187', u'digital_account_id': u'a82968f63ad64869938ad5145458e2c5'}, u'holder_id': u'9870f1f6c74d4821a5f29973b5d8e029', u'type': u'individual', u'name': u'Holder de teste', u'national_registration': u'03765892000100'}, u'creditor': {u'account': {u'routing_number': u'0500', u'psp': {u'code': u'17192451'}, u'type': u'cacc', u'number': u'0243882974'}, u'type': u'individual', u'name': u'Massa iti PF NauNNMO', u'national_registration': u'42808422644'}, u'marketplace_id': u'f71a8951368a4cc085cf7875ff44e61c', u'refunded_amount': 0, u'end_to_end_id': u'E1946824220210322004446fe2899445', u'created_at': u'2021-03-21T21:44:47.195899', u'id': u'a036a835472c4fdc82f1e9d1205d1408', u'amount': 2000, u'message_id': u'M194682429860c9c11ee8b80b8860ec4', u'transaction_id': u'', u'description': u'Envio de PIX'}</msg>
<status status="PASS" endtime="20210321 21:44:47.280" starttime="20210321 21:44:47.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.282" level="INFO">e8b813fdd786fffe</msg>
<status status="PASS" endtime="20210321 21:44:47.282" starttime="20210321 21:44:47.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.285" level="INFO">201</msg>
<status status="PASS" endtime="20210321 21:44:47.285" starttime="20210321 21:44:47.283"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.287" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:47.287" starttime="20210321 21:44:47.286"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:47.291" level="INFO">${payment_external_key} = a036a835472c4fdc82f1e9d1205d1408</msg>
<status status="PASS" endtime="20210321 21:44:47.291" starttime="20210321 21:44:47.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.293" level="INFO">${payment_external_key} = a036a835472c4fdc82f1e9d1205d1408</msg>
<status status="PASS" endtime="20210321 21:44:47.293" starttime="20210321 21:44:47.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210321 21:44:47.297" level="INFO">${end_to_end_id} = E1946824220210322004446fe2899445</msg>
<status status="PASS" endtime="20210321 21:44:47.297" starttime="20210321 21:44:47.295"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.300" level="INFO">${end_to_end_id} = E1946824220210322004446fe2899445</msg>
<status status="PASS" endtime="20210321 21:44:47.300" starttime="20210321 21:44:47.298"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210321 21:44:47.303" level="INFO">${message_id} = M194682429860c9c11ee8b80b8860ec4</msg>
<status status="PASS" endtime="20210321 21:44:47.303" starttime="20210321 21:44:47.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.306" level="INFO">${message_id} = M194682429860c9c11ee8b80b8860ec4</msg>
<status status="PASS" endtime="20210321 21:44:47.306" starttime="20210321 21:44:47.304"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:47.307" starttime="20210321 21:44:46.570"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>transaction_id=${EMPTY}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210321 21:44:47.319" level="INFO">${date} = 2021-03-21 21:44:47.319000</msg>
<status status="PASS" endtime="20210321 21:44:47.320" starttime="20210321 21:44:47.318"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210321 21:44:47.322" level="INFO">${date} = 2021-03-21</msg>
<status status="PASS" endtime="20210321 21:44:47.322" starttime="20210321 21:44:47.321"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["transaction_id"]}</arg>
<arg>${transaction_id}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.325" starttime="20210321 21:44:47.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.328" starttime="20210321 21:44:47.326"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.331" starttime="20210321 21:44:47.329"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.334" level="INFO">Length is 32</msg>
<status status="PASS" endtime="20210321 21:44:47.334" starttime="20210321 21:44:47.332"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.338" level="INFO">Length is 32</msg>
<status status="PASS" endtime="20210321 21:44:47.338" starttime="20210321 21:44:47.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:47.341" starttime="20210321 21:44:47.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.344" starttime="20210321 21:44:47.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.347" starttime="20210321 21:44:47.344"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.354" starttime="20210321 21:44:47.349"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:47.358" starttime="20210321 21:44:47.356"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.362" level="FAIL">individual != business</msg>
<status status="FAIL" endtime="20210321 21:44:47.362" starttime="20210321 21:44:47.359"></status>
</kw>
<status status="FAIL" endtime="20210321 21:44:47.363" starttime="20210321 21:44:47.310"></status>
</kw>
<status status="FAIL" endtime="20210321 21:44:47.366" critical="yes" starttime="20210321 21:44:37.076">individual != business</status>
</test>
<test id="s1-s1-s1-t2" name="CenÃ¡rio: Criar pagamento PIX de holder individual utilizando chave pix do destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210321 21:44:47.395" level="INFO">${phone} = 90635249</msg>
<status status="PASS" endtime="20210321 21:44:47.395" starttime="20210321 21:44:47.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210321 21:44:47.397" level="INFO">${phone_pix} = +5521990635249</msg>
<status status="PASS" endtime="20210321 21:44:47.397" starttime="20210321 21:44:47.396"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.400" level="INFO">${phone_pix} = +5521990635249</msg>
<status status="PASS" endtime="20210321 21:44:47.400" starttime="20210321 21:44:47.398"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210321 21:44:47.403" level="INFO">${email_pix} = kaiquerocha@moraes.br</msg>
<status status="PASS" endtime="20210321 21:44:47.403" starttime="20210321 21:44:47.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.405" level="INFO">${email_pix} = kaiquerocha@moraes.br</msg>
<status status="PASS" endtime="20210321 21:44:47.405" starttime="20210321 21:44:47.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:47.414" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:47.416" starttime="20210321 21:44:47.412"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:47.417" starttime="20210321 21:44:47.411"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:47.419" level="INFO">${national_registration} = 590.481.236-15</msg>
<status status="PASS" endtime="20210321 21:44:47.420" starttime="20210321 21:44:47.418"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:47.423" level="INFO">${national_registration} = 590481236-15</msg>
<status status="PASS" endtime="20210321 21:44:47.423" starttime="20210321 21:44:47.422"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210321 21:44:47.426" level="INFO">${national_registration} = 59048123615</msg>
<status status="PASS" endtime="20210321 21:44:47.426" starttime="20210321 21:44:47.424"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.428" level="INFO">${national_registration} = 59048123615</msg>
<status status="PASS" endtime="20210321 21:44:47.429" starttime="20210321 21:44:47.427"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210321 21:44:47.431" level="INFO">${identity_card} = 138265070</msg>
<status status="PASS" endtime="20210321 21:44:47.431" starttime="20210321 21:44:47.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.434" level="INFO">${identity_card} = 138265070</msg>
<status status="PASS" endtime="20210321 21:44:47.435" starttime="20210321 21:44:47.433"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:47.442" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:47.444" starttime="20210321 21:44:47.441"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:47.444" starttime="20210321 21:44:47.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.447" level="INFO">${holder_type} = individual</msg>
<status status="PASS" endtime="20210321 21:44:47.447" starttime="20210321 21:44:47.445"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210321 21:44:47.450" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" endtime="20210321 21:44:47.450" starttime="20210321 21:44:47.448"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:47.454" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:47.454" starttime="20210321 21:44:47.452"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:47.458" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59048123615", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder",...</msg>
<status status="PASS" endtime="20210321 21:44:47.459" starttime="20210321 21:44:47.455"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:47.462" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59048123615", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "138265070", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210321 21:44:48.144" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.144" starttime="20210321 21:44:47.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.148" level="INFO">{u'status': u'waiting_info_and_documents', u'cbo': u'821450', u'marketplace_id': u'f71a8951368a4cc085cf7875ff44e61c', u'mothers_name': u'M\xe3e do Holder', u'revenue': 5500.0, u'marketplace_name': u'Marketplace de Teste', u'created_at': u'2021-03-21T21:44:48.058919', u'pep': False, u'updated_at': u'2021-03-21T21:44:48.058921', u'id': u'7ba26edab4ff435faa83048443de1ef3', u'identity_card': u'138265070', u'birthday': u'1988-04-23', u'_links': {u'phones': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/phones', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3', u'type': u'GET'}, u'documents': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents', u'type': u'GET'}, u'addresses': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/addresses', u'type': u'GET'}}, u'national_registration': u'59048123615', u'type': u'individual', u'email': u'teste@teste.com.br', u'name': u'Holder de teste'}</msg>
<status status="PASS" endtime="20210321 21:44:48.148" starttime="20210321 21:44:48.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.151" level="INFO">3e4dca883c5f260e</msg>
<status status="PASS" endtime="20210321 21:44:48.151" starttime="20210321 21:44:48.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.153" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59048123615", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "138265070", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" endtime="20210321 21:44:48.153" starttime="20210321 21:44:48.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.156" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.156" starttime="20210321 21:44:48.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:48.159" level="INFO">${holder_external_key} = 7ba26edab4ff435faa83048443de1ef3</msg>
<status status="PASS" endtime="20210321 21:44:48.159" starttime="20210321 21:44:48.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.162" level="INFO">${holder_external_key} = 7ba26edab4ff435faa83048443de1ef3</msg>
<status status="PASS" endtime="20210321 21:44:48.162" starttime="20210321 21:44:48.160"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:48.163" starttime="20210321 21:44:47.435"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.165" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" endtime="20210321 21:44:48.166" starttime="20210321 21:44:48.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:48.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.169" starttime="20210321 21:44:48.167"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:48.173" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:48.173" starttime="20210321 21:44:48.172"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:48.176" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" endtime="20210321 21:44:48.176" starttime="20210321 21:44:48.174"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:48.181" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/phones, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210321 21:44:48.435" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.435" starttime="20210321 21:44:48.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.438" level="INFO">{u'area_code': u'21', u'number': u'996221236', u'_links': {u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/phones/bb1e8c6c4d244d1b9208bb9532353b7f', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3', u'type': u'GET'}}, u'country_code': u'51', u'main': True, u'id': u'bb1e8c6c4d244d1b9208bb9532353b7f'}</msg>
<status status="PASS" endtime="20210321 21:44:48.438" starttime="20210321 21:44:48.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.440" level="INFO">de9edac097e0e23e</msg>
<status status="PASS" endtime="20210321 21:44:48.441" starttime="20210321 21:44:48.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.443" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.443" starttime="20210321 21:44:48.442"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:48.446" level="INFO">${phone_external_key} = bb1e8c6c4d244d1b9208bb9532353b7f</msg>
<status status="PASS" endtime="20210321 21:44:48.446" starttime="20210321 21:44:48.444"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.449" level="INFO">${phone_external_key} = bb1e8c6c4d244d1b9208bb9532353b7f</msg>
<status status="PASS" endtime="20210321 21:44:48.449" starttime="20210321 21:44:48.447"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:48.449" starttime="20210321 21:44:48.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:48.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.453" starttime="20210321 21:44:48.450"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:48.457" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:48.457" starttime="20210321 21:44:48.456"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:48.461" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" endtime="20210321 21:44:48.461" starttime="20210321 21:44:48.459"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:48.465" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/addresses, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210321 21:44:48.699" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.699" starttime="20210321 21:44:48.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.703" level="INFO">{u'city': u'Rio de Janeiro', u'neighborhood': u'Bairro de Testes', u'country': u'Brasil', u'complement': u'apto 200', u'number': u'90', u'state': u'Rio de Janeiro', u'street': u'Rua de Testes', u'postal_code': u'21550987', u'_links': {u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/addresses/0b743b8bf5d04c9da0767b3b781b0128', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3', u'type': u'GET'}}, u'main': True, u'id': u'0b743b8bf5d04c9da0767b3b781b0128'}</msg>
<status status="PASS" endtime="20210321 21:44:48.703" starttime="20210321 21:44:48.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.705" level="INFO">4b7a2d84e5ff6918</msg>
<status status="PASS" endtime="20210321 21:44:48.706" starttime="20210321 21:44:48.704"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.708" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.708" starttime="20210321 21:44:48.707"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:48.712" level="INFO">${address_external_key} = 0b743b8bf5d04c9da0767b3b781b0128</msg>
<status status="PASS" endtime="20210321 21:44:48.712" starttime="20210321 21:44:48.709"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:48.714" level="INFO">${address_external_key} = 0b743b8bf5d04c9da0767b3b781b0128</msg>
<status status="PASS" endtime="20210321 21:44:48.715" starttime="20210321 21:44:48.713"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:48.715" starttime="20210321 21:44:48.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:48.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:48.718" starttime="20210321 21:44:48.716"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:48.722" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:48.722" starttime="20210321 21:44:48.720"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:48.724" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:48.732" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:48.732" starttime="20210321 21:44:48.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:48.737" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents?type=SELFIE, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:49.015" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.015" starttime="20210321 21:44:48.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.018" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'selfie', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents/c26b627394414083b57b7f14acab44bb/download', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents/c26b627394414083b57b7f14acab44bb', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3', u'type': u'GET'}}, u'id': u'c26b627394414083b57b7f14acab44bb'}</msg>
<status status="PASS" endtime="20210321 21:44:49.018" starttime="20210321 21:44:49.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.020" level="INFO">255021cc17cfc256</msg>
<status status="PASS" endtime="20210321 21:44:49.020" starttime="20210321 21:44:49.019"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.023" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.023" starttime="20210321 21:44:49.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:49.028" level="INFO">${document_external_key} = c26b627394414083b57b7f14acab44bb</msg>
<status status="PASS" endtime="20210321 21:44:49.028" starttime="20210321 21:44:49.024"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.032" level="INFO">${document_external_key} = c26b627394414083b57b7f14acab44bb</msg>
<status status="PASS" endtime="20210321 21:44:49.032" starttime="20210321 21:44:49.030"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:49.032" starttime="20210321 21:44:48.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:49.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.034" starttime="20210321 21:44:49.033"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:49.038" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:49.038" starttime="20210321 21:44:49.037"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:49.041" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:49.048" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:49.048" starttime="20210321 21:44:49.039"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:49.052" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents?type=RG_FRENTE, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:49.365" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.365" starttime="20210321 21:44:49.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.367" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'rg_frente', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents/0a00b56103ec4112822e6305c6cbd146/download', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents/0a00b56103ec4112822e6305c6cbd146', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3', u'type': u'GET'}}, u'id': u'0a00b56103ec4112822e6305c6cbd146'}</msg>
<status status="PASS" endtime="20210321 21:44:49.368" starttime="20210321 21:44:49.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.370" level="INFO">05ce8810d4361622</msg>
<status status="PASS" endtime="20210321 21:44:49.371" starttime="20210321 21:44:49.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.375" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.375" starttime="20210321 21:44:49.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:49.378" level="INFO">${document_external_key} = 0a00b56103ec4112822e6305c6cbd146</msg>
<status status="PASS" endtime="20210321 21:44:49.379" starttime="20210321 21:44:49.376"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.381" level="INFO">${document_external_key} = 0a00b56103ec4112822e6305c6cbd146</msg>
<status status="PASS" endtime="20210321 21:44:49.382" starttime="20210321 21:44:49.380"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:49.382" starttime="20210321 21:44:49.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:49.385" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.385" starttime="20210321 21:44:49.383"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:49.388" level="INFO">${header} = {u'Content-Type': u'image/jpeg'}</msg>
<status status="PASS" endtime="20210321 21:44:49.388" starttime="20210321 21:44:49.387"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210321 21:44:49.390" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210321 21:44:49.397" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" endtime="20210321 21:44:49.397" starttime="20210321 21:44:49.389"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:49.402" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents?type=RG_VERSO, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'image/jpeg', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210321 21:44:49.676" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.676" starttime="20210321 21:44:49.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.679" level="INFO">{u'media_type': u'image_jpeg', u'length': 3135, u'document_type': u'rg_verso', u'_links': {u'download': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents/e5e0c13229dc42449fd40a2e5f9968b2/download', u'type': u'GET'}, u'self': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/documents/e5e0c13229dc42449fd40a2e5f9968b2', u'type': u'GET'}, u'holder': {u'href': u'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3', u'type': u'GET'}}, u'id': u'e5e0c13229dc42449fd40a2e5f9968b2'}</msg>
<status status="PASS" endtime="20210321 21:44:49.679" starttime="20210321 21:44:49.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.681" level="INFO">ef78b4e334deea2c</msg>
<status status="PASS" endtime="20210321 21:44:49.682" starttime="20210321 21:44:49.680"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.684" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.684" starttime="20210321 21:44:49.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:49.687" level="INFO">${document_external_key} = e5e0c13229dc42449fd40a2e5f9968b2</msg>
<status status="PASS" endtime="20210321 21:44:49.687" starttime="20210321 21:44:49.685"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:49.690" level="INFO">${document_external_key} = e5e0c13229dc42449fd40a2e5f9968b2</msg>
<status status="PASS" endtime="20210321 21:44:49.690" starttime="20210321 21:44:49.688"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:49.690" starttime="20210321 21:44:49.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210321 21:44:49.692" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:49.693" starttime="20210321 21:44:49.691"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:49.696" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:49.697" starttime="20210321 21:44:49.695"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:49.704" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/approval, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=None 
json=None</msg>
<msg timestamp="20210321 21:44:50.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.026" starttime="20210321 21:44:49.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.029" level="INFO">{u'message': u'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" endtime="20210321 21:44:50.029" starttime="20210321 21:44:50.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.032" level="INFO">52820035a74b3c13</msg>
<status status="PASS" endtime="20210321 21:44:50.032" starttime="20210321 21:44:50.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.036" starttime="20210321 21:44:50.033"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.036" starttime="20210321 21:44:49.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:50.038" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.038" starttime="20210321 21:44:50.037"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210321 21:44:50.042" level="INFO">${assessment_id} = b1b0e14f-a69a-463c-a73a-d340c30327c1</msg>
<status status="PASS" endtime="20210321 21:44:50.042" starttime="20210321 21:44:50.041"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210321 21:44:50.044" level="INFO">${year} = 2021</msg>
<status status="PASS" endtime="20210321 21:44:50.044" starttime="20210321 21:44:50.043"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210321 21:44:50.047" level="INFO">${month} = 03</msg>
<status status="PASS" endtime="20210321 21:44:50.047" starttime="20210321 21:44:50.045"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210321 21:44:50.049" level="INFO">${day} = 21</msg>
<status status="PASS" endtime="20210321 21:44:50.050" starttime="20210321 21:44:50.048"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:50.052" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:50.052" starttime="20210321 21:44:50.050"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:50.056" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-21 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" endtime="20210321 21:44:50.056" starttime="20210321 21:44:50.053"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:50.060" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7ba26edab4ff435faa83048443de1ef3/registration/approval, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-21 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "7ba26edab4ff435faa83048443de1ef3", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "b1b0e14f-a69a-463c-a73a-d340c30327c1" } } 
json=None</msg>
<msg timestamp="20210321 21:44:50.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.273" starttime="20210321 21:44:50.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.275" level="INFO">{u'message': u'Holder approved successfully'}</msg>
<status status="PASS" endtime="20210321 21:44:50.276" starttime="20210321 21:44:50.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.278" level="INFO">8c6294ac8bfe06e3</msg>
<status status="PASS" endtime="20210321 21:44:50.278" starttime="20210321 21:44:50.277"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.281" starttime="20210321 21:44:50.279"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:50.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.284" starttime="20210321 21:44:50.282"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.285" starttime="20210321 21:44:50.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:50.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.287" starttime="20210321 21:44:50.286"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:50.292" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:50.294" starttime="20210321 21:44:50.291"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.294" starttime="20210321 21:44:50.289"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:50.297" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/7ba26edab4ff435faa83048443de1ef3/accounts, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=None 
json=None</msg>
<msg timestamp="20210321 21:44:50.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.940" starttime="20210321 21:44:50.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.943" level="INFO">{u'has_more': False, u'items': [{u'routing_number': u'001', u'status': u'active', u'primary': True, u'marketplace_id': u'f71a8951368a4cc085cf7875ff44e61c', u'created_at': u'2021-03-22T00:44:50.194272', u'uri': u'/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/b6af8dbff77e4fcbb5840dc4c08e3c3e', u'number': u'9921218017', u'updated_at': u'2021-03-22T00:44:50.194272', u'currency': u'BRL', u'resource': u'payment_account', u'balance': u'0.00', u'holder': u'7ba26edab4ff435faa83048443de1ef3', u'id': u'b6af8dbff77e4fcbb5840dc4c08e3c3e', u'metadata': {}}], u'total_pages': 1, u'query_count': u'1', u'limit': 100, u'offset': 0, u'total': u'1', u'page': 1}</msg>
<status status="PASS" endtime="20210321 21:44:50.943" starttime="20210321 21:44:50.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.946" starttime="20210321 21:44:50.944"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:50.949" level="INFO">${account_external_key} = b6af8dbff77e4fcbb5840dc4c08e3c3e</msg>
<status status="PASS" endtime="20210321 21:44:50.949" starttime="20210321 21:44:50.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.951" level="INFO">${account_external_key} = b6af8dbff77e4fcbb5840dc4c08e3c3e</msg>
<status status="PASS" endtime="20210321 21:44:50.951" starttime="20210321 21:44:50.950"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210321 21:44:50.954" level="INFO">${account_number} = 9921218017</msg>
<status status="PASS" endtime="20210321 21:44:50.954" starttime="20210321 21:44:50.952"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.957" level="INFO">${account_number} = 9921218017</msg>
<status status="PASS" endtime="20210321 21:44:50.957" starttime="20210321 21:44:50.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210321 21:44:50.960" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" endtime="20210321 21:44:50.960" starttime="20210321 21:44:50.958"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210321 21:44:50.962" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" endtime="20210321 21:44:50.963" starttime="20210321 21:44:50.961"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.963" starttime="20210321 21:44:50.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210321 21:44:50.965" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:50.966" starttime="20210321 21:44:50.964"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.966" starttime="20210321 21:44:47.409"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.966" starttime="20210321 21:44:47.406"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:50.972" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:50.973" starttime="20210321 21:44:50.970"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.974" starttime="20210321 21:44:50.969"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210321 21:44:50.976" level="INFO">${uuid} = f97c4a06-68df-4a32-84d0-549d3103b848</msg>
<status status="PASS" endtime="20210321 21:44:50.976" starttime="20210321 21:44:50.975"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:50.979" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:50.981" starttime="20210321 21:44:50.978"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:50.981" starttime="20210321 21:44:50.977"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:50.984" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:50.984" starttime="20210321 21:44:50.982"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": ${uuid},</arg>
<arg>"transaction_id": ${uuid},</arg>
<arg>"id": pm.variables.get("uuid"),</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": ${uuid},</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:50.987" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": f97c4a06-68df-4a32-84d0-549d3103b848, "transaction_id": f97c4a06-68df-4a32-84d0-549d3103b848, "id": pm.variables.get("uuid"), "id_che...</msg>
<status status="PASS" endtime="20210321 21:44:50.987" starttime="20210321 21:44:50.985"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:50.991" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/f97c4a06-68df-4a32-84d0-549d3103b848, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data="{ \"operations\": [ { \"amount\": 9000000000000, \"authorization_code\": f97c4a06-68df-4a32-84d0-549d3103b848, \"transaction_id\": f97c4a06-68df-4a32-84d0-549d3103b848, \"id\": pm.variables.get(\"uuid\"), \"id_checking_account\": \"b6af8dbff77e4fcbb5840dc4c08e3c3e\", \"transfer_date\": \"2020-02-20T20:58:06.510Z\", \"fee\": 0, \"description\": \"Teste\", \"object_type\": \"transfer\", \"object_id\": f97c4a06-68df-4a32-84d0-549d3103b848, \"dflag\": \"ACTIVE\", \"created_at\": \"2019-10-14T20:58:06.510Z\", \"type\": \"Transfer\" } ], \"reference_id\": \"Criando saldo na account\" }" 
json=None</msg>
<msg timestamp="20210321 21:44:51.617" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:51.617" starttime="20210321 21:44:50.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:51.620" level="INFO">{u'status': 400, u'timestamp': u'2021-03-22T00:44:51.582+0000', u'message': u'Bad Request', u'path': u'/admin/internal_operation/authorization/f97c4a06-68df-4a32-84d0-549d3103b848', u'error': u'Bad Request'}</msg>
<status status="PASS" endtime="20210321 21:44:51.620" starttime="20210321 21:44:51.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:51.622" level="INFO">e19899d4bb33fdf3, e19899d4bb33fdf3</msg>
<status status="PASS" endtime="20210321 21:44:51.622" starttime="20210321 21:44:51.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:51.624" level="INFO">400</msg>
<status status="PASS" endtime="20210321 21:44:51.624" starttime="20210321 21:44:51.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:51.627" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:51.627" starttime="20210321 21:44:51.625"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:51.627" starttime="20210321 21:44:50.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:51.637" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:51.639" starttime="20210321 21:44:51.635"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:51.639" starttime="20210321 21:44:51.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210321 21:44:51.642" level="INFO">${type} = email</msg>
<status status="PASS" endtime="20210321 21:44:51.642" starttime="20210321 21:44:51.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210321 21:44:51.644" level="INFO">${value} = kaiquerocha@moraes.br</msg>
<status status="PASS" endtime="20210321 21:44:51.644" starttime="20210321 21:44:51.643"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:51.647" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:51.647" starttime="20210321 21:44:51.645"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:51.649" level="INFO">${body} = { "type": "email", "value": "kaiquerocha@moraes.br" }</msg>
<status status="PASS" endtime="20210321 21:44:51.649" starttime="20210321 21:44:51.647"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:51.652" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7ba26edab4ff435faa83048443de1ef3/accounts/b6af8dbff77e4fcbb5840dc4c08e3c3e/entries, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "type": "email", "value": "kaiquerocha@moraes.br" } 
json=None</msg>
<msg timestamp="20210321 21:44:52.340" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:52.341" starttime="20210321 21:44:51.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:52.343" level="INFO">{u'status': u'waiting_ownership_verification', u'account': {u'routing_number': u'001', u'marketplace': u'f71a8951368a4cc085cf7875ff44e61c', u'type': u'CACC', u'number': u'9921218017', u'owner': {u'type': u'individual', u'name': u'Holder de teste', u'national_registration': u'59048123615'}, u'holder': u'7ba26edab4ff435faa83048443de1ef3', u'id': u'b6af8dbff77e4fcbb5840dc4c08e3c3e'}, u'resource': u'pix.entry', u'created_at': u'2021-03-21T09:44:52.283', u'updated_at': u'2021-03-21T09:44:52.283', u'key': {u'type': u'email', u'value': u'kaiquerocha@moraes.br'}, u'psp': {u'code': u'19468242', u'name': u'Zoop Tecnologia e Meios de Pagamento S.A.'}, u'id': u'083a78e25c2c41aeb14c29f02c6e2b2c'}</msg>
<status status="PASS" endtime="20210321 21:44:52.344" starttime="20210321 21:44:52.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:52.346" level="INFO">4edc3efaca9c903b</msg>
<status status="PASS" endtime="20210321 21:44:52.346" starttime="20210321 21:44:52.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:52.348" level="INFO">202</msg>
<status status="PASS" endtime="20210321 21:44:52.349" starttime="20210321 21:44:52.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:52.351" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:52.351" starttime="20210321 21:44:52.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:52.356" starttime="20210321 21:44:52.354"></status>
</kw>
<msg timestamp="20210321 21:44:52.357" level="INFO">${entry_external_key} = 083a78e25c2c41aeb14c29f02c6e2b2c</msg>
<status status="PASS" endtime="20210321 21:44:52.357" starttime="20210321 21:44:52.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:52.359" level="INFO">${entry_external_key} = 083a78e25c2c41aeb14c29f02c6e2b2c</msg>
<status status="PASS" endtime="20210321 21:44:52.360" starttime="20210321 21:44:52.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:52.365" starttime="20210321 21:44:52.363"></status>
</kw>
<msg timestamp="20210321 21:44:52.365" level="INFO">${entry_key_value} = kaiquerocha@moraes.br</msg>
<status status="PASS" endtime="20210321 21:44:52.365" starttime="20210321 21:44:52.360"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210321 21:44:52.367" level="INFO">${entry_key_value} = kaiquerocha@moraes.br</msg>
<status status="PASS" endtime="20210321 21:44:52.368" starttime="20210321 21:44:52.366"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:52.368" starttime="20210321 21:44:51.631"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:52.368" starttime="20210321 21:44:51.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:52.377" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:52.379" starttime="20210321 21:44:52.376"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:52.379" starttime="20210321 21:44:52.374"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:52.382" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7ba26edab4ff435faa83048443de1ef3/accounts/b6af8dbff77e4fcbb5840dc4c08e3c3e/entries/083a78e25c2c41aeb14c29f02c6e2b2c/code, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data=None 
json=None</msg>
<msg timestamp="20210321 21:44:53.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:53.002" starttime="20210321 21:44:52.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:53.005" level="INFO">{u'code': u'3607'}</msg>
<status status="PASS" endtime="20210321 21:44:53.005" starttime="20210321 21:44:53.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:53.007" level="INFO">8e76fd9f060882d6</msg>
<status status="PASS" endtime="20210321 21:44:53.007" starttime="20210321 21:44:53.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:53.009" level="INFO">200</msg>
<status status="PASS" endtime="20210321 21:44:53.010" starttime="20210321 21:44:53.008"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:53.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:53.012" starttime="20210321 21:44:53.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210321 21:44:53.015" level="INFO">${verification_code} = 3607</msg>
<status status="PASS" endtime="20210321 21:44:53.016" starttime="20210321 21:44:53.013"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:53.018" level="INFO">${verification_code} = 3607</msg>
<status status="PASS" endtime="20210321 21:44:53.018" starttime="20210321 21:44:53.017"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:53.019" starttime="20210321 21:44:52.372"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:53.019" starttime="20210321 21:44:52.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:53.028" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:53.030" starttime="20210321 21:44:53.026"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:53.030" starttime="20210321 21:44:53.025"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:53.032" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:53.033" starttime="20210321 21:44:53.031"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:53.035" level="INFO">${body} = { "code": "3607" }</msg>
<status status="PASS" endtime="20210321 21:44:53.035" starttime="20210321 21:44:53.034"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:53.039" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7ba26edab4ff435faa83048443de1ef3/accounts/b6af8dbff77e4fcbb5840dc4c08e3c3e/entries/083a78e25c2c41aeb14c29f02c6e2b2c/ownership, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "code": "3607" } 
json=None</msg>
<msg timestamp="20210321 21:44:54.735" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:54.735" starttime="20210321 21:44:53.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:54.737" level="INFO">{u'status': u'active', u'account': {u'routing_number': u'001', u'marketplace': u'f71a8951368a4cc085cf7875ff44e61c', u'type': u'CACC', u'number': u'9921218017', u'owner': {u'type': u'individual', u'name': u'Holder de teste', u'national_registration': u'59048123615'}, u'holder': u'7ba26edab4ff435faa83048443de1ef3', u'id': u'b6af8dbff77e4fcbb5840dc4c08e3c3e'}, u'resource': u'pix.entry', u'created_at': u'2021-03-21T09:44:52.283', u'updated_at': u'2021-03-21T09:44:54.630', u'key': {u'type': u'email', u'value': u'kaiquerocha@moraes.br'}, u'psp': {u'code': u'19468242', u'name': u'Zoop Tecnologia e Meios de Pagamento S.A.'}, u'id': u'083a78e25c2c41aeb14c29f02c6e2b2c'}</msg>
<status status="PASS" endtime="20210321 21:44:54.737" starttime="20210321 21:44:54.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:54.739" level="INFO">de8abd5e94c626b0</msg>
<status status="PASS" endtime="20210321 21:44:54.739" starttime="20210321 21:44:54.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:54.741" level="INFO">201</msg>
<status status="PASS" endtime="20210321 21:44:54.741" starttime="20210321 21:44:54.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:54.743" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:54.743" starttime="20210321 21:44:54.742"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:54.743" starttime="20210321 21:44:53.022"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:54.743" starttime="20210321 21:44:53.020"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:54.745" starttime="20210321 21:44:54.744"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:54.746" starttime="20210321 21:44:54.744"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:54.746" starttime="20210321 21:44:47.391"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>pix_transaction_id=${EMPTY}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210321 21:44:54.751" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20210321 21:44:54.752" starttime="20210321 21:44:54.749"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:54.752" starttime="20210321 21:44:54.749"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210321 21:44:54.753" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20210321 21:44:54.753" starttime="20210321 21:44:54.752"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}",</arg>
<arg>"transaction_id": "${pix_transaction_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210321 21:44:54.755" level="INFO">${body} = { "amount": 2000, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "1719245...</msg>
<status status="PASS" endtime="20210321 21:44:54.755" starttime="20210321 21:44:54.754"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210321 21:44:54.757" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/7ba26edab4ff435faa83048443de1ef3/accounts/b6af8dbff77e4fcbb5840dc4c08e3c3e/payments, files=None, params=None, timeout=None, allow_redirects=True
headers={'Connection': 'keep-alive', u'Content-Type': u'application/json', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.23.0'} 
data={ "amount": 2000, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX", "transaction_id": "" } 
json=None</msg>
<msg timestamp="20210321 21:44:55.386" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:55.386" starttime="20210321 21:44:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.388" level="INFO">{u'status': u'pending', u'debtor': {u'account': {u'routing_number': u'0001', u'psp': {u'code': u'19468242', u'name': u'Zoop Tecnologia e Meios de Pagamento S.A.'}, u'type': u'cacc', u'number': u'9921218017', u'digital_account_id': u'b6af8dbff77e4fcbb5840dc4c08e3c3e'}, u'holder_id': u'7ba26edab4ff435faa83048443de1ef3', u'type': u'individual', u'name': u'Holder de teste', u'national_registration': u'59048123615'}, u'creditor': {u'account': {u'routing_number': u'0500', u'psp': {u'code': u'17192451'}, u'type': u'cacc', u'number': u'0243882974'}, u'type': u'individual', u'name': u'Massa iti PF NauNNMO', u'national_registration': u'42808422644'}, u'marketplace_id': u'f71a8951368a4cc085cf7875ff44e61c', u'refunded_amount': 0, u'end_to_end_id': u'E19468242202103220044e26259500b8', u'created_at': u'2021-03-21T21:44:55.313297', u'id': u'2e1b81dad51f4f4ea848d0d0ceed63b6', u'amount': 2000, u'message_id': u'M19468242cc914b0800e09848c5105d7', u'transaction_id': u'', u'description': u'Envio de PIX'}</msg>
<status status="PASS" endtime="20210321 21:44:55.389" starttime="20210321 21:44:55.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.390" level="INFO">3d64ffbed7954f85</msg>
<status status="PASS" endtime="20210321 21:44:55.390" starttime="20210321 21:44:55.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.391" level="INFO">201</msg>
<status status="PASS" endtime="20210321 21:44:55.391" starttime="20210321 21:44:55.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.393" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20210321 21:44:55.393" starttime="20210321 21:44:55.392"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210321 21:44:55.395" level="INFO">${payment_external_key} = 2e1b81dad51f4f4ea848d0d0ceed63b6</msg>
<status status="PASS" endtime="20210321 21:44:55.395" starttime="20210321 21:44:55.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.396" level="INFO">${payment_external_key} = 2e1b81dad51f4f4ea848d0d0ceed63b6</msg>
<status status="PASS" endtime="20210321 21:44:55.397" starttime="20210321 21:44:55.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210321 21:44:55.398" level="INFO">${end_to_end_id} = E19468242202103220044e26259500b8</msg>
<status status="PASS" endtime="20210321 21:44:55.399" starttime="20210321 21:44:55.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.400" level="INFO">${end_to_end_id} = E19468242202103220044e26259500b8</msg>
<status status="PASS" endtime="20210321 21:44:55.400" starttime="20210321 21:44:55.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210321 21:44:55.402" level="INFO">${message_id} = M19468242cc914b0800e09848c5105d7</msg>
<status status="PASS" endtime="20210321 21:44:55.403" starttime="20210321 21:44:55.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.404" level="INFO">${message_id} = M19468242cc914b0800e09848c5105d7</msg>
<status status="PASS" endtime="20210321 21:44:55.404" starttime="20210321 21:44:55.403"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:55.404" starttime="20210321 21:44:54.747"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>transaction_id=${EMPTY}</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210321 21:44:55.408" level="INFO">${date} = 2021-03-21 21:44:55.408000</msg>
<status status="PASS" endtime="20210321 21:44:55.408" starttime="20210321 21:44:55.408"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210321 21:44:55.409" level="INFO">${date} = 2021-03-21</msg>
<status status="PASS" endtime="20210321 21:44:55.409" starttime="20210321 21:44:55.408"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["transaction_id"]}</arg>
<arg>${transaction_id}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.410" starttime="20210321 21:44:55.409"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.411" starttime="20210321 21:44:55.411"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.412" starttime="20210321 21:44:55.411"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.413" level="INFO">Length is 32</msg>
<status status="PASS" endtime="20210321 21:44:55.413" starttime="20210321 21:44:55.412"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.413" level="INFO">Length is 32</msg>
<status status="PASS" endtime="20210321 21:44:55.413" starttime="20210321 21:44:55.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:55.416" starttime="20210321 21:44:55.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["created_at"]}</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.417" starttime="20210321 21:44:55.416"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.418" starttime="20210321 21:44:55.417"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.420" starttime="20210321 21:44:55.419"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.421" starttime="20210321 21:44:55.420"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.423" starttime="20210321 21:44:55.422"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.424" starttime="20210321 21:44:55.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.425" starttime="20210321 21:44:55.424"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.427" starttime="20210321 21:44:55.426"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.429" starttime="20210321 21:44:55.428"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.431" starttime="20210321 21:44:55.429"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.433" starttime="20210321 21:44:55.431"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.434" starttime="20210321 21:44:55.433"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.435" starttime="20210321 21:44:55.435"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.436" starttime="20210321 21:44:55.435"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.437" starttime="20210321 21:44:55.436"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.439" starttime="20210321 21:44:55.438"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.440" starttime="20210321 21:44:55.439"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.441" starttime="20210321 21:44:55.440"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" endtime="20210321 21:44:55.441" starttime="20210321 21:44:55.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["refunded_amount"]}</arg>
<arg>${refunded_amount}</arg>
</arguments>
<msg timestamp="20210321 21:44:55.443" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210321 21:44:55.443" starttime="20210321 21:44:55.442"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:55.443" starttime="20210321 21:44:55.404"></status>
</kw>
<status status="PASS" endtime="20210321 21:44:55.444" critical="yes" starttime="20210321 21:44:47.385"></status>
</test>
<doc>Funcionalidade: Criar Chave de EndereÃ§amento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma chave de endereÃ§amento PIX associada Ã  minha conta</doc>
<status status="FAIL" endtime="20210321 21:44:55.449" starttime="20210321 21:44:36.202"></status>
</suite>
<status status="FAIL" endtime="20210321 21:44:55.458" starttime="20210321 21:44:36.197"></status>
</suite>
<status status="FAIL" endtime="20210321 21:44:55.466" starttime="20210321 21:44:36.162"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="Pix-Payments" pass="1">Pix-Payments</stat>
<stat fail="1" id="s1-s1" name="Envio" pass="1">Pix-Payments.Envio</stat>
<stat fail="1" id="s1-s1-s1" name="Criar Pagamento PIX" pass="1">Pix-Payments.Envio.Criar Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

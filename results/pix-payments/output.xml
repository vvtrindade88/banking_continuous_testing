<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210323 19:35:32.154" rpa="false">
<suite id="s1" name="Receber Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento\Receber Pagamento PIX.robot">
<test id="s1-t1" name="Cenário: Receber pagamento PIX com end to end já recebido">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>individual</arg>
<arg>national_registration</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210323 19:35:32.717" level="INFO">${phone} = 59791924</msg>
<status status="PASS" starttime="20210323 19:35:32.717" endtime="20210323 19:35:32.717"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210323 19:35:32.717" level="INFO">${phone_pix} = +5521959791924</msg>
<status status="PASS" starttime="20210323 19:35:32.717" endtime="20210323 19:35:32.718"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210323 19:35:32.718" level="INFO">${phone_pix} = +5521959791924</msg>
<status status="PASS" starttime="20210323 19:35:32.718" endtime="20210323 19:35:32.718"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210323 19:35:32.718" level="INFO">${email_pix} = maysa41@jesus.com</msg>
<status status="PASS" starttime="20210323 19:35:32.718" endtime="20210323 19:35:32.718"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210323 19:35:32.719" level="INFO">${email_pix} = maysa41@jesus.com</msg>
<status status="PASS" starttime="20210323 19:35:32.719" endtime="20210323 19:35:32.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:32.720" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:32.720" endtime="20210323 19:35:32.735"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:32.720" endtime="20210323 19:35:32.735"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:35:32.736" level="INFO">${national_registration} = 486.032.597-47</msg>
<status status="PASS" starttime="20210323 19:35:32.735" endtime="20210323 19:35:32.736"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:35:32.736" level="INFO">${national_registration} = 486032597-47</msg>
<status status="PASS" starttime="20210323 19:35:32.736" endtime="20210323 19:35:32.736"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:35:32.737" level="INFO">${national_registration} = 48603259747</msg>
<status status="PASS" starttime="20210323 19:35:32.736" endtime="20210323 19:35:32.737"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210323 19:35:32.737" level="INFO">${national_registration} = 48603259747</msg>
<status status="PASS" starttime="20210323 19:35:32.737" endtime="20210323 19:35:32.737"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210323 19:35:32.737" level="INFO">${identity_card} = 37650142X</msg>
<status status="PASS" starttime="20210323 19:35:32.737" endtime="20210323 19:35:32.738"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210323 19:35:32.738" level="INFO">${identity_card} = 37650142X</msg>
<status status="PASS" starttime="20210323 19:35:32.738" endtime="20210323 19:35:32.738"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:32.739" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:32.739" endtime="20210323 19:35:32.740"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:32.739" endtime="20210323 19:35:32.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210323 19:35:32.740" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210323 19:35:32.740" endtime="20210323 19:35:32.740"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:35:32.741" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:35:32.740" endtime="20210323 19:35:32.741"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:32.742" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:32.741" endtime="20210323 19:35:32.742"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:32.743" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "48603259747", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210323 19:35:32.742" endtime="20210323 19:35:32.743"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:32.743" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "48603259747", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "37650142X", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210323 19:35:33.460" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:32.743" endtime="20210323 19:35:33.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.461" level="INFO">{'id': '01dbca072cba43a4bca94b52d62309ab', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-23T19:35:33.627748', 'updated_at': '2021-03-23T19:35:33.627755', 'type': 'individual', 'national_registration': '48603259747', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '37650142X', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:33.461" endtime="20210323 19:35:33.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.462" level="INFO">65ae174fb2b83b49</msg>
<status status="PASS" starttime="20210323 19:35:33.462" endtime="20210323 19:35:33.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.462" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "48603259747", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "37650142X", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210323 19:35:33.462" endtime="20210323 19:35:33.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.463" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.463" endtime="20210323 19:35:33.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:33.464" level="INFO">${holder_external_key} = 01dbca072cba43a4bca94b52d62309ab</msg>
<status status="PASS" starttime="20210323 19:35:33.463" endtime="20210323 19:35:33.464"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.464" level="INFO">${holder_external_key} = 01dbca072cba43a4bca94b52d62309ab</msg>
<status status="PASS" starttime="20210323 19:35:33.464" endtime="20210323 19:35:33.464"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:32.738" endtime="20210323 19:35:33.465"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.465" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:35:33.465" endtime="20210323 19:35:33.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:33.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.465" endtime="20210323 19:35:33.466"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:33.467" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:33.467" endtime="20210323 19:35:33.467"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:33.468" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210323 19:35:33.467" endtime="20210323 19:35:33.469"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:33.469" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210323 19:35:33.719" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.469" endtime="20210323 19:35:33.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.721" level="INFO">{'id': 'bfacf140625741878d1ee481bba8215d', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/phones/bfacf140625741878d1ee481bba8215d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:33.720" endtime="20210323 19:35:33.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.721" level="INFO">d86c605ac61bd5b3</msg>
<status status="PASS" starttime="20210323 19:35:33.721" endtime="20210323 19:35:33.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.721" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.721" endtime="20210323 19:35:33.721"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:33.722" level="INFO">${phone_external_key} = bfacf140625741878d1ee481bba8215d</msg>
<status status="PASS" starttime="20210323 19:35:33.722" endtime="20210323 19:35:33.722"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.723" level="INFO">${phone_external_key} = bfacf140625741878d1ee481bba8215d</msg>
<status status="PASS" starttime="20210323 19:35:33.722" endtime="20210323 19:35:33.723"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:33.466" endtime="20210323 19:35:33.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:33.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.723" endtime="20210323 19:35:33.723"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:33.724" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:33.724" endtime="20210323 19:35:33.724"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:33.726" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210323 19:35:33.726" endtime="20210323 19:35:33.726"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:33.726" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210323 19:35:33.962" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.726" endtime="20210323 19:35:33.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.964" level="INFO">{'id': '471608d0dc734c17b74de100c3cadab0', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/addresses/471608d0dc734c17b74de100c3cadab0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:33.963" endtime="20210323 19:35:33.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.966" level="INFO">fca199b3cd235262</msg>
<status status="PASS" starttime="20210323 19:35:33.966" endtime="20210323 19:35:33.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.968" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.967" endtime="20210323 19:35:33.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:33.969" level="INFO">${address_external_key} = 471608d0dc734c17b74de100c3cadab0</msg>
<status status="PASS" starttime="20210323 19:35:33.968" endtime="20210323 19:35:33.969"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:33.971" level="INFO">${address_external_key} = 471608d0dc734c17b74de100c3cadab0</msg>
<status status="PASS" starttime="20210323 19:35:33.970" endtime="20210323 19:35:33.971"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:33.724" endtime="20210323 19:35:33.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:33.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.971" endtime="20210323 19:35:33.972"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:33.974" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:35:33.974" endtime="20210323 19:35:33.974"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:35:33.975" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:35:33.976" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:35:33.975" endtime="20210323 19:35:33.976"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:33.977" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:35:34.281" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:33.977" endtime="20210323 19:35:34.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.283" level="INFO">{'id': 'a94348db611d4acfaf1d54576bacd9c0', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents/a94348db611d4acfaf1d54576bacd9c0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents/a94348db611d4acfaf1d54576bacd9c0/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:34.282" endtime="20210323 19:35:34.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.285" level="INFO">6065857b0c39098a</msg>
<status status="PASS" starttime="20210323 19:35:34.285" endtime="20210323 19:35:34.285"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.287" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.286" endtime="20210323 19:35:34.287"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:34.288" level="INFO">${document_external_key} = a94348db611d4acfaf1d54576bacd9c0</msg>
<status status="PASS" starttime="20210323 19:35:34.287" endtime="20210323 19:35:34.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.290" level="INFO">${document_external_key} = a94348db611d4acfaf1d54576bacd9c0</msg>
<status status="PASS" starttime="20210323 19:35:34.289" endtime="20210323 19:35:34.290"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>CURDIR :: C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:34.290" endtime="20210323 19:35:34.292"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EXECDIR :: ${EXECDIR}.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:34.293" endtime="20210323 19:35:34.295"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:33.973" endtime="20210323 19:35:34.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:34.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.295" endtime="20210323 19:35:34.295"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:34.296" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:35:34.296" endtime="20210323 19:35:34.296"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:35:34.296" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:35:34.297" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:35:34.296" endtime="20210323 19:35:34.297"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:34.298" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:35:34.640" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.297" endtime="20210323 19:35:34.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.640" level="INFO">{'id': 'daf9bb9e287644cb87c59ac881b62811', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents/daf9bb9e287644cb87c59ac881b62811', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents/daf9bb9e287644cb87c59ac881b62811/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:34.640" endtime="20210323 19:35:34.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.640" level="INFO">9c81ca767663cfad</msg>
<status status="PASS" starttime="20210323 19:35:34.640" endtime="20210323 19:35:34.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.642" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.641" endtime="20210323 19:35:34.642"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:34.642" level="INFO">${document_external_key} = daf9bb9e287644cb87c59ac881b62811</msg>
<status status="PASS" starttime="20210323 19:35:34.642" endtime="20210323 19:35:34.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.642" level="INFO">${document_external_key} = daf9bb9e287644cb87c59ac881b62811</msg>
<status status="PASS" starttime="20210323 19:35:34.642" endtime="20210323 19:35:34.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>CURDIR :: C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:34.642" endtime="20210323 19:35:34.643"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EXECDIR :: ${EXECDIR}.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:34.644" endtime="20210323 19:35:34.644"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:34.295" endtime="20210323 19:35:34.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:34.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.645" endtime="20210323 19:35:34.645"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:34.646" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:35:34.645" endtime="20210323 19:35:34.646"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:35:34.646" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:35:34.647" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:35:34.646" endtime="20210323 19:35:34.647"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:34.648" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:35:34.946" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.647" endtime="20210323 19:35:34.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.948" level="INFO">{'id': 'a0ba89dabb3340a7b433e2a7caeda51d', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents/a0ba89dabb3340a7b433e2a7caeda51d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/documents/a0ba89dabb3340a7b433e2a7caeda51d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:34.947" endtime="20210323 19:35:34.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.951" level="INFO">fd656f429ca9f480</msg>
<status status="PASS" starttime="20210323 19:35:34.950" endtime="20210323 19:35:34.951"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.952" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.952" endtime="20210323 19:35:34.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:34.953" level="INFO">${document_external_key} = a0ba89dabb3340a7b433e2a7caeda51d</msg>
<status status="PASS" starttime="20210323 19:35:34.952" endtime="20210323 19:35:34.953"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:34.953" level="INFO">${document_external_key} = a0ba89dabb3340a7b433e2a7caeda51d</msg>
<status status="PASS" starttime="20210323 19:35:34.953" endtime="20210323 19:35:34.953"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>CURDIR :: C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:34.953" endtime="20210323 19:35:34.954"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EXECDIR :: ${EXECDIR}.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:34.954" endtime="20210323 19:35:34.955"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:34.645" endtime="20210323 19:35:34.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:34.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.955" endtime="20210323 19:35:34.955"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:34.956" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:34.956" endtime="20210323 19:35:34.956"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:34.956" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:35:35.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:34.956" endtime="20210323 19:35:35.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:35.242" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210323 19:35:35.242" endtime="20210323 19:35:35.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:35.243" level="INFO">c51acfef3f92bf48</msg>
<status status="PASS" starttime="20210323 19:35:35.242" endtime="20210323 19:35:35.243"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:35.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.243" endtime="20210323 19:35:35.243"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:34.955" endtime="20210323 19:35:35.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:35.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.244" endtime="20210323 19:35:35.244"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210323 19:35:35.245" level="INFO">${assessment_id} = f74b4773-6ff1-42d5-8705-73eb9c443ceb</msg>
<status status="PASS" starttime="20210323 19:35:35.245" endtime="20210323 19:35:35.245"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210323 19:35:35.246" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210323 19:35:35.245" endtime="20210323 19:35:35.246"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210323 19:35:35.246" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210323 19:35:35.246" endtime="20210323 19:35:35.246"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210323 19:35:35.247" level="INFO">${day} = 23</msg>
<status status="PASS" starttime="20210323 19:35:35.246" endtime="20210323 19:35:35.247"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:35.247" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:35.247" endtime="20210323 19:35:35.247"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:35.248" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210323 19:35:35.247" endtime="20210323 19:35:35.248"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:35.248" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/01dbca072cba43a4bca94b52d62309ab/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "01dbca072cba43a4bca94b52d62309ab", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "f74b4773-6ff1-42d5-8705-73eb9c443ceb" } } 
json=None</msg>
<msg timestamp="20210323 19:35:35.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.248" endtime="20210323 19:35:35.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:35.452" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210323 19:35:35.451" endtime="20210323 19:35:35.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:35.453" level="INFO">57f809d2798e169e</msg>
<status status="PASS" starttime="20210323 19:35:35.452" endtime="20210323 19:35:35.453"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:35.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.454" endtime="20210323 19:35:35.455"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:35.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.455" endtime="20210323 19:35:35.456"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:35.244" endtime="20210323 19:35:35.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:35.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.457" endtime="20210323 19:35:35.458"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:35.459" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:35.459" endtime="20210323 19:35:35.459"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:35.458" endtime="20210323 19:35:35.459"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:35.460" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/01dbca072cba43a4bca94b52d62309ab/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:35:36.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:35.459" endtime="20210323 19:35:36.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.154" level="INFO">{'items': [{'id': 'ca68b1595b91473f8bf8472db28d30da', 'holder': '01dbca072cba43a4bca94b52d62309ab', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1100927117', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-23T22:35:35.635437', 'updated_at': '2021-03-23T22:35:35.635437', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/ca68b1595b91473f8bf8472db28d30da', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210323 19:35:36.154" endtime="20210323 19:35:36.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:36.154" endtime="20210323 19:35:36.155"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:36.155" level="INFO">${account_external_key} = ca68b1595b91473f8bf8472db28d30da</msg>
<status status="PASS" starttime="20210323 19:35:36.155" endtime="20210323 19:35:36.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.156" level="INFO">${account_external_key} = ca68b1595b91473f8bf8472db28d30da</msg>
<status status="PASS" starttime="20210323 19:35:36.156" endtime="20210323 19:35:36.156"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210323 19:35:36.157" level="INFO">${account_number} = 1100927117</msg>
<status status="PASS" starttime="20210323 19:35:36.156" endtime="20210323 19:35:36.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.157" level="INFO">${account_number} = 1100927117</msg>
<status status="PASS" starttime="20210323 19:35:36.157" endtime="20210323 19:35:36.157"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210323 19:35:36.158" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:35:36.158" endtime="20210323 19:35:36.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.158" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:35:36.158" endtime="20210323 19:35:36.159"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:35.458" endtime="20210323 19:35:36.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:36.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:36.159" endtime="20210323 19:35:36.159"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:32.719" endtime="20210323 19:35:36.159"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:32.719" endtime="20210323 19:35:36.159"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210323 19:35:36.160" level="INFO">${uuid} = a4ca8570-8876-492d-b6d9-36ab1b30cd57</msg>
<status status="PASS" starttime="20210323 19:35:36.160" endtime="20210323 19:35:36.160"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:36.161" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:36.161" endtime="20210323 19:35:36.161"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:36.160" endtime="20210323 19:35:36.161"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:36.162" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:36.162" endtime="20210323 19:35:36.162"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:36.163" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "a4ca8570-8876-492d-b6d9-36ab1b30cd57", "transaction_id": "a4ca8570-8876-492d-b6d9-36ab1b30cd57", "id": "a4ca8570-8876-492d-b6d9-36ab...</msg>
<status status="PASS" starttime="20210323 19:35:36.162" endtime="20210323 19:35:36.163"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:36.164" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/a4ca8570-8876-492d-b6d9-36ab1b30cd57, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "a4ca8570-8876-492d-b6d9-36ab1b30cd57", "transaction_id": "a4ca8570-8876-492d-b6d9-36ab1b30cd57", "id": "a4ca8570-8876-492d-b6d9-36ab1b30cd57", "id_checking_account": "ca68b1595b91473f8bf8472db28d30da", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "a4ca8570-8876-492d-b6d9-36ab1b30cd57", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210323 19:35:36.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:36.164" endtime="20210323 19:35:36.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:36.810" endtime="20210323 19:35:36.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:36.811" endtime="20210323 19:35:36.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:36.811" endtime="20210323 19:35:36.812"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:36.160" endtime="20210323 19:35:36.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:36.813" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:36.813" endtime="20210323 19:35:36.814"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:36.813" endtime="20210323 19:35:36.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.814" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210323 19:35:36.814" endtime="20210323 19:35:36.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210323 19:35:36.814" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210323 19:35:36.814" endtime="20210323 19:35:36.814"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:36.815" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:36.815" endtime="20210323 19:35:36.815"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:36.815" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210323 19:35:36.815" endtime="20210323 19:35:36.815"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:36.816" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/01dbca072cba43a4bca94b52d62309ab/accounts/ca68b1595b91473f8bf8472db28d30da/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210323 19:35:38.971" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:36.815" endtime="20210323 19:35:38.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.972" level="INFO">{'id': 'fc03faa7e7ef49b18c0ee0845c7beb82', 'status': 'active', 'created_at': '2021-03-23T07:35:37.704', 'updated_at': '2021-03-23T07:35:37.704', 'key': {'value': '48603259747', 'type': 'national_registration'}, 'account': {'id': 'ca68b1595b91473f8bf8472db28d30da', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '01dbca072cba43a4bca94b52d62309ab', 'owner': {'name': 'Holder de teste', 'national_registration': '48603259747', 'type': 'individual'}, 'routing_number': '001', 'number': '1100927117', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210323 19:35:38.972" endtime="20210323 19:35:38.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.973" level="INFO">52e3f8f0ce9453bc</msg>
<status status="PASS" starttime="20210323 19:35:38.972" endtime="20210323 19:35:38.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.973" level="INFO">201</msg>
<status status="PASS" starttime="20210323 19:35:38.973" endtime="20210323 19:35:38.973"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.974" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:38.973" endtime="20210323 19:35:38.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:38.974" level="INFO">${entry_external_key} = fc03faa7e7ef49b18c0ee0845c7beb82</msg>
<status status="PASS" starttime="20210323 19:35:38.974" endtime="20210323 19:35:38.974"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.975" level="INFO">${entry_external_key} = fc03faa7e7ef49b18c0ee0845c7beb82</msg>
<status status="PASS" starttime="20210323 19:35:38.974" endtime="20210323 19:35:38.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210323 19:35:38.975" level="INFO">${entry_key_value} = 48603259747</msg>
<status status="PASS" starttime="20210323 19:35:38.975" endtime="20210323 19:35:38.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.976" level="INFO">${entry_key_value} = 48603259747</msg>
<status status="PASS" starttime="20210323 19:35:38.976" endtime="20210323 19:35:38.976"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:36.812" endtime="20210323 19:35:38.976"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:36.812" endtime="20210323 19:35:38.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:38.976" endtime="20210323 19:35:38.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:38.977" endtime="20210323 19:35:38.977"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:32.717" endtime="20210323 19:35:38.977"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210323 19:35:38.978" level="INFO">${date} = 2021-03-23 19:35:38.977998</msg>
<status status="PASS" starttime="20210323 19:35:38.978" endtime="20210323 19:35:38.978"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210323 19:35:38.979" level="INFO">${datetime} = 202103231935</msg>
<status status="PASS" starttime="20210323 19:35:38.979" endtime="20210323 19:35:38.979"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210323 19:35:38.980" level="INFO">${random_number_message_id} = 74987168526088538405899</msg>
<status status="PASS" starttime="20210323 19:35:38.980" endtime="20210323 19:35:38.980"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210323 19:35:38.981" level="INFO">${message_id} = M1946824274987168526088538405899</msg>
<status status="PASS" starttime="20210323 19:35:38.981" endtime="20210323 19:35:38.981"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210323 19:35:38.982" level="INFO">${random_number_end_to_end_id} = 92251663708</msg>
<status status="PASS" starttime="20210323 19:35:38.981" endtime="20210323 19:35:38.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210323 19:35:38.982" level="INFO">${end_to_end_id} = E1946824220210323193592251663708</msg>
<status status="PASS" starttime="20210323 19:35:38.982" endtime="20210323 19:35:38.982"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210323 19:35:38.983" level="INFO">${date} = 2021-03-23 19:35:38.983001</msg>
<status status="PASS" starttime="20210323 19:35:38.983" endtime="20210323 19:35:38.983"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210323 19:35:38.984" level="INFO">${datetime} = 2021-03-23</msg>
<status status="PASS" starttime="20210323 19:35:38.983" endtime="20210323 19:35:38.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20210323 19:35:38.984" level="INFO">2021-03-23</msg>
<status status="PASS" starttime="20210323 19:35:38.984" endtime="20210323 19:35:38.984"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:38.985" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:38.984" endtime="20210323 19:35:38.985"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:38.984" endtime="20210323 19:35:38.985"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:38.986" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:38.985" endtime="20210323 19:35:38.986"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": 5000000,</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "5601560",</arg>
<arg>"psp": "60746958",</arg>
<arg>"routing_number": "001",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "34772935177",</arg>
<arg>"identification": "Test Sender",</arg>
<arg>"name": "Carlos Drummont"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:38.986" level="INFO">${body} = { "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323193592251663708", "message_id": "M1946824274987168526088538405899", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210323 19:35:38.986" endtime="20210323 19:35:38.986"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:38.987" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323193592251663708", "message_id": "M1946824274987168526088538405899", "receiver": { "account_details": { "number": "1100927117", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "48603259747" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "5601560", "psp": "60746958", "routing_number": "001", "type": "cacc" }, "document": "34772935177", "identification": "Test Sender", "name": "Carlos Drummont" } } 
json=None</msg>
<msg timestamp="20210323 19:35:39.671" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:38.986" endtime="20210323 19:35:39.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.672" level="INFO">{'id': 'ff00f22b990c49bdbbcf66ac27217674', 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210323 19:35:39.672" endtime="20210323 19:35:39.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.673" level="INFO">48555831de5cdcef</msg>
<status status="PASS" starttime="20210323 19:35:39.673" endtime="20210323 19:35:39.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.674" level="INFO">201</msg>
<status status="PASS" starttime="20210323 19:35:39.673" endtime="20210323 19:35:39.674"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.675" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:39.674" endtime="20210323 19:35:39.675"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:38.983" endtime="20210323 19:35:39.675"></status>
</kw>
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>individual</arg>
<arg>national_registration</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210323 19:35:39.677" level="INFO">${phone} = 96915934</msg>
<status status="PASS" starttime="20210323 19:35:39.676" endtime="20210323 19:35:39.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210323 19:35:39.678" level="INFO">${phone_pix} = +5521996915934</msg>
<status status="PASS" starttime="20210323 19:35:39.677" endtime="20210323 19:35:39.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.678" level="INFO">${phone_pix} = +5521996915934</msg>
<status status="PASS" starttime="20210323 19:35:39.678" endtime="20210323 19:35:39.678"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210323 19:35:39.679" level="INFO">${email_pix} = theodias@rocha.com</msg>
<status status="PASS" starttime="20210323 19:35:39.678" endtime="20210323 19:35:39.679"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.679" level="INFO">${email_pix} = theodias@rocha.com</msg>
<status status="PASS" starttime="20210323 19:35:39.679" endtime="20210323 19:35:39.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:39.681" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:39.681" endtime="20210323 19:35:39.681"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:39.680" endtime="20210323 19:35:39.681"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:35:39.682" level="INFO">${national_registration} = 974.130.865-57</msg>
<status status="PASS" starttime="20210323 19:35:39.682" endtime="20210323 19:35:39.682"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:35:39.682" level="INFO">${national_registration} = 974130865-57</msg>
<status status="PASS" starttime="20210323 19:35:39.682" endtime="20210323 19:35:39.682"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210323 19:35:39.683" level="INFO">${national_registration} = 97413086557</msg>
<status status="PASS" starttime="20210323 19:35:39.683" endtime="20210323 19:35:39.683"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.683" level="INFO">${national_registration} = 97413086557</msg>
<status status="PASS" starttime="20210323 19:35:39.683" endtime="20210323 19:35:39.683"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210323 19:35:39.684" level="INFO">${identity_card} = 524130863</msg>
<status status="PASS" starttime="20210323 19:35:39.684" endtime="20210323 19:35:39.684"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.684" level="INFO">${identity_card} = 524130863</msg>
<status status="PASS" starttime="20210323 19:35:39.684" endtime="20210323 19:35:39.684"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:39.686" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:39.686" endtime="20210323 19:35:39.686"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:39.686" endtime="20210323 19:35:39.687"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.687" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210323 19:35:39.687" endtime="20210323 19:35:39.687"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:35:39.688" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:35:39.687" endtime="20210323 19:35:39.688"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:39.688" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:39.688" endtime="20210323 19:35:39.688"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:39.689" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "97413086557", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210323 19:35:39.689" endtime="20210323 19:35:39.689"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:39.690" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "97413086557", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "524130863", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210323 19:35:40.337" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:39.690" endtime="20210323 19:35:40.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.338" level="INFO">{'id': '28ef2be6ab334e06bc6cda615c223bb2', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-23T19:35:40.521317', 'updated_at': '2021-03-23T19:35:40.521319', 'type': 'individual', 'national_registration': '97413086557', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '524130863', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:40.337" endtime="20210323 19:35:40.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.338" level="INFO">1786c7d94f59adda</msg>
<status status="PASS" starttime="20210323 19:35:40.338" endtime="20210323 19:35:40.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.340" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "97413086557", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "524130863", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210323 19:35:40.338" endtime="20210323 19:35:40.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.340" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.340" endtime="20210323 19:35:40.340"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:40.341" level="INFO">${holder_external_key} = 28ef2be6ab334e06bc6cda615c223bb2</msg>
<status status="PASS" starttime="20210323 19:35:40.340" endtime="20210323 19:35:40.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.341" level="INFO">${holder_external_key} = 28ef2be6ab334e06bc6cda615c223bb2</msg>
<status status="PASS" starttime="20210323 19:35:40.341" endtime="20210323 19:35:40.341"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:39.685" endtime="20210323 19:35:40.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.341" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210323 19:35:40.341" endtime="20210323 19:35:40.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:40.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.341" endtime="20210323 19:35:40.341"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:40.343" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:40.343" endtime="20210323 19:35:40.343"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:40.344" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210323 19:35:40.343" endtime="20210323 19:35:40.344"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:40.344" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210323 19:35:40.559" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.344" endtime="20210323 19:35:40.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.561" level="INFO">{'id': '882ec0893bf54a388f8c84b1cdba4a2d', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/phones/882ec0893bf54a388f8c84b1cdba4a2d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:40.560" endtime="20210323 19:35:40.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.563" level="INFO">3c22d91630d10263</msg>
<status status="PASS" starttime="20210323 19:35:40.562" endtime="20210323 19:35:40.563"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.565" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.564" endtime="20210323 19:35:40.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:40.568" level="INFO">${phone_external_key} = 882ec0893bf54a388f8c84b1cdba4a2d</msg>
<status status="PASS" starttime="20210323 19:35:40.566" endtime="20210323 19:35:40.568"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.570" level="INFO">${phone_external_key} = 882ec0893bf54a388f8c84b1cdba4a2d</msg>
<status status="PASS" starttime="20210323 19:35:40.569" endtime="20210323 19:35:40.570"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:40.343" endtime="20210323 19:35:40.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:40.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.570" endtime="20210323 19:35:40.571"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:40.573" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:40.573" endtime="20210323 19:35:40.573"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:40.574" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210323 19:35:40.573" endtime="20210323 19:35:40.574"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:40.574" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210323 19:35:40.808" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.574" endtime="20210323 19:35:40.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.809" level="INFO">{'id': '2f8f1128c36a4e03a8596778ac682a44', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/addresses/2f8f1128c36a4e03a8596778ac682a44', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:40.808" endtime="20210323 19:35:40.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.809" level="INFO">c05bc7662118af23</msg>
<status status="PASS" starttime="20210323 19:35:40.809" endtime="20210323 19:35:40.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.810" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.810" endtime="20210323 19:35:40.810"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:40.811" level="INFO">${address_external_key} = 2f8f1128c36a4e03a8596778ac682a44</msg>
<status status="PASS" starttime="20210323 19:35:40.810" endtime="20210323 19:35:40.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:40.811" level="INFO">${address_external_key} = 2f8f1128c36a4e03a8596778ac682a44</msg>
<status status="PASS" starttime="20210323 19:35:40.811" endtime="20210323 19:35:40.811"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:40.572" endtime="20210323 19:35:40.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:40.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.811" endtime="20210323 19:35:40.812"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:40.812" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:35:40.812" endtime="20210323 19:35:40.812"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:35:40.813" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:35:40.814" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:35:40.812" endtime="20210323 19:35:40.814"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:40.815" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:35:41.089" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:40.814" endtime="20210323 19:35:41.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.090" level="INFO">{'id': 'bfa42be66c66406397aedae5ed2fee2e', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents/bfa42be66c66406397aedae5ed2fee2e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents/bfa42be66c66406397aedae5ed2fee2e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:41.090" endtime="20210323 19:35:41.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.091" level="INFO">2eebd97cc60574a1</msg>
<status status="PASS" starttime="20210323 19:35:41.091" endtime="20210323 19:35:41.092"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.092" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.092" endtime="20210323 19:35:41.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:41.094" level="INFO">${document_external_key} = bfa42be66c66406397aedae5ed2fee2e</msg>
<status status="PASS" starttime="20210323 19:35:41.093" endtime="20210323 19:35:41.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.095" level="INFO">${document_external_key} = bfa42be66c66406397aedae5ed2fee2e</msg>
<status status="PASS" starttime="20210323 19:35:41.094" endtime="20210323 19:35:41.095"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>CURDIR :: C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:41.095" endtime="20210323 19:35:41.096"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EXECDIR :: ${EXECDIR}.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:41.097" endtime="20210323 19:35:41.098"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:40.812" endtime="20210323 19:35:41.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:41.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.098" endtime="20210323 19:35:41.099"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:41.100" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:35:41.099" endtime="20210323 19:35:41.100"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:35:41.101" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:35:41.102" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:35:41.100" endtime="20210323 19:35:41.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:41.103" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:35:41.630" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.102" endtime="20210323 19:35:41.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.633" level="INFO">{'id': 'ec4c3f0f2b2d470386cdaca805acf158', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents/ec4c3f0f2b2d470386cdaca805acf158', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents/ec4c3f0f2b2d470386cdaca805acf158/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:41.631" endtime="20210323 19:35:41.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.635" level="INFO">57584b6b83e3af08</msg>
<status status="PASS" starttime="20210323 19:35:41.634" endtime="20210323 19:35:41.635"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.636" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.635" endtime="20210323 19:35:41.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:41.638" level="INFO">${document_external_key} = ec4c3f0f2b2d470386cdaca805acf158</msg>
<status status="PASS" starttime="20210323 19:35:41.637" endtime="20210323 19:35:41.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.639" level="INFO">${document_external_key} = ec4c3f0f2b2d470386cdaca805acf158</msg>
<status status="PASS" starttime="20210323 19:35:41.639" endtime="20210323 19:35:41.639"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>CURDIR :: C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:41.640" endtime="20210323 19:35:41.643"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EXECDIR :: ${EXECDIR}.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:41.644" endtime="20210323 19:35:41.646"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:41.099" endtime="20210323 19:35:41.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:41.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.647" endtime="20210323 19:35:41.647"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:41.648" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210323 19:35:41.648" endtime="20210323 19:35:41.648"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210323 19:35:41.649" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210323 19:35:41.650" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210323 19:35:41.648" endtime="20210323 19:35:41.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:41.650" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210323 19:35:41.926" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.650" endtime="20210323 19:35:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.926" level="INFO">{'id': 'fd7b2a67d29f45b190a4a923d64b714f', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents/fd7b2a67d29f45b190a4a923d64b714f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/documents/fd7b2a67d29f45b190a4a923d64b714f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210323 19:35:41.926" endtime="20210323 19:35:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.927" level="INFO">afff5cf372572e6f</msg>
<status status="PASS" starttime="20210323 19:35:41.927" endtime="20210323 19:35:41.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.928" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.927" endtime="20210323 19:35:41.928"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:41.929" level="INFO">${document_external_key} = fd7b2a67d29f45b190a4a923d64b714f</msg>
<status status="PASS" starttime="20210323 19:35:41.928" endtime="20210323 19:35:41.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:41.929" level="INFO">${document_external_key} = fd7b2a67d29f45b190a4a923d64b714f</msg>
<status status="PASS" starttime="20210323 19:35:41.929" endtime="20210323 19:35:41.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>CURDIR :: C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:41.930" endtime="20210323 19:35:41.930"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EXECDIR :: ${EXECDIR}.${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:41.931" endtime="20210323 19:35:41.931"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:41.647" endtime="20210323 19:35:41.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210323 19:35:41.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.932" endtime="20210323 19:35:41.932"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:41.933" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:41.932" endtime="20210323 19:35:41.933"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:41.933" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:35:42.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:41.933" endtime="20210323 19:35:42.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:42.248" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210323 19:35:42.246" endtime="20210323 19:35:42.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:42.250" level="INFO">ec114b93f73f02e7</msg>
<status status="PASS" starttime="20210323 19:35:42.249" endtime="20210323 19:35:42.250"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:42.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.251" endtime="20210323 19:35:42.253"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:41.932" endtime="20210323 19:35:42.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:42.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.254" endtime="20210323 19:35:42.256"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210323 19:35:42.259" level="INFO">${assessment_id} = db7c5ae0-40d4-47fe-b938-94dc589fa5ba</msg>
<status status="PASS" starttime="20210323 19:35:42.258" endtime="20210323 19:35:42.259"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210323 19:35:42.260" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210323 19:35:42.260" endtime="20210323 19:35:42.261"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210323 19:35:42.261" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210323 19:35:42.261" endtime="20210323 19:35:42.261"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210323 19:35:42.262" level="INFO">${day} = 23</msg>
<status status="PASS" starttime="20210323 19:35:42.262" endtime="20210323 19:35:42.262"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:42.264" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:42.264" endtime="20210323 19:35:42.264"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:42.266" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210323 19:35:42.265" endtime="20210323 19:35:42.266"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:42.268" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/28ef2be6ab334e06bc6cda615c223bb2/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-23 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "28ef2be6ab334e06bc6cda615c223bb2", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "db7c5ae0-40d4-47fe-b938-94dc589fa5ba" } } 
json=None</msg>
<msg timestamp="20210323 19:35:42.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.267" endtime="20210323 19:35:42.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:42.472" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210323 19:35:42.472" endtime="20210323 19:35:42.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:42.473" level="INFO">784f203f76c5918b</msg>
<status status="PASS" starttime="20210323 19:35:42.473" endtime="20210323 19:35:42.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:42.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.473" endtime="20210323 19:35:42.474"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:42.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.474" endtime="20210323 19:35:42.474"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:42.257" endtime="20210323 19:35:42.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:42.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.475" endtime="20210323 19:35:42.475"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:42.476" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:42.476" endtime="20210323 19:35:42.476"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:42.475" endtime="20210323 19:35:42.476"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:42.477" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/28ef2be6ab334e06bc6cda615c223bb2/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210323 19:35:43.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:42.477" endtime="20210323 19:35:43.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.079" level="INFO">{'items': [{'id': '6c4e46dfe1ac4a0e9227206bf2b72968', 'holder': '28ef2be6ab334e06bc6cda615c223bb2', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '6082899520', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-23T22:35:42.657769', 'updated_at': '2021-03-23T22:35:42.657769', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/6c4e46dfe1ac4a0e9227206bf2b72968', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210323 19:35:43.079" endtime="20210323 19:35:43.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:43.079" endtime="20210323 19:35:43.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:43.080" level="INFO">${account_external_key} = 6c4e46dfe1ac4a0e9227206bf2b72968</msg>
<status status="PASS" starttime="20210323 19:35:43.080" endtime="20210323 19:35:43.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.080" level="INFO">${account_external_key} = 6c4e46dfe1ac4a0e9227206bf2b72968</msg>
<status status="PASS" starttime="20210323 19:35:43.080" endtime="20210323 19:35:43.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210323 19:35:43.081" level="INFO">${account_number} = 6082899520</msg>
<status status="PASS" starttime="20210323 19:35:43.081" endtime="20210323 19:35:43.081"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.081" level="INFO">${account_number} = 6082899520</msg>
<status status="PASS" starttime="20210323 19:35:43.081" endtime="20210323 19:35:43.081"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210323 19:35:43.082" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:35:43.082" endtime="20210323 19:35:43.082"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.082" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210323 19:35:43.082" endtime="20210323 19:35:43.082"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:42.475" endtime="20210323 19:35:43.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210323 19:35:43.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:43.083" endtime="20210323 19:35:43.083"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:39.680" endtime="20210323 19:35:43.083"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:39.680" endtime="20210323 19:35:43.083"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210323 19:35:43.084" level="INFO">${uuid} = 717fdf76-4bca-4fac-911a-28efd6172353</msg>
<status status="PASS" starttime="20210323 19:35:43.084" endtime="20210323 19:35:43.084"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:43.084" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:43.084" endtime="20210323 19:35:43.085"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:43.084" endtime="20210323 19:35:43.085"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:43.085" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:43.085" endtime="20210323 19:35:43.085"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:43.086" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "717fdf76-4bca-4fac-911a-28efd6172353", "transaction_id": "717fdf76-4bca-4fac-911a-28efd6172353", "id": "717fdf76-4bca-4fac-911a-28ef...</msg>
<status status="PASS" starttime="20210323 19:35:43.086" endtime="20210323 19:35:43.086"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:43.087" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/717fdf76-4bca-4fac-911a-28efd6172353, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "717fdf76-4bca-4fac-911a-28efd6172353", "transaction_id": "717fdf76-4bca-4fac-911a-28efd6172353", "id": "717fdf76-4bca-4fac-911a-28efd6172353", "id_checking_account": "6c4e46dfe1ac4a0e9227206bf2b72968", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "717fdf76-4bca-4fac-911a-28efd6172353", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210323 19:35:43.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:43.086" endtime="20210323 19:35:43.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:43.729" endtime="20210323 19:35:43.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:43.729" endtime="20210323 19:35:43.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:43.730" endtime="20210323 19:35:43.730"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:43.083" endtime="20210323 19:35:43.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:43.732" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:43.732" endtime="20210323 19:35:43.732"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:43.731" endtime="20210323 19:35:43.732"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.733" level="INFO">${type} = national_registration</msg>
<status status="PASS" starttime="20210323 19:35:43.733" endtime="20210323 19:35:43.733"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210323 19:35:43.733" level="INFO">${value} = </msg>
<status status="PASS" starttime="20210323 19:35:43.733" endtime="20210323 19:35:43.733"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:43.734" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:43.734" endtime="20210323 19:35:43.734"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:43.734" level="INFO">${body} = { "type": "national_registration", "value": "" }</msg>
<status status="PASS" starttime="20210323 19:35:43.734" endtime="20210323 19:35:43.734"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:43.735" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/28ef2be6ab334e06bc6cda615c223bb2/accounts/6c4e46dfe1ac4a0e9227206bf2b72968/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "national_registration", "value": "" } 
json=None</msg>
<msg timestamp="20210323 19:35:45.367" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:43.735" endtime="20210323 19:35:45.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.367" level="INFO">{'id': '4cd3d3329d174048a37aa7ae57b8d8a0', 'status': 'active', 'created_at': '2021-03-23T07:35:44.604', 'updated_at': '2021-03-23T07:35:44.604', 'key': {'value': '97413086557', 'type': 'national_registration'}, 'account': {'id': '6c4e46dfe1ac4a0e9227206bf2b72968', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '28ef2be6ab334e06bc6cda615c223bb2', 'owner': {'name': 'Holder de teste', 'national_registration': '97413086557', 'type': 'individual'}, 'routing_number': '001', 'number': '6082899520', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210323 19:35:45.367" endtime="20210323 19:35:45.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.368" level="INFO">b2d9b6311dba2510</msg>
<status status="PASS" starttime="20210323 19:35:45.368" endtime="20210323 19:35:45.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.369" level="INFO">201</msg>
<status status="PASS" starttime="20210323 19:35:45.368" endtime="20210323 19:35:45.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.369" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:45.369" endtime="20210323 19:35:45.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<msg timestamp="20210323 19:35:45.370" level="INFO">${entry_external_key} = 4cd3d3329d174048a37aa7ae57b8d8a0</msg>
<status status="PASS" starttime="20210323 19:35:45.369" endtime="20210323 19:35:45.370"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.370" level="INFO">${entry_external_key} = 4cd3d3329d174048a37aa7ae57b8d8a0</msg>
<status status="PASS" starttime="20210323 19:35:45.370" endtime="20210323 19:35:45.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<msg timestamp="20210323 19:35:45.371" level="INFO">${entry_key_value} = 97413086557</msg>
<status status="PASS" starttime="20210323 19:35:45.371" endtime="20210323 19:35:45.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.372" level="INFO">${entry_key_value} = 97413086557</msg>
<status status="PASS" starttime="20210323 19:35:45.371" endtime="20210323 19:35:45.372"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:43.731" endtime="20210323 19:35:45.372"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:43.730" endtime="20210323 19:35:45.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:45.372" endtime="20210323 19:35:45.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:45.373" endtime="20210323 19:35:45.373"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:39.676" endtime="20210323 19:35:45.373"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210323 19:35:45.377" level="INFO">${date} = 2021-03-23 19:35:45.376520</msg>
<status status="PASS" starttime="20210323 19:35:45.377" endtime="20210323 19:35:45.377"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210323 19:35:45.378" level="INFO">${datetime} = 2021-03-23</msg>
<status status="PASS" starttime="20210323 19:35:45.377" endtime="20210323 19:35:45.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime}</arg>
</arguments>
<msg timestamp="20210323 19:35:45.378" level="INFO">2021-03-23</msg>
<status status="PASS" starttime="20210323 19:35:45.378" endtime="20210323 19:35:45.378"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210323 19:35:45.379" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210323 19:35:45.379" endtime="20210323 19:35:45.380"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:45.379" endtime="20210323 19:35:45.380"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210323 19:35:45.380" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210323 19:35:45.380" endtime="20210323 19:35:45.380"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": 5000000,</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "5601560",</arg>
<arg>"psp": "60746958",</arg>
<arg>"routing_number": "001",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "34772935177",</arg>
<arg>"identification": "Test Sender",</arg>
<arg>"name": "Carlos Drummont"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210323 19:35:45.381" level="INFO">${body} = { "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323193592251663708", "message_id": "M1946824274987168526088538405899", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210323 19:35:45.380" endtime="20210323 19:35:45.381"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210323 19:35:45.381" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-23T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210323193592251663708", "message_id": "M1946824274987168526088538405899", "receiver": { "account_details": { "number": "6082899520", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "97413086557" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "5601560", "psp": "60746958", "routing_number": "001", "type": "cacc" }, "document": "34772935177", "identification": "Test Sender", "name": "Carlos Drummont" } } 
json=None</msg>
<msg timestamp="20210323 19:35:46.068" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:45.381" endtime="20210323 19:35:46.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210323 19:35:46.069" level="INFO">{'code': 4001, 'status': 'conflict', 'type': 'precondition_failed', 'message': 'Duplicated endToEndId', 'category': 'business', 'status_code': 409}</msg>
<status status="PASS" starttime="20210323 19:35:46.069" endtime="20210323 19:35:46.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210323 19:35:46.069" level="INFO">4e068b590d4f6d6b</msg>
<status status="PASS" starttime="20210323 19:35:46.069" endtime="20210323 19:35:46.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210323 19:35:46.070" level="INFO">409</msg>
<status status="PASS" starttime="20210323 19:35:46.070" endtime="20210323 19:35:46.070"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210323 19:35:46.070" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210323 19:35:46.070" endtime="20210323 19:35:46.070"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:45.376" endtime="20210323 19:35:46.070"></status>
</kw>
<kw name="validar conflict" library="conflict">
<arguments>
<arg>message=Duplicated endToEndId</arg>
<arg>message_code=4001</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response precondition failed</arg>
</arguments>
<msg timestamp="20210323 19:35:46.071" level="INFO">Validando response precondition failed</msg>
<status status="PASS" starttime="20210323 19:35:46.071" endtime="20210323 19:35:46.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210323 19:35:46.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:46.072" endtime="20210323 19:35:46.072"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>conflict</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:46.072" endtime="20210323 19:35:46.072"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:46.072" endtime="20210323 19:35:46.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210323 19:35:46.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:46.073" endtime="20210323 19:35:46.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210323 19:35:46.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210323 19:35:46.073" endtime="20210323 19:35:46.074"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:46.074" endtime="20210323 19:35:46.074"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>precondition_failed</arg>
</arguments>
<status status="PASS" starttime="20210323 19:35:46.074" endtime="20210323 19:35:46.075"></status>
</kw>
<status status="PASS" starttime="20210323 19:35:46.071" endtime="20210323 19:35:46.075"></status>
</kw>
<doc>Não permitir o recebimento de PIX com o mesmo End to End</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210323 19:35:32.716" endtime="20210323 19:35:46.075" critical="yes"></status>
</test>
<doc>Funcionalidade: Recebimento de PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo receber um pagamento PIX</doc>
<status status="PASS" starttime="20210323 19:35:32.156" endtime="20210323 19:35:46.078"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">smoke_test</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Receber Pagamento PIX">Receber Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210327 22:48:35.439" rpa="false">
<suite id="s1" name="Pix-Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio">
<suite id="s1-s1-s1" name="Cancelar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Cancelar Pagamento PIX.robot">
<test id="s1-s1-s1-t1" name="Cenário: Cancelar pagamento PIX">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 22:48:36.032" level="INFO">${phone} = 26010216</msg>
<status status="PASS" starttime="20210327 22:48:36.032" endtime="20210327 22:48:36.032"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 22:48:36.032" level="INFO">${phone_pix} = +5521926010216</msg>
<status status="PASS" starttime="20210327 22:48:36.032" endtime="20210327 22:48:36.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.033" level="INFO">${phone_pix} = +5521926010216</msg>
<status status="PASS" starttime="20210327 22:48:36.033" endtime="20210327 22:48:36.033"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 22:48:36.033" level="INFO">${email_pix} = pietrofernandes@pereira.com</msg>
<status status="PASS" starttime="20210327 22:48:36.033" endtime="20210327 22:48:36.033"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.034" level="INFO">${email_pix} = pietrofernandes@pereira.com</msg>
<status status="PASS" starttime="20210327 22:48:36.033" endtime="20210327 22:48:36.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:36.035" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:36.035" endtime="20210327 22:48:36.035"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.035" endtime="20210327 22:48:36.035"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:36.036" level="INFO">${national_registration} = 509.436.781-10</msg>
<status status="PASS" starttime="20210327 22:48:36.035" endtime="20210327 22:48:36.036"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:36.036" level="INFO">${national_registration} = 509436781-10</msg>
<status status="PASS" starttime="20210327 22:48:36.036" endtime="20210327 22:48:36.036"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:36.036" level="INFO">${national_registration} = 50943678110</msg>
<status status="PASS" starttime="20210327 22:48:36.036" endtime="20210327 22:48:36.036"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.037" level="INFO">${national_registration} = 50943678110</msg>
<status status="PASS" starttime="20210327 22:48:36.037" endtime="20210327 22:48:36.037"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 22:48:36.037" level="INFO">${identity_card} = 162835073</msg>
<status status="PASS" starttime="20210327 22:48:36.037" endtime="20210327 22:48:36.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.038" level="INFO">${identity_card} = 162835073</msg>
<status status="PASS" starttime="20210327 22:48:36.037" endtime="20210327 22:48:36.038"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:36.039" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:36.039" endtime="20210327 22:48:36.039"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.038" endtime="20210327 22:48:36.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.039" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 22:48:36.039" endtime="20210327 22:48:36.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.040" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:48:36.040" endtime="20210327 22:48:36.040"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:36.041" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:36.040" endtime="20210327 22:48:36.041"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:36.041" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "50943678110", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 22:48:36.041" endtime="20210327 22:48:36.041"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:36.042" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "50943678110", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "162835073", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 22:48:36.763" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:36.041" endtime="20210327 22:48:36.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.766" level="INFO">{'id': '73267feb8d8c4b2b849623e88386d77c', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T22:48:37.868375', 'updated_at': '2021-03-27T22:48:37.868377', 'type': 'individual', 'national_registration': '50943678110', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '162835073', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:36.764" endtime="20210327 22:48:36.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.768" level="INFO">2f6c148886689185</msg>
<status status="PASS" starttime="20210327 22:48:36.767" endtime="20210327 22:48:36.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.770" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "50943678110", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "162835073", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 22:48:36.770" endtime="20210327 22:48:36.770"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.772" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:36.771" endtime="20210327 22:48:36.772"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:36.774" level="INFO">${holder_external_key} = 73267feb8d8c4b2b849623e88386d77c</msg>
<status status="PASS" starttime="20210327 22:48:36.773" endtime="20210327 22:48:36.774"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.775" level="INFO">${holder_external_key} = 73267feb8d8c4b2b849623e88386d77c</msg>
<status status="PASS" starttime="20210327 22:48:36.775" endtime="20210327 22:48:36.775"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.038" endtime="20210327 22:48:36.776"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:48:36.777" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:48:36.776" endtime="20210327 22:48:36.777"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:36.778" endtime="20210327 22:48:36.779"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.777" endtime="20210327 22:48:36.779"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:36.781" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:36.780" endtime="20210327 22:48:36.781"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:36.782" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 22:48:36.781" endtime="20210327 22:48:36.782"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:36.783" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 22:48:37.035" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:36.782" endtime="20210327 22:48:37.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.038" level="INFO">{'id': '0412d4654a6a450a80da0e9607307ff0', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/phones/0412d4654a6a450a80da0e9607307ff0', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:37.036" endtime="20210327 22:48:37.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.040" level="INFO">4883e27673db373e</msg>
<status status="PASS" starttime="20210327 22:48:37.039" endtime="20210327 22:48:37.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.041" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.041" endtime="20210327 22:48:37.042"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:37.044" level="INFO">${phone_external_key} = 0412d4654a6a450a80da0e9607307ff0</msg>
<status status="PASS" starttime="20210327 22:48:37.042" endtime="20210327 22:48:37.044"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.045" level="INFO">${phone_external_key} = 0412d4654a6a450a80da0e9607307ff0</msg>
<status status="PASS" starttime="20210327 22:48:37.044" endtime="20210327 22:48:37.045"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.780" endtime="20210327 22:48:37.045"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:37.047" endtime="20210327 22:48:37.049"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.047" endtime="20210327 22:48:37.049"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:37.050" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:37.050" endtime="20210327 22:48:37.050"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:37.051" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 22:48:37.050" endtime="20210327 22:48:37.051"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:37.051" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 22:48:37.287" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.051" endtime="20210327 22:48:37.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.290" level="INFO">{'id': '761577004a9d4525b8ff934652943256', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/addresses/761577004a9d4525b8ff934652943256', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:37.288" endtime="20210327 22:48:37.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.293" level="INFO">f7445aeaa375f82c</msg>
<status status="PASS" starttime="20210327 22:48:37.291" endtime="20210327 22:48:37.293"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.295" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.294" endtime="20210327 22:48:37.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:37.298" level="INFO">${address_external_key} = 761577004a9d4525b8ff934652943256</msg>
<status status="PASS" starttime="20210327 22:48:37.296" endtime="20210327 22:48:37.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.300" level="INFO">${address_external_key} = 761577004a9d4525b8ff934652943256</msg>
<status status="PASS" starttime="20210327 22:48:37.299" endtime="20210327 22:48:37.300"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.049" endtime="20210327 22:48:37.301"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:37.302" endtime="20210327 22:48:37.304"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.301" endtime="20210327 22:48:37.304"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.305" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 22:48:37.305" endtime="20210327 22:48:37.305"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:37.305" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:37.305" endtime="20210327 22:48:37.305"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:37.306" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:37.307" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:37.305" endtime="20210327 22:48:37.307"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:37.307" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:37.600" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.307" endtime="20210327 22:48:37.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.602" level="INFO">{'id': '9d9db6fb9f6141e9b4cb42607c7aa5b9', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents/9d9db6fb9f6141e9b4cb42607c7aa5b9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents/9d9db6fb9f6141e9b4cb42607c7aa5b9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:37.600" endtime="20210327 22:48:37.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.603" level="INFO">0fc1a2650f3a07e9</msg>
<status status="PASS" starttime="20210327 22:48:37.603" endtime="20210327 22:48:37.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.604" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.604" endtime="20210327 22:48:37.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:37.606" level="INFO">${document_external_key} = 9d9db6fb9f6141e9b4cb42607c7aa5b9</msg>
<status status="PASS" starttime="20210327 22:48:37.605" endtime="20210327 22:48:37.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.606" level="INFO">${document_external_key} = 9d9db6fb9f6141e9b4cb42607c7aa5b9</msg>
<status status="PASS" starttime="20210327 22:48:37.606" endtime="20210327 22:48:37.606"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.304" endtime="20210327 22:48:37.607"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:37.607" endtime="20210327 22:48:37.607"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.607" endtime="20210327 22:48:37.608"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.608" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 22:48:37.608" endtime="20210327 22:48:37.608"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:37.609" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:37.608" endtime="20210327 22:48:37.609"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:37.609" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:37.610" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:37.609" endtime="20210327 22:48:37.610"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:37.611" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:37.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.610" endtime="20210327 22:48:37.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.921" level="INFO">{'id': '3672c838cb824022bd2e58fa51e6f53f', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents/3672c838cb824022bd2e58fa51e6f53f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents/3672c838cb824022bd2e58fa51e6f53f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:37.920" endtime="20210327 22:48:37.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.924" level="INFO">64d8ab65bfe396df</msg>
<status status="PASS" starttime="20210327 22:48:37.923" endtime="20210327 22:48:37.924"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.925" endtime="20210327 22:48:37.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:37.929" level="INFO">${document_external_key} = 3672c838cb824022bd2e58fa51e6f53f</msg>
<status status="PASS" starttime="20210327 22:48:37.928" endtime="20210327 22:48:37.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.932" level="INFO">${document_external_key} = 3672c838cb824022bd2e58fa51e6f53f</msg>
<status status="PASS" starttime="20210327 22:48:37.930" endtime="20210327 22:48:37.932"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.608" endtime="20210327 22:48:37.932"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:37.934" endtime="20210327 22:48:37.935"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.933" endtime="20210327 22:48:37.935"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:37.938" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 22:48:37.937" endtime="20210327 22:48:37.938"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:37.939" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:37.938" endtime="20210327 22:48:37.939"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:37.941" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:37.942" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:37.940" endtime="20210327 22:48:37.942"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:37.943" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:38.230" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:37.943" endtime="20210327 22:48:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.231" level="INFO">{'id': '19f667cdb79b4b768b01de4660a6b47b', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents/19f667cdb79b4b768b01de4660a6b47b', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/documents/19f667cdb79b4b768b01de4660a6b47b/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:38.230" endtime="20210327 22:48:38.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.231" level="INFO">2ed334d9ebfc48ec</msg>
<status status="PASS" starttime="20210327 22:48:38.231" endtime="20210327 22:48:38.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.232" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.231" endtime="20210327 22:48:38.232"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:38.232" level="INFO">${document_external_key} = 19f667cdb79b4b768b01de4660a6b47b</msg>
<status status="PASS" starttime="20210327 22:48:38.232" endtime="20210327 22:48:38.232"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.233" level="INFO">${document_external_key} = 19f667cdb79b4b768b01de4660a6b47b</msg>
<status status="PASS" starttime="20210327 22:48:38.233" endtime="20210327 22:48:38.233"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:37.936" endtime="20210327 22:48:38.233"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:38.234" endtime="20210327 22:48:38.235"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.233" endtime="20210327 22:48:38.235"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:38.235" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:38.235" endtime="20210327 22:48:38.235"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:38.236" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:38.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.236" endtime="20210327 22:48:38.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.611" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 22:48:38.611" endtime="20210327 22:48:38.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.611" level="INFO">984c82e59b3c0f17</msg>
<status status="PASS" starttime="20210327 22:48:38.611" endtime="20210327 22:48:38.611"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.612" endtime="20210327 22:48:38.612"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.235" endtime="20210327 22:48:38.612"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:38.612" endtime="20210327 22:48:38.613"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.612" endtime="20210327 22:48:38.613"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 22:48:38.613" level="INFO">${assessment_id} = d64ea8d1-fa51-4d4e-9fed-4f7f4964b216</msg>
<status status="PASS" starttime="20210327 22:48:38.613" endtime="20210327 22:48:38.614"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 22:48:38.614" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 22:48:38.614" endtime="20210327 22:48:38.614"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 22:48:38.614" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 22:48:38.614" endtime="20210327 22:48:38.614"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 22:48:38.615" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 22:48:38.614" endtime="20210327 22:48:38.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:38.615" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:38.615" endtime="20210327 22:48:38.615"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:38.616" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 22:48:38.615" endtime="20210327 22:48:38.616"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:38.617" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/73267feb8d8c4b2b849623e88386d77c/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "73267feb8d8c4b2b849623e88386d77c", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "d64ea8d1-fa51-4d4e-9fed-4f7f4964b216" } } 
json=None</msg>
<msg timestamp="20210327 22:48:38.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.616" endtime="20210327 22:48:38.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.843" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 22:48:38.842" endtime="20210327 22:48:38.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.845" level="INFO">7cc40d04de94c24e</msg>
<status status="PASS" starttime="20210327 22:48:38.844" endtime="20210327 22:48:38.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:38.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.847" endtime="20210327 22:48:38.848"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 22:48:38.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.849" endtime="20210327 22:48:38.850"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.613" endtime="20210327 22:48:38.850"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:38.852" endtime="20210327 22:48:38.852"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.851" endtime="20210327 22:48:38.852"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:38.853" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:38.853" endtime="20210327 22:48:38.853"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.852" endtime="20210327 22:48:38.853"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:38.854" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/73267feb8d8c4b2b849623e88386d77c/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:39.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:38.854" endtime="20210327 22:48:39.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:39.506" level="INFO">{'items': [{'id': '795ab720e8ff45ff926a499b0ef4c811', 'holder': '73267feb8d8c4b2b849623e88386d77c', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3668627314', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:48:39.946912', 'updated_at': '2021-03-28T01:48:39.946912', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/795ab720e8ff45ff926a499b0ef4c811', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 22:48:39.504" endtime="20210327 22:48:39.506"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:39.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:39.507" endtime="20210327 22:48:39.509"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:39.511" level="INFO">${account_external_key} = 795ab720e8ff45ff926a499b0ef4c811</msg>
<status status="PASS" starttime="20210327 22:48:39.510" endtime="20210327 22:48:39.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:39.513" level="INFO">${account_external_key} = 795ab720e8ff45ff926a499b0ef4c811</msg>
<status status="PASS" starttime="20210327 22:48:39.512" endtime="20210327 22:48:39.513"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 22:48:39.515" level="INFO">${account_number} = 3668627314</msg>
<status status="PASS" starttime="20210327 22:48:39.514" endtime="20210327 22:48:39.515"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 22:48:39.516" level="INFO">${account_number} = 3668627314</msg>
<status status="PASS" starttime="20210327 22:48:39.516" endtime="20210327 22:48:39.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 22:48:39.518" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:48:39.517" endtime="20210327 22:48:39.518"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 22:48:39.519" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:48:39.518" endtime="20210327 22:48:39.519"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:38.852" endtime="20210327 22:48:39.519"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:39.519" endtime="20210327 22:48:39.520"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:39.519" endtime="20210327 22:48:39.520"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.034" endtime="20210327 22:48:39.520"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.034" endtime="20210327 22:48:39.520"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 22:48:39.520" level="INFO">${uuid} = 6958789d-5e02-4362-bade-6fcad9a2bf14</msg>
<status status="PASS" starttime="20210327 22:48:39.520" endtime="20210327 22:48:39.520"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:39.521" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:39.521" endtime="20210327 22:48:39.521"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:39.521" endtime="20210327 22:48:39.521"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:39.522" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:39.522" endtime="20210327 22:48:39.522"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:39.522" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "6958789d-5e02-4362-bade-6fcad9a2bf14", "transaction_id": "6958789d-5e02-4362-bade-6fcad9a2bf14", "id": "6958789d-5e02-4362-bade-6fca...</msg>
<status status="PASS" starttime="20210327 22:48:39.522" endtime="20210327 22:48:39.522"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:39.523" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/6958789d-5e02-4362-bade-6fcad9a2bf14, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "6958789d-5e02-4362-bade-6fcad9a2bf14", "transaction_id": "6958789d-5e02-4362-bade-6fcad9a2bf14", "id": "6958789d-5e02-4362-bade-6fcad9a2bf14", "id_checking_account": "795ab720e8ff45ff926a499b0ef4c811", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "6958789d-5e02-4362-bade-6fcad9a2bf14", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 22:48:40.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:39.523" endtime="20210327 22:48:40.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.205" endtime="20210327 22:48:40.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.208" endtime="20210327 22:48:40.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.209" endtime="20210327 22:48:40.209"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:39.520" endtime="20210327 22:48:40.210"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.211" endtime="20210327 22:48:40.211"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.210" endtime="20210327 22:48:40.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:40.213" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:40.213" endtime="20210327 22:48:40.213"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.212" endtime="20210327 22:48:40.213"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.214" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 22:48:40.213" endtime="20210327 22:48:40.214"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.214" level="INFO">${value} = pietrofernandes@pereira.com</msg>
<status status="PASS" starttime="20210327 22:48:40.214" endtime="20210327 22:48:40.214"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:40.214" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:40.214" endtime="20210327 22:48:40.214"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:40.215" level="INFO">${body} = { "type": "email", "value": "pietrofernandes@pereira.com" }</msg>
<status status="PASS" starttime="20210327 22:48:40.215" endtime="20210327 22:48:40.215"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:40.215" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/73267feb8d8c4b2b849623e88386d77c/accounts/795ab720e8ff45ff926a499b0ef4c811/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "pietrofernandes@pereira.com" } 
json=None</msg>
<msg timestamp="20210327 22:48:40.928" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:40.215" endtime="20210327 22:48:40.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.931" level="INFO">{'id': '23d9ad782d6f48b38dd3928482352c72', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T10:48:42.043', 'updated_at': '2021-03-27T10:48:42.043', 'key': {'value': 'pietrofernandes@pereira.com', 'type': 'email'}, 'account': {'id': '795ab720e8ff45ff926a499b0ef4c811', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '73267feb8d8c4b2b849623e88386d77c', 'owner': {'name': 'Holder de teste', 'national_registration': '50943678110', 'type': 'individual'}, 'routing_number': '001', 'number': '3668627314', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:48:40.930" endtime="20210327 22:48:40.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.933" level="INFO">27767f36aeaaa556</msg>
<status status="PASS" starttime="20210327 22:48:40.932" endtime="20210327 22:48:40.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.936" level="INFO">202</msg>
<status status="PASS" starttime="20210327 22:48:40.934" endtime="20210327 22:48:40.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.938" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:40.937" endtime="20210327 22:48:40.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.940" endtime="20210327 22:48:40.941"></status>
</kw>
<msg timestamp="20210327 22:48:40.942" level="INFO">${entry_external_key} = 23d9ad782d6f48b38dd3928482352c72</msg>
<status status="PASS" starttime="20210327 22:48:40.939" endtime="20210327 22:48:40.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.943" level="INFO">${entry_external_key} = 23d9ad782d6f48b38dd3928482352c72</msg>
<status status="PASS" starttime="20210327 22:48:40.942" endtime="20210327 22:48:40.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.944" endtime="20210327 22:48:40.944"></status>
</kw>
<msg timestamp="20210327 22:48:40.944" level="INFO">${entry_key_value} = pietrofernandes@pereira.com</msg>
<status status="PASS" starttime="20210327 22:48:40.944" endtime="20210327 22:48:40.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 22:48:40.945" level="INFO">${entry_key_value} = pietrofernandes@pereira.com</msg>
<status status="PASS" starttime="20210327 22:48:40.945" endtime="20210327 22:48:40.945"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.212" endtime="20210327 22:48:40.945"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.212" endtime="20210327 22:48:40.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:40.946" endtime="20210327 22:48:40.946"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.946" endtime="20210327 22:48:40.946"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.945" endtime="20210327 22:48:40.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:40.948" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:40.948" endtime="20210327 22:48:40.948"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.947" endtime="20210327 22:48:40.948"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:40.949" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/73267feb8d8c4b2b849623e88386d77c/accounts/795ab720e8ff45ff926a499b0ef4c811/entries/23d9ad782d6f48b38dd3928482352c72/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:41.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:40.948" endtime="20210327 22:48:41.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:41.613" level="INFO">{'code': '0238'}</msg>
<status status="PASS" starttime="20210327 22:48:41.612" endtime="20210327 22:48:41.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:41.615" level="INFO">c9cebeecff708f7a</msg>
<status status="PASS" starttime="20210327 22:48:41.614" endtime="20210327 22:48:41.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:41.617" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:48:41.616" endtime="20210327 22:48:41.617"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:41.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:41.618" endtime="20210327 22:48:41.618"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 22:48:41.621" level="INFO">${verification_code} = 0238</msg>
<status status="PASS" starttime="20210327 22:48:41.619" endtime="20210327 22:48:41.621"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:41.621" level="INFO">${verification_code} = 0238</msg>
<status status="PASS" starttime="20210327 22:48:41.621" endtime="20210327 22:48:41.622"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.947" endtime="20210327 22:48:41.622"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:40.947" endtime="20210327 22:48:41.622"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:41.623" endtime="20210327 22:48:41.624"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:41.623" endtime="20210327 22:48:41.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:41.627" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:41.626" endtime="20210327 22:48:41.627"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:41.626" endtime="20210327 22:48:41.627"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:41.627" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:41.627" endtime="20210327 22:48:41.627"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:41.627" level="INFO">${body} = { "code": "0238" }</msg>
<status status="PASS" starttime="20210327 22:48:41.627" endtime="20210327 22:48:41.628"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:41.629" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/73267feb8d8c4b2b849623e88386d77c/accounts/795ab720e8ff45ff926a499b0ef4c811/entries/23d9ad782d6f48b38dd3928482352c72/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "0238" } 
json=None</msg>
<msg timestamp="20210327 22:48:43.273" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:41.628" endtime="20210327 22:48:43.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:43.273" level="INFO">{'id': '23d9ad782d6f48b38dd3928482352c72', 'status': 'active', 'created_at': '2021-03-27T10:48:42.043', 'updated_at': '2021-03-27T10:48:44.429', 'key': {'value': 'pietrofernandes@pereira.com', 'type': 'email'}, 'account': {'id': '795ab720e8ff45ff926a499b0ef4c811', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '73267feb8d8c4b2b849623e88386d77c', 'owner': {'name': 'Holder de teste', 'national_registration': '50943678110', 'type': 'individual'}, 'routing_number': '001', 'number': '3668627314', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:48:43.273" endtime="20210327 22:48:43.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:43.274" level="INFO">2c7622817f2207fe</msg>
<status status="PASS" starttime="20210327 22:48:43.274" endtime="20210327 22:48:43.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:43.275" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:48:43.274" endtime="20210327 22:48:43.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:43.275" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:43.275" endtime="20210327 22:48:43.275"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:41.626" endtime="20210327 22:48:43.275"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:41.625" endtime="20210327 22:48:43.275"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:43.276" endtime="20210327 22:48:43.276"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:43.276" endtime="20210327 22:48:43.276"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:36.031" endtime="20210327 22:48:43.277"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:43.278" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:43.278" endtime="20210327 22:48:43.279"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:43.278" endtime="20210327 22:48:43.279"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:43.279" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:43.279" endtime="20210327 22:48:43.279"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:43.280" level="INFO">${body} = { "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210327 22:48:43.279" endtime="20210327 22:48:43.280"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:43.281" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/73267feb8d8c4b2b849623e88386d77c/accounts/795ab720e8ff45ff926a499b0ef4c811/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 290, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210327 22:48:44.095" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:43.280" endtime="20210327 22:48:44.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.095" level="INFO">{'id': 'e5c094819c55446aa1c21a7a78b7ba2b', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E194682422021032801482144e104574', 'message_id': 'M19468242ee7e3086e4e3a8ae3e9e480', 'amount': 290, 'created_at': '2021-03-27T22:48:45.087146', 'description': 'Envio de PIX', 'debtor': {'national_registration': '50943678110', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '73267feb8d8c4b2b849623e88386d77c', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '795ab720e8ff45ff926a499b0ef4c811', 'number': '3668627314', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 22:48:44.095" endtime="20210327 22:48:44.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.096" level="INFO">9c1ad6bc94ec4e65</msg>
<status status="PASS" starttime="20210327 22:48:44.096" endtime="20210327 22:48:44.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.096" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:48:44.096" endtime="20210327 22:48:44.097"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.098" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:44.097" endtime="20210327 22:48:44.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:44.098" level="INFO">${payment_external_key} = e5c094819c55446aa1c21a7a78b7ba2b</msg>
<status status="PASS" starttime="20210327 22:48:44.098" endtime="20210327 22:48:44.098"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.099" level="INFO">${payment_external_key} = e5c094819c55446aa1c21a7a78b7ba2b</msg>
<status status="PASS" starttime="20210327 22:48:44.099" endtime="20210327 22:48:44.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:48:44.100" level="INFO">${end_to_end_id} = E194682422021032801482144e104574</msg>
<status status="PASS" starttime="20210327 22:48:44.099" endtime="20210327 22:48:44.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.100" level="INFO">${end_to_end_id} = E194682422021032801482144e104574</msg>
<status status="PASS" starttime="20210327 22:48:44.100" endtime="20210327 22:48:44.100"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:48:44.101" level="INFO">${message_id} = M19468242ee7e3086e4e3a8ae3e9e480</msg>
<status status="PASS" starttime="20210327 22:48:44.100" endtime="20210327 22:48:44.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.101" level="INFO">${message_id} = M19468242ee7e3086e4e3a8ae3e9e480</msg>
<status status="PASS" starttime="20210327 22:48:44.101" endtime="20210327 22:48:44.101"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:43.277" endtime="20210327 22:48:44.101"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:48:44.104" level="INFO">${date} = 2021-03-27 22:48:44.104074</msg>
<status status="PASS" starttime="20210327 22:48:44.104" endtime="20210327 22:48:44.104"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:48:44.104" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:48:44.104" endtime="20210327 22:48:44.104"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=${status_code}</arg>
<arg>message_error=Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.105" endtime="20210327 22:48:44.105"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.105" endtime="20210327 22:48:44.106"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.106" endtime="20210327 22:48:44.106"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.106" endtime="20210327 22:48:44.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.107" endtime="20210327 22:48:44.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.107" endtime="20210327 22:48:44.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:48:44.108" endtime="20210327 22:48:44.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.109" endtime="20210327 22:48:44.109"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.109" endtime="20210327 22:48:44.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.110" endtime="20210327 22:48:44.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.110" endtime="20210327 22:48:44.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.111" endtime="20210327 22:48:44.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.111" endtime="20210327 22:48:44.112"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.112" endtime="20210327 22:48:44.112"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.112" endtime="20210327 22:48:44.113"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.113" endtime="20210327 22:48:44.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.114" endtime="20210327 22:48:44.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.114" endtime="20210327 22:48:44.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.115" endtime="20210327 22:48:44.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.115" endtime="20210327 22:48:44.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.116" endtime="20210327 22:48:44.116"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.116" endtime="20210327 22:48:44.116"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.117" endtime="20210327 22:48:44.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.117" endtime="20210327 22:48:44.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.117" endtime="20210327 22:48:44.118"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.102" endtime="20210327 22:48:44.118"></status>
</kw>
<kw name="cancelar pagamento pix" library="pix_payments_cancel_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:44.119" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:44.119" endtime="20210327 22:48:44.119"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.119" endtime="20210327 22:48:44.120"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:44.120" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:44.120" endtime="20210327 22:48:44.120"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/cancel</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:44.121" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/73267feb8d8c4b2b849623e88386d77c/accounts/795ab720e8ff45ff926a499b0ef4c811/payments/e5c094819c55446aa1c21a7a78b7ba2b/cancel, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:44.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:44.120" endtime="20210327 22:48:44.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.797" level="INFO">{'id': 'e5c094819c55446aa1c21a7a78b7ba2b', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'canceled', 'end_to_end_id': 'E194682422021032801482144e104574', 'amount': 290, 'description': 'Envio de PIX', 'debtor': {'national_registration': '50943678110', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '73267feb8d8c4b2b849623e88386d77c', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '795ab720e8ff45ff926a499b0ef4c811', 'number': '3668627314', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210327 22:48:44.797" endtime="20210327 22:48:44.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.798" level="INFO">61eb0fec9b575a60</msg>
<status status="PASS" starttime="20210327 22:48:44.798" endtime="20210327 22:48:44.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.799" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:48:44.798" endtime="20210327 22:48:44.799"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:44.799" endtime="20210327 22:48:44.799"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.119" endtime="20210327 22:48:44.799"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=200</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=canceled</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:48:44.802" level="INFO">${date} = 2021-03-27 22:48:44.802057</msg>
<status status="PASS" starttime="20210327 22:48:44.802" endtime="20210327 22:48:44.802"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:48:44.803" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:48:44.803" endtime="20210327 22:48:44.803"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=${status_code}</arg>
<arg>message_error=Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.804" endtime="20210327 22:48:44.805"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.803" endtime="20210327 22:48:44.805"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.805" endtime="20210327 22:48:44.806"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.806" endtime="20210327 22:48:44.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.807" endtime="20210327 22:48:44.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.809" endtime="20210327 22:48:44.809"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.807" endtime="20210327 22:48:44.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:48:44.809" endtime="20210327 22:48:44.810"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.810" endtime="20210327 22:48:44.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.811" endtime="20210327 22:48:44.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.811" endtime="20210327 22:48:44.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.812" endtime="20210327 22:48:44.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.813" endtime="20210327 22:48:44.813"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.813" endtime="20210327 22:48:44.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.814" endtime="20210327 22:48:44.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.814" endtime="20210327 22:48:44.815"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.815" endtime="20210327 22:48:44.815"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.815" endtime="20210327 22:48:44.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.816" endtime="20210327 22:48:44.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.817" endtime="20210327 22:48:44.817"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.817" endtime="20210327 22:48:44.817"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.818" endtime="20210327 22:48:44.818"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.818" endtime="20210327 22:48:44.819"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.819" endtime="20210327 22:48:44.819"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.819" endtime="20210327 22:48:44.820"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:44.820" endtime="20210327 22:48:44.820"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.800" endtime="20210327 22:48:44.820"></status>
</kw>
<doc>Cancelamento de pagament PIX, efetuado antes da confirmação do pagamento</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 22:48:36.031" endtime="20210327 22:48:44.821" critical="yes"></status>
</test>
<doc>Funcionalidade: Cancelar Envio de Pagamento PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo cancelar o pagamento de um envio de PIX</doc>
<status status="PASS" starttime="20210327 22:48:35.465" endtime="20210327 22:48:44.823"></status>
</suite>
<suite id="s1-s1-s2" name="Criar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot">
<test id="s1-s1-s2-t1" name="Cenário: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 22:48:44.883" level="INFO">${phone} = 68585032</msg>
<status status="PASS" starttime="20210327 22:48:44.883" endtime="20210327 22:48:44.883"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 22:48:44.884" level="INFO">${phone_pix} = +5521968585032</msg>
<status status="PASS" starttime="20210327 22:48:44.883" endtime="20210327 22:48:44.884"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.885" level="INFO">${phone_pix} = +5521968585032</msg>
<status status="PASS" starttime="20210327 22:48:44.884" endtime="20210327 22:48:44.885"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 22:48:44.886" level="INFO">${email_pix} = joao-gabriel13@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:48:44.885" endtime="20210327 22:48:44.886"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.887" level="INFO">${email_pix} = joao-gabriel13@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:48:44.886" endtime="20210327 22:48:44.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:44.888" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:44.888" endtime="20210327 22:48:44.889"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.888" endtime="20210327 22:48:44.889"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:44.889" level="INFO">${national_registration} = 827.046.593-38</msg>
<status status="PASS" starttime="20210327 22:48:44.889" endtime="20210327 22:48:44.889"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:44.889" level="INFO">${national_registration} = 827046593-38</msg>
<status status="PASS" starttime="20210327 22:48:44.889" endtime="20210327 22:48:44.889"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:44.890" level="INFO">${national_registration} = 82704659338</msg>
<status status="PASS" starttime="20210327 22:48:44.890" endtime="20210327 22:48:44.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.890" level="INFO">${national_registration} = 82704659338</msg>
<status status="PASS" starttime="20210327 22:48:44.890" endtime="20210327 22:48:44.890"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 22:48:44.891" level="INFO">${identity_card} = 740132659</msg>
<status status="PASS" starttime="20210327 22:48:44.890" endtime="20210327 22:48:44.891"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.891" level="INFO">${identity_card} = 740132659</msg>
<status status="PASS" starttime="20210327 22:48:44.891" endtime="20210327 22:48:44.891"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:44.892" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:44.892" endtime="20210327 22:48:44.892"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.892" endtime="20210327 22:48:44.892"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.893" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 22:48:44.893" endtime="20210327 22:48:44.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:48:44.893" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:48:44.893" endtime="20210327 22:48:44.893"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:44.894" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:44.893" endtime="20210327 22:48:44.894"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:44.894" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "82704659338", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 22:48:44.894" endtime="20210327 22:48:44.894"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:44.895" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "82704659338", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "740132659", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 22:48:45.627" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:44.894" endtime="20210327 22:48:45.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.629" level="INFO">{'id': '7310163f42234d9d9bfb916c6ca9cecb', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T22:48:46.715859', 'updated_at': '2021-03-27T22:48:46.715861', 'type': 'individual', 'national_registration': '82704659338', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '740132659', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:45.628" endtime="20210327 22:48:45.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.631" level="INFO">debdba74ccd8bcaf</msg>
<status status="PASS" starttime="20210327 22:48:45.630" endtime="20210327 22:48:45.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.633" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "82704659338", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "740132659", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 22:48:45.632" endtime="20210327 22:48:45.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.634" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:45.633" endtime="20210327 22:48:45.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:45.636" level="INFO">${holder_external_key} = 7310163f42234d9d9bfb916c6ca9cecb</msg>
<status status="PASS" starttime="20210327 22:48:45.635" endtime="20210327 22:48:45.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.638" level="INFO">${holder_external_key} = 7310163f42234d9d9bfb916c6ca9cecb</msg>
<status status="PASS" starttime="20210327 22:48:45.637" endtime="20210327 22:48:45.638"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.891" endtime="20210327 22:48:45.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.640" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:48:45.639" endtime="20210327 22:48:45.640"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:45.642" endtime="20210327 22:48:45.643"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:45.641" endtime="20210327 22:48:45.643"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:45.645" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:45.645" endtime="20210327 22:48:45.645"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:45.647" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 22:48:45.646" endtime="20210327 22:48:45.647"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:45.648" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 22:48:45.903" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:45.647" endtime="20210327 22:48:45.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.906" level="INFO">{'id': 'a027933922474f7591c9e0cb21a7e041', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/phones/a027933922474f7591c9e0cb21a7e041', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:45.904" endtime="20210327 22:48:45.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.907" level="INFO">6b2be9fd3af7b292</msg>
<status status="PASS" starttime="20210327 22:48:45.907" endtime="20210327 22:48:45.907"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.909" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:45.908" endtime="20210327 22:48:45.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:45.911" level="INFO">${phone_external_key} = a027933922474f7591c9e0cb21a7e041</msg>
<status status="PASS" starttime="20210327 22:48:45.910" endtime="20210327 22:48:45.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:45.912" level="INFO">${phone_external_key} = a027933922474f7591c9e0cb21a7e041</msg>
<status status="PASS" starttime="20210327 22:48:45.911" endtime="20210327 22:48:45.912"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:45.644" endtime="20210327 22:48:45.912"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:45.914" endtime="20210327 22:48:45.915"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:45.913" endtime="20210327 22:48:45.915"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:45.916" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:45.916" endtime="20210327 22:48:45.917"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:45.918" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 22:48:45.917" endtime="20210327 22:48:45.918"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:45.919" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 22:48:46.157" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:45.918" endtime="20210327 22:48:46.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.157" level="INFO">{'id': '5bc7d73cab9b4d778b0b1452b1b58f7e', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/addresses/5bc7d73cab9b4d778b0b1452b1b58f7e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:46.157" endtime="20210327 22:48:46.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.158" level="INFO">e751bd442a3876c2</msg>
<status status="PASS" starttime="20210327 22:48:46.157" endtime="20210327 22:48:46.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.158" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:46.158" endtime="20210327 22:48:46.158"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:46.159" level="INFO">${address_external_key} = 5bc7d73cab9b4d778b0b1452b1b58f7e</msg>
<status status="PASS" starttime="20210327 22:48:46.158" endtime="20210327 22:48:46.159"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.159" level="INFO">${address_external_key} = 5bc7d73cab9b4d778b0b1452b1b58f7e</msg>
<status status="PASS" starttime="20210327 22:48:46.159" endtime="20210327 22:48:46.159"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:45.915" endtime="20210327 22:48:46.159"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:46.160" endtime="20210327 22:48:46.160"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:46.159" endtime="20210327 22:48:46.160"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.161" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 22:48:46.161" endtime="20210327 22:48:46.161"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:46.161" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:46.161" endtime="20210327 22:48:46.161"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:46.162" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:46.164" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:46.161" endtime="20210327 22:48:46.164"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:46.164" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:46.512" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:46.164" endtime="20210327 22:48:46.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.514" level="INFO">{'id': 'f57fbd535f55470cba0c411072cfdfe7', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents/f57fbd535f55470cba0c411072cfdfe7', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents/f57fbd535f55470cba0c411072cfdfe7/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:46.513" endtime="20210327 22:48:46.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.518" level="INFO">4c31ce512614f8c1</msg>
<status status="PASS" starttime="20210327 22:48:46.516" endtime="20210327 22:48:46.518"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.519" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:46.519" endtime="20210327 22:48:46.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:46.522" level="INFO">${document_external_key} = f57fbd535f55470cba0c411072cfdfe7</msg>
<status status="PASS" starttime="20210327 22:48:46.520" endtime="20210327 22:48:46.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.523" level="INFO">${document_external_key} = f57fbd535f55470cba0c411072cfdfe7</msg>
<status status="PASS" starttime="20210327 22:48:46.522" endtime="20210327 22:48:46.523"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:46.160" endtime="20210327 22:48:46.523"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:46.525" endtime="20210327 22:48:46.526"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:46.524" endtime="20210327 22:48:46.526"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.528" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 22:48:46.527" endtime="20210327 22:48:46.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:46.528" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:46.528" endtime="20210327 22:48:46.528"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:46.529" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:46.531" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:46.529" endtime="20210327 22:48:46.531"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:46.532" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:46.842" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:46.532" endtime="20210327 22:48:46.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.843" level="INFO">{'id': 'fbd92514048947bba0fdda67a88b0170', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents/fbd92514048947bba0fdda67a88b0170', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents/fbd92514048947bba0fdda67a88b0170/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:46.842" endtime="20210327 22:48:46.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.843" level="INFO">8858f00c086f2985</msg>
<status status="PASS" starttime="20210327 22:48:46.843" endtime="20210327 22:48:46.843"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.844" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:46.843" endtime="20210327 22:48:46.844"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:46.845" level="INFO">${document_external_key} = fbd92514048947bba0fdda67a88b0170</msg>
<status status="PASS" starttime="20210327 22:48:46.844" endtime="20210327 22:48:46.845"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.845" level="INFO">${document_external_key} = fbd92514048947bba0fdda67a88b0170</msg>
<status status="PASS" starttime="20210327 22:48:46.845" endtime="20210327 22:48:46.845"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:46.526" endtime="20210327 22:48:46.846"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:46.846" endtime="20210327 22:48:46.847"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:46.846" endtime="20210327 22:48:46.847"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:46.848" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 22:48:46.848" endtime="20210327 22:48:46.848"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:46.848" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:46.848" endtime="20210327 22:48:46.848"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:46.849" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:46.850" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:46.848" endtime="20210327 22:48:46.850"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:46.851" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:47.129" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:46.850" endtime="20210327 22:48:47.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.132" level="INFO">{'id': '9bd469a9cf4f48cca11c09bce8145ab6', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents/9bd469a9cf4f48cca11c09bce8145ab6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/documents/9bd469a9cf4f48cca11c09bce8145ab6/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:47.131" endtime="20210327 22:48:47.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.135" level="INFO">afcdbd3cba88e117</msg>
<status status="PASS" starttime="20210327 22:48:47.134" endtime="20210327 22:48:47.135"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.137" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.136" endtime="20210327 22:48:47.137"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:47.139" level="INFO">${document_external_key} = 9bd469a9cf4f48cca11c09bce8145ab6</msg>
<status status="PASS" starttime="20210327 22:48:47.138" endtime="20210327 22:48:47.139"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.141" level="INFO">${document_external_key} = 9bd469a9cf4f48cca11c09bce8145ab6</msg>
<status status="PASS" starttime="20210327 22:48:47.140" endtime="20210327 22:48:47.141"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:46.847" endtime="20210327 22:48:47.142"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:47.143" endtime="20210327 22:48:47.144"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.142" endtime="20210327 22:48:47.144"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:47.145" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:47.145" endtime="20210327 22:48:47.145"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:47.146" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:47.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.145" endtime="20210327 22:48:47.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.453" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 22:48:47.453" endtime="20210327 22:48:47.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.454" level="INFO">2d533d51f9c5a9ad</msg>
<status status="PASS" starttime="20210327 22:48:47.453" endtime="20210327 22:48:47.454"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.454" endtime="20210327 22:48:47.454"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.144" endtime="20210327 22:48:47.454"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:47.455" endtime="20210327 22:48:47.455"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.455" endtime="20210327 22:48:47.456"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 22:48:47.456" level="INFO">${assessment_id} = 8637f446-fc80-4c94-9405-0807cb868856</msg>
<status status="PASS" starttime="20210327 22:48:47.456" endtime="20210327 22:48:47.456"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 22:48:47.457" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 22:48:47.456" endtime="20210327 22:48:47.457"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 22:48:47.457" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 22:48:47.457" endtime="20210327 22:48:47.457"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 22:48:47.458" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 22:48:47.457" endtime="20210327 22:48:47.458"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:47.458" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:47.458" endtime="20210327 22:48:47.458"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:47.459" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 22:48:47.458" endtime="20210327 22:48:47.459"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:47.459" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7310163f42234d9d9bfb916c6ca9cecb/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "7310163f42234d9d9bfb916c6ca9cecb", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "8637f446-fc80-4c94-9405-0807cb868856" } } 
json=None</msg>
<msg timestamp="20210327 22:48:47.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.459" endtime="20210327 22:48:47.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.672" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 22:48:47.672" endtime="20210327 22:48:47.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.673" level="INFO">1233fb492af50580</msg>
<status status="PASS" starttime="20210327 22:48:47.672" endtime="20210327 22:48:47.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:47.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.673" endtime="20210327 22:48:47.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 22:48:47.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.673" endtime="20210327 22:48:47.674"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.456" endtime="20210327 22:48:47.674"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:47.674" endtime="20210327 22:48:47.675"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.674" endtime="20210327 22:48:47.675"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:47.676" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:47.675" endtime="20210327 22:48:47.676"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.675" endtime="20210327 22:48:47.676"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:47.676" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/7310163f42234d9d9bfb916c6ca9cecb/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:48.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:47.676" endtime="20210327 22:48:48.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:48.575" level="INFO">{'items': [{'id': '739f1f9c297441db89b70f8558cfb22f', 'holder': '7310163f42234d9d9bfb916c6ca9cecb', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1940095926', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:48:48.790678', 'updated_at': '2021-03-28T01:48:48.790678', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/739f1f9c297441db89b70f8558cfb22f', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 22:48:48.575" endtime="20210327 22:48:48.575"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:48.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:48.575" endtime="20210327 22:48:48.575"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:48.576" level="INFO">${account_external_key} = 739f1f9c297441db89b70f8558cfb22f</msg>
<status status="PASS" starttime="20210327 22:48:48.576" endtime="20210327 22:48:48.576"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:48.577" level="INFO">${account_external_key} = 739f1f9c297441db89b70f8558cfb22f</msg>
<status status="PASS" starttime="20210327 22:48:48.576" endtime="20210327 22:48:48.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 22:48:48.577" level="INFO">${account_number} = 1940095926</msg>
<status status="PASS" starttime="20210327 22:48:48.577" endtime="20210327 22:48:48.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 22:48:48.578" level="INFO">${account_number} = 1940095926</msg>
<status status="PASS" starttime="20210327 22:48:48.578" endtime="20210327 22:48:48.578"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 22:48:48.578" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:48:48.578" endtime="20210327 22:48:48.578"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 22:48:48.579" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:48:48.579" endtime="20210327 22:48:48.579"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:47.675" endtime="20210327 22:48:48.579"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:48.580" endtime="20210327 22:48:48.580"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:48.579" endtime="20210327 22:48:48.580"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.887" endtime="20210327 22:48:48.580"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.887" endtime="20210327 22:48:48.580"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 22:48:48.581" level="INFO">${uuid} = 1ebb8f7f-a1fb-46e2-8df0-d1463098a66c</msg>
<status status="PASS" starttime="20210327 22:48:48.581" endtime="20210327 22:48:48.581"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:48.582" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:48.581" endtime="20210327 22:48:48.582"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:48.581" endtime="20210327 22:48:48.582"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:48.582" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:48.582" endtime="20210327 22:48:48.582"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:48.583" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "1ebb8f7f-a1fb-46e2-8df0-d1463098a66c", "transaction_id": "1ebb8f7f-a1fb-46e2-8df0-d1463098a66c", "id": "1ebb8f7f-a1fb-46e2-8df0-d146...</msg>
<status status="PASS" starttime="20210327 22:48:48.583" endtime="20210327 22:48:48.583"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:48.584" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/1ebb8f7f-a1fb-46e2-8df0-d1463098a66c, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "1ebb8f7f-a1fb-46e2-8df0-d1463098a66c", "transaction_id": "1ebb8f7f-a1fb-46e2-8df0-d1463098a66c", "id": "1ebb8f7f-a1fb-46e2-8df0-d1463098a66c", "id_checking_account": "739f1f9c297441db89b70f8558cfb22f", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "1ebb8f7f-a1fb-46e2-8df0-d1463098a66c", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 22:48:49.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:48.583" endtime="20210327 22:48:49.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.255" endtime="20210327 22:48:49.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.256" endtime="20210327 22:48:49.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.256" endtime="20210327 22:48:49.257"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:48.580" endtime="20210327 22:48:49.257"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.257" endtime="20210327 22:48:49.258"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.257" endtime="20210327 22:48:49.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:49.260" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:49.259" endtime="20210327 22:48:49.260"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.259" endtime="20210327 22:48:49.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.261" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 22:48:49.260" endtime="20210327 22:48:49.261"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.261" level="INFO">${value} = joao-gabriel13@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:48:49.261" endtime="20210327 22:48:49.261"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:49.262" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:49.261" endtime="20210327 22:48:49.262"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:49.262" level="INFO">${body} = { "type": "email", "value": "joao-gabriel13@yahoo.com.br" }</msg>
<status status="PASS" starttime="20210327 22:48:49.262" endtime="20210327 22:48:49.262"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:49.264" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7310163f42234d9d9bfb916c6ca9cecb/accounts/739f1f9c297441db89b70f8558cfb22f/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "joao-gabriel13@yahoo.com.br" } 
json=None</msg>
<msg timestamp="20210327 22:48:49.984" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:49.262" endtime="20210327 22:48:49.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.984" level="INFO">{'id': 'd383c6b8ff4343d99042f8b5b6edb36d', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T10:48:51.115', 'updated_at': '2021-03-27T10:48:51.115', 'key': {'value': 'joao-gabriel13@yahoo.com.br', 'type': 'email'}, 'account': {'id': '739f1f9c297441db89b70f8558cfb22f', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7310163f42234d9d9bfb916c6ca9cecb', 'owner': {'name': 'Holder de teste', 'national_registration': '82704659338', 'type': 'individual'}, 'routing_number': '001', 'number': '1940095926', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:48:49.984" endtime="20210327 22:48:49.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.986" level="INFO">31626a1cbb7e2731</msg>
<status status="PASS" starttime="20210327 22:48:49.984" endtime="20210327 22:48:49.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.986" level="INFO">202</msg>
<status status="PASS" starttime="20210327 22:48:49.986" endtime="20210327 22:48:49.986"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.986" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:49.986" endtime="20210327 22:48:49.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.987" endtime="20210327 22:48:49.988"></status>
</kw>
<msg timestamp="20210327 22:48:49.988" level="INFO">${entry_external_key} = d383c6b8ff4343d99042f8b5b6edb36d</msg>
<status status="PASS" starttime="20210327 22:48:49.986" endtime="20210327 22:48:49.988"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.989" level="INFO">${entry_external_key} = d383c6b8ff4343d99042f8b5b6edb36d</msg>
<status status="PASS" starttime="20210327 22:48:49.989" endtime="20210327 22:48:49.989"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.990" endtime="20210327 22:48:49.990"></status>
</kw>
<msg timestamp="20210327 22:48:49.990" level="INFO">${entry_key_value} = joao-gabriel13@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:48:49.989" endtime="20210327 22:48:49.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 22:48:49.990" level="INFO">${entry_key_value} = joao-gabriel13@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:48:49.990" endtime="20210327 22:48:49.990"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.259" endtime="20210327 22:48:49.990"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.258" endtime="20210327 22:48:49.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:49.992" endtime="20210327 22:48:49.992"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.991" endtime="20210327 22:48:49.992"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.991" endtime="20210327 22:48:49.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:49.994" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:49.994" endtime="20210327 22:48:49.995"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.994" endtime="20210327 22:48:49.995"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:49.995" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7310163f42234d9d9bfb916c6ca9cecb/accounts/739f1f9c297441db89b70f8558cfb22f/entries/d383c6b8ff4343d99042f8b5b6edb36d/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:50.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:49.995" endtime="20210327 22:48:50.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:50.644" level="INFO">{'code': '7238'}</msg>
<status status="PASS" starttime="20210327 22:48:50.643" endtime="20210327 22:48:50.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:50.647" level="INFO">c693f9f1820cb222</msg>
<status status="PASS" starttime="20210327 22:48:50.646" endtime="20210327 22:48:50.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:50.648" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:48:50.648" endtime="20210327 22:48:50.649"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:50.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:50.649" endtime="20210327 22:48:50.650"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 22:48:50.653" level="INFO">${verification_code} = 7238</msg>
<status status="PASS" starttime="20210327 22:48:50.651" endtime="20210327 22:48:50.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:50.654" level="INFO">${verification_code} = 7238</msg>
<status status="PASS" starttime="20210327 22:48:50.653" endtime="20210327 22:48:50.654"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.993" endtime="20210327 22:48:50.654"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:49.993" endtime="20210327 22:48:50.654"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:50.655" endtime="20210327 22:48:50.655"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:50.654" endtime="20210327 22:48:50.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:50.657" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:50.657" endtime="20210327 22:48:50.657"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:50.656" endtime="20210327 22:48:50.657"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:50.658" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:50.657" endtime="20210327 22:48:50.658"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:50.658" level="INFO">${body} = { "code": "7238" }</msg>
<status status="PASS" starttime="20210327 22:48:50.658" endtime="20210327 22:48:50.658"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:50.659" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7310163f42234d9d9bfb916c6ca9cecb/accounts/739f1f9c297441db89b70f8558cfb22f/entries/d383c6b8ff4343d99042f8b5b6edb36d/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "7238" } 
json=None</msg>
<msg timestamp="20210327 22:48:52.343" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:50.658" endtime="20210327 22:48:52.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:52.345" level="INFO">{'id': 'd383c6b8ff4343d99042f8b5b6edb36d', 'status': 'active', 'created_at': '2021-03-27T10:48:51.115', 'updated_at': '2021-03-27T10:48:53.497', 'key': {'value': 'joao-gabriel13@yahoo.com.br', 'type': 'email'}, 'account': {'id': '739f1f9c297441db89b70f8558cfb22f', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7310163f42234d9d9bfb916c6ca9cecb', 'owner': {'name': 'Holder de teste', 'national_registration': '82704659338', 'type': 'individual'}, 'routing_number': '001', 'number': '1940095926', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:48:52.344" endtime="20210327 22:48:52.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:52.348" level="INFO">645239caa70b3328</msg>
<status status="PASS" starttime="20210327 22:48:52.347" endtime="20210327 22:48:52.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:52.351" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:48:52.350" endtime="20210327 22:48:52.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:52.353" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:52.352" endtime="20210327 22:48:52.353"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:50.656" endtime="20210327 22:48:52.354"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:50.655" endtime="20210327 22:48:52.354"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:52.356" endtime="20210327 22:48:52.357"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:52.355" endtime="20210327 22:48:52.357"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:44.882" endtime="20210327 22:48:52.358"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:52.362" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:52.362" endtime="20210327 22:48:52.362"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:52.362" endtime="20210327 22:48:52.362"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:52.363" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:52.362" endtime="20210327 22:48:52.363"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:52.365" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210327 22:48:52.363" endtime="20210327 22:48:52.365"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:52.366" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/7310163f42234d9d9bfb916c6ca9cecb/accounts/739f1f9c297441db89b70f8558cfb22f/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210327 22:48:53.312" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:52.365" endtime="20210327 22:48:53.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.313" level="INFO">{'id': 'b0d1258ad2d74d32ba3b958444fea939', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103280148540dd4334fd', 'message_id': 'M19468242182618f759885630c7b4888', 'amount': 100, 'created_at': '2021-03-27T22:48:54.423684', 'description': 'Envio de PIX', 'debtor': {'national_registration': '82704659338', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '7310163f42234d9d9bfb916c6ca9cecb', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '739f1f9c297441db89b70f8558cfb22f', 'number': '1940095926', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210327 22:48:53.312" endtime="20210327 22:48:53.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.313" level="INFO">cc1b10a9cada988d</msg>
<status status="PASS" starttime="20210327 22:48:53.313" endtime="20210327 22:48:53.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.314" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:48:53.314" endtime="20210327 22:48:53.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.315" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:53.314" endtime="20210327 22:48:53.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:53.316" level="INFO">${payment_external_key} = b0d1258ad2d74d32ba3b958444fea939</msg>
<status status="PASS" starttime="20210327 22:48:53.315" endtime="20210327 22:48:53.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.316" level="INFO">${payment_external_key} = b0d1258ad2d74d32ba3b958444fea939</msg>
<status status="PASS" starttime="20210327 22:48:53.316" endtime="20210327 22:48:53.316"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:48:53.317" level="INFO">${end_to_end_id} = E19468242202103280148540dd4334fd</msg>
<status status="PASS" starttime="20210327 22:48:53.317" endtime="20210327 22:48:53.317"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.318" level="INFO">${end_to_end_id} = E19468242202103280148540dd4334fd</msg>
<status status="PASS" starttime="20210327 22:48:53.317" endtime="20210327 22:48:53.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:48:53.318" level="INFO">${message_id} = M19468242182618f759885630c7b4888</msg>
<status status="PASS" starttime="20210327 22:48:53.318" endtime="20210327 22:48:53.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.319" level="INFO">${message_id} = M19468242182618f759885630c7b4888</msg>
<status status="PASS" starttime="20210327 22:48:53.319" endtime="20210327 22:48:53.319"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:52.360" endtime="20210327 22:48:53.319"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:48:53.321" level="INFO">${date} = 2021-03-27 22:48:53.321421</msg>
<status status="PASS" starttime="20210327 22:48:53.321" endtime="20210327 22:48:53.321"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:48:53.322" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:48:53.321" endtime="20210327 22:48:53.322"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=${status_code}</arg>
<arg>message_error=Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.323" endtime="20210327 22:48:53.324"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.322" endtime="20210327 22:48:53.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.324" endtime="20210327 22:48:53.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.325" endtime="20210327 22:48:53.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
<arg>E19468242</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.325" endtime="20210327 22:48:53.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'peding'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'executed'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
<arg>Should Contain</arg>
<arg>${response.json()["message_id"]}</arg>
<arg>M19468242</arg>
<arg>ELSE IF</arg>
<arg>'${response.json()["status"]}' == 'canceled'</arg>
<arg>Should Not Contain Any</arg>
<arg>${response.json()}</arg>
<arg>message_id</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.325" endtime="20210327 22:48:53.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:48:53.326" endtime="20210327 22:48:53.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.327" endtime="20210327 22:48:53.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.327" endtime="20210327 22:48:53.328"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.328" endtime="20210327 22:48:53.328"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.328" endtime="20210327 22:48:53.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.329" endtime="20210327 22:48:53.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.329" endtime="20210327 22:48:53.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.330" endtime="20210327 22:48:53.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.330" endtime="20210327 22:48:53.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.331" endtime="20210327 22:48:53.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.331" endtime="20210327 22:48:53.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.332" endtime="20210327 22:48:53.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.332" endtime="20210327 22:48:53.333"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.333" endtime="20210327 22:48:53.333"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.333" endtime="20210327 22:48:53.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.335" endtime="20210327 22:48:53.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.335" endtime="20210327 22:48:53.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.335" endtime="20210327 22:48:53.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:53.335" endtime="20210327 22:48:53.337"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.319" endtime="20210327 22:48:53.337"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 22:48:44.880" endtime="20210327 22:48:53.337" critical="yes"></status>
</test>
<test id="s1-s1-s2-t2" name="Cenário: Criar Pagamento PIX para uma conta que possua o mesmo documento do holder de Banking">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 22:48:53.339" level="INFO">${phone} = 73758126</msg>
<status status="PASS" starttime="20210327 22:48:53.339" endtime="20210327 22:48:53.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 22:48:53.339" level="INFO">${phone_pix} = +5521973758126</msg>
<status status="PASS" starttime="20210327 22:48:53.339" endtime="20210327 22:48:53.339"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.340" level="INFO">${phone_pix} = +5521973758126</msg>
<status status="PASS" starttime="20210327 22:48:53.339" endtime="20210327 22:48:53.340"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 22:48:53.340" level="INFO">${email_pix} = vianaisadora@da.org</msg>
<status status="PASS" starttime="20210327 22:48:53.340" endtime="20210327 22:48:53.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.341" level="INFO">${email_pix} = vianaisadora@da.org</msg>
<status status="PASS" starttime="20210327 22:48:53.341" endtime="20210327 22:48:53.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:53.343" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:53.343" endtime="20210327 22:48:53.343"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.342" endtime="20210327 22:48:53.343"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:53.343" level="INFO">${national_registration} = 680.945.713-57</msg>
<status status="PASS" starttime="20210327 22:48:53.343" endtime="20210327 22:48:53.343"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:53.343" level="INFO">${national_registration} = 680945713-57</msg>
<status status="PASS" starttime="20210327 22:48:53.343" endtime="20210327 22:48:53.343"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:48:53.343" level="INFO">${national_registration} = 68094571357</msg>
<status status="PASS" starttime="20210327 22:48:53.343" endtime="20210327 22:48:53.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.344" level="INFO">${national_registration} = 68094571357</msg>
<status status="PASS" starttime="20210327 22:48:53.344" endtime="20210327 22:48:53.344"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 22:48:53.344" level="INFO">${identity_card} = 276048532</msg>
<status status="PASS" starttime="20210327 22:48:53.344" endtime="20210327 22:48:53.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.345" level="INFO">${identity_card} = 276048532</msg>
<status status="PASS" starttime="20210327 22:48:53.344" endtime="20210327 22:48:53.345"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:53.346" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:53.346" endtime="20210327 22:48:53.348"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.346" endtime="20210327 22:48:53.348"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.348" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 22:48:53.348" endtime="20210327 22:48:53.348"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:48:53.348" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:48:53.348" endtime="20210327 22:48:53.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:53.348" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:53.348" endtime="20210327 22:48:53.348"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:53.350" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68094571357", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 22:48:53.349" endtime="20210327 22:48:53.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:53.350" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68094571357", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "276048532", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 22:48:54.044" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:53.350" endtime="20210327 22:48:54.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.047" level="INFO">{'id': '4632c8d2172d4e13944a0622c7f12fa5', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T22:48:55.162764', 'updated_at': '2021-03-27T22:48:55.162766', 'type': 'individual', 'national_registration': '68094571357', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '276048532', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:54.045" endtime="20210327 22:48:54.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.050" level="INFO">c83efeb27899d092</msg>
<status status="PASS" starttime="20210327 22:48:54.048" endtime="20210327 22:48:54.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.051" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "68094571357", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "276048532", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 22:48:54.051" endtime="20210327 22:48:54.051"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.053" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.052" endtime="20210327 22:48:54.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:54.056" level="INFO">${holder_external_key} = 4632c8d2172d4e13944a0622c7f12fa5</msg>
<status status="PASS" starttime="20210327 22:48:54.054" endtime="20210327 22:48:54.056"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.058" level="INFO">${holder_external_key} = 4632c8d2172d4e13944a0622c7f12fa5</msg>
<status status="PASS" starttime="20210327 22:48:54.057" endtime="20210327 22:48:54.059"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.345" endtime="20210327 22:48:54.059"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.060" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:48:54.060" endtime="20210327 22:48:54.060"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:54.062" endtime="20210327 22:48:54.063"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.061" endtime="20210327 22:48:54.064"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:54.066" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:54.066" endtime="20210327 22:48:54.066"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:54.066" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 22:48:54.066" endtime="20210327 22:48:54.066"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:54.066" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 22:48:54.320" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.066" endtime="20210327 22:48:54.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.323" level="INFO">{'id': '17c56f074e894296958ebc6e1638d8dc', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/phones/17c56f074e894296958ebc6e1638d8dc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:54.321" endtime="20210327 22:48:54.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.325" level="INFO">03f62d4703ce33d0</msg>
<status status="PASS" starttime="20210327 22:48:54.324" endtime="20210327 22:48:54.325"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.326" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.325" endtime="20210327 22:48:54.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:54.328" level="INFO">${phone_external_key} = 17c56f074e894296958ebc6e1638d8dc</msg>
<status status="PASS" starttime="20210327 22:48:54.327" endtime="20210327 22:48:54.328"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.330" level="INFO">${phone_external_key} = 17c56f074e894296958ebc6e1638d8dc</msg>
<status status="PASS" starttime="20210327 22:48:54.329" endtime="20210327 22:48:54.330"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.064" endtime="20210327 22:48:54.330"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:54.331" endtime="20210327 22:48:54.331"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.331" endtime="20210327 22:48:54.331"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:54.332" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:54.332" endtime="20210327 22:48:54.332"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:54.333" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 22:48:54.332" endtime="20210327 22:48:54.333"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:54.333" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 22:48:54.562" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.333" endtime="20210327 22:48:54.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.564" level="INFO">{'id': 'bce91a00d7cb429a9c0522c3b5ba8286', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/addresses/bce91a00d7cb429a9c0522c3b5ba8286', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:54.563" endtime="20210327 22:48:54.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.566" level="INFO">ccdcf5d95505b670</msg>
<status status="PASS" starttime="20210327 22:48:54.565" endtime="20210327 22:48:54.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.569" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.568" endtime="20210327 22:48:54.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:54.572" level="INFO">${address_external_key} = bce91a00d7cb429a9c0522c3b5ba8286</msg>
<status status="PASS" starttime="20210327 22:48:54.570" endtime="20210327 22:48:54.573"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.575" level="INFO">${address_external_key} = bce91a00d7cb429a9c0522c3b5ba8286</msg>
<status status="PASS" starttime="20210327 22:48:54.574" endtime="20210327 22:48:54.575"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.332" endtime="20210327 22:48:54.575"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:54.577" endtime="20210327 22:48:54.579"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.576" endtime="20210327 22:48:54.579"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.582" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 22:48:54.581" endtime="20210327 22:48:54.582"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:54.583" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:54.582" endtime="20210327 22:48:54.583"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:54.584" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:54.585" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:54.583" endtime="20210327 22:48:54.585"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:54.586" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:54.856" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.585" endtime="20210327 22:48:54.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.859" level="INFO">{'id': 'd18a4d7fb063437b9e2983042c3954d4', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents/d18a4d7fb063437b9e2983042c3954d4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents/d18a4d7fb063437b9e2983042c3954d4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:54.857" endtime="20210327 22:48:54.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.861" level="INFO">561e2d1ff194e94f</msg>
<status status="PASS" starttime="20210327 22:48:54.860" endtime="20210327 22:48:54.861"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.863" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.862" endtime="20210327 22:48:54.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:54.866" level="INFO">${document_external_key} = d18a4d7fb063437b9e2983042c3954d4</msg>
<status status="PASS" starttime="20210327 22:48:54.864" endtime="20210327 22:48:54.866"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.868" level="INFO">${document_external_key} = d18a4d7fb063437b9e2983042c3954d4</msg>
<status status="PASS" starttime="20210327 22:48:54.867" endtime="20210327 22:48:54.868"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.580" endtime="20210327 22:48:54.868"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:54.870" endtime="20210327 22:48:54.871"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.869" endtime="20210327 22:48:54.872"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:54.874" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 22:48:54.873" endtime="20210327 22:48:54.874"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:54.874" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:54.874" endtime="20210327 22:48:54.874"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:54.875" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:54.876" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:54.874" endtime="20210327 22:48:54.876"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:54.876" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:55.214" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:54.876" endtime="20210327 22:48:55.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.217" level="INFO">{'id': '76067b8961bf47368f53ab97b2e46a0f', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents/76067b8961bf47368f53ab97b2e46a0f', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents/76067b8961bf47368f53ab97b2e46a0f/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:55.216" endtime="20210327 22:48:55.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.219" level="INFO">60d7526496bba340</msg>
<status status="PASS" starttime="20210327 22:48:55.218" endtime="20210327 22:48:55.220"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.222" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:55.221" endtime="20210327 22:48:55.222"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:55.225" level="INFO">${document_external_key} = 76067b8961bf47368f53ab97b2e46a0f</msg>
<status status="PASS" starttime="20210327 22:48:55.223" endtime="20210327 22:48:55.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.227" level="INFO">${document_external_key} = 76067b8961bf47368f53ab97b2e46a0f</msg>
<status status="PASS" starttime="20210327 22:48:55.226" endtime="20210327 22:48:55.228"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:54.872" endtime="20210327 22:48:55.228"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:55.230" endtime="20210327 22:48:55.231"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:55.228" endtime="20210327 22:48:55.231"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.234" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 22:48:55.233" endtime="20210327 22:48:55.234"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:55.236" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:48:55.235" endtime="20210327 22:48:55.236"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:48:55.238" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:48:55.239" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:48:55.236" endtime="20210327 22:48:55.240"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:55.240" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:48:55.502" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:55.240" endtime="20210327 22:48:55.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.503" level="INFO">{'id': '75085d370b724a1d8e681dd6e7c46ca9', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents/75085d370b724a1d8e681dd6e7c46ca9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/documents/75085d370b724a1d8e681dd6e7c46ca9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:48:55.502" endtime="20210327 22:48:55.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.503" level="INFO">a9dbb255b46dcb3a</msg>
<status status="PASS" starttime="20210327 22:48:55.503" endtime="20210327 22:48:55.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.504" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:55.503" endtime="20210327 22:48:55.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:55.504" level="INFO">${document_external_key} = 75085d370b724a1d8e681dd6e7c46ca9</msg>
<status status="PASS" starttime="20210327 22:48:55.504" endtime="20210327 22:48:55.504"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.505" level="INFO">${document_external_key} = 75085d370b724a1d8e681dd6e7c46ca9</msg>
<status status="PASS" starttime="20210327 22:48:55.504" endtime="20210327 22:48:55.505"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:55.232" endtime="20210327 22:48:55.505"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:55.505" endtime="20210327 22:48:55.506"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:55.505" endtime="20210327 22:48:55.506"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:55.506" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:55.506" endtime="20210327 22:48:55.506"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:55.507" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:55.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:55.507" endtime="20210327 22:48:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.799" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 22:48:55.799" endtime="20210327 22:48:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.800" level="INFO">f0b8ba260f837d40</msg>
<status status="PASS" starttime="20210327 22:48:55.800" endtime="20210327 22:48:55.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:55.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:55.800" endtime="20210327 22:48:55.801"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:55.506" endtime="20210327 22:48:55.801"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:55.802" endtime="20210327 22:48:55.802"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:55.801" endtime="20210327 22:48:55.803"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 22:48:55.804" level="INFO">${assessment_id} = 22704ff1-e8a8-4d4f-928e-af8212a5e709</msg>
<status status="PASS" starttime="20210327 22:48:55.803" endtime="20210327 22:48:55.804"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 22:48:55.804" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 22:48:55.804" endtime="20210327 22:48:55.804"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 22:48:55.805" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 22:48:55.804" endtime="20210327 22:48:55.805"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 22:48:55.805" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 22:48:55.805" endtime="20210327 22:48:55.805"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:55.806" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:55.805" endtime="20210327 22:48:55.806"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:55.806" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 22:48:55.806" endtime="20210327 22:48:55.806"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:55.807" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/4632c8d2172d4e13944a0622c7f12fa5/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "4632c8d2172d4e13944a0622c7f12fa5", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "22704ff1-e8a8-4d4f-928e-af8212a5e709" } } 
json=None</msg>
<msg timestamp="20210327 22:48:56.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:55.807" endtime="20210327 22:48:56.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.021" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 22:48:56.020" endtime="20210327 22:48:56.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.023" level="INFO">824777d41122f83e</msg>
<status status="PASS" starttime="20210327 22:48:56.022" endtime="20210327 22:48:56.023"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:56.023" endtime="20210327 22:48:56.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 22:48:56.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:48:56.025" endtime="20210327 22:48:56.026"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:55.803" endtime="20210327 22:48:56.026"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:56.027" endtime="20210327 22:48:56.028"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:56.026" endtime="20210327 22:48:56.029"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:56.031" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:56.031" endtime="20210327 22:48:56.032"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:56.029" endtime="20210327 22:48:56.032"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:56.033" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/4632c8d2172d4e13944a0622c7f12fa5/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:56.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:56.032" endtime="20210327 22:48:56.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.684" level="INFO">{'items': [{'id': '589b3f8d93da4074a5e0ff26274cc546', 'holder': '4632c8d2172d4e13944a0622c7f12fa5', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3225467806', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:48:57.139', 'updated_at': '2021-03-28T01:48:57.139', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/589b3f8d93da4074a5e0ff26274cc546', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 22:48:56.683" endtime="20210327 22:48:56.685"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:56.686" endtime="20210327 22:48:56.687"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:48:56.691" level="INFO">${account_external_key} = 589b3f8d93da4074a5e0ff26274cc546</msg>
<status status="PASS" starttime="20210327 22:48:56.689" endtime="20210327 22:48:56.691"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.693" level="INFO">${account_external_key} = 589b3f8d93da4074a5e0ff26274cc546</msg>
<status status="PASS" starttime="20210327 22:48:56.692" endtime="20210327 22:48:56.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 22:48:56.695" level="INFO">${account_number} = 3225467806</msg>
<status status="PASS" starttime="20210327 22:48:56.694" endtime="20210327 22:48:56.696"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.697" level="INFO">${account_number} = 3225467806</msg>
<status status="PASS" starttime="20210327 22:48:56.696" endtime="20210327 22:48:56.697"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 22:48:56.699" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:48:56.698" endtime="20210327 22:48:56.699"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 22:48:56.701" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:48:56.700" endtime="20210327 22:48:56.701"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:56.029" endtime="20210327 22:48:56.701"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:56.702" endtime="20210327 22:48:56.704"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:56.701" endtime="20210327 22:48:56.704"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.341" endtime="20210327 22:48:56.705"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.341" endtime="20210327 22:48:56.705"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 22:48:56.706" level="INFO">${uuid} = afe7d401-23ee-4441-be99-919970c928bb</msg>
<status status="PASS" starttime="20210327 22:48:56.706" endtime="20210327 22:48:56.706"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:56.707" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:56.707" endtime="20210327 22:48:56.708"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:56.706" endtime="20210327 22:48:56.708"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:56.709" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:56.709" endtime="20210327 22:48:56.709"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:56.710" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "afe7d401-23ee-4441-be99-919970c928bb", "transaction_id": "afe7d401-23ee-4441-be99-919970c928bb", "id": "afe7d401-23ee-4441-be99-9199...</msg>
<status status="PASS" starttime="20210327 22:48:56.709" endtime="20210327 22:48:56.710"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:56.710" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/afe7d401-23ee-4441-be99-919970c928bb, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "afe7d401-23ee-4441-be99-919970c928bb", "transaction_id": "afe7d401-23ee-4441-be99-919970c928bb", "id": "afe7d401-23ee-4441-be99-919970c928bb", "id_checking_account": "589b3f8d93da4074a5e0ff26274cc546", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "afe7d401-23ee-4441-be99-919970c928bb", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 22:48:57.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:56.710" endtime="20210327 22:48:57.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:57.399" endtime="20210327 22:48:57.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:57.401" endtime="20210327 22:48:57.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:57.402" endtime="20210327 22:48:57.403"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:56.705" endtime="20210327 22:48:57.403"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:57.405" endtime="20210327 22:48:57.406"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:57.404" endtime="20210327 22:48:57.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:57.410" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:57.409" endtime="20210327 22:48:57.410"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:57.409" endtime="20210327 22:48:57.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 22:48:57.410" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210327 22:48:57.410" endtime="20210327 22:48:57.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 22:48:57.411" level="INFO">${value} = vianaisadora@da.org</msg>
<status status="PASS" starttime="20210327 22:48:57.411" endtime="20210327 22:48:57.411"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:57.411" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:57.411" endtime="20210327 22:48:57.411"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:57.412" level="INFO">${body} = { "type": "email", "value": "vianaisadora@da.org" }</msg>
<status status="PASS" starttime="20210327 22:48:57.411" endtime="20210327 22:48:57.412"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:57.412" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/4632c8d2172d4e13944a0622c7f12fa5/accounts/589b3f8d93da4074a5e0ff26274cc546/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "vianaisadora@da.org" } 
json=None</msg>
<msg timestamp="20210327 22:48:58.095" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:57.412" endtime="20210327 22:48:58.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.098" level="INFO">{'id': '4f9e2378046b4df7a44c54d939efce25', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T10:48:59.225', 'updated_at': '2021-03-27T10:48:59.225', 'key': {'value': 'vianaisadora@da.org', 'type': 'email'}, 'account': {'id': '589b3f8d93da4074a5e0ff26274cc546', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '4632c8d2172d4e13944a0622c7f12fa5', 'owner': {'name': 'Holder de teste', 'national_registration': '68094571357', 'type': 'individual'}, 'routing_number': '001', 'number': '3225467806', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:48:58.096" endtime="20210327 22:48:58.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.099" level="INFO">ca589b143e00ed83</msg>
<status status="PASS" starttime="20210327 22:48:58.098" endtime="20210327 22:48:58.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.101" level="INFO">202</msg>
<status status="PASS" starttime="20210327 22:48:58.100" endtime="20210327 22:48:58.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.102" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:58.101" endtime="20210327 22:48:58.102"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:58.103" endtime="20210327 22:48:58.104"></status>
</kw>
<msg timestamp="20210327 22:48:58.104" level="INFO">${entry_external_key} = 4f9e2378046b4df7a44c54d939efce25</msg>
<status status="PASS" starttime="20210327 22:48:58.102" endtime="20210327 22:48:58.105"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.106" level="INFO">${entry_external_key} = 4f9e2378046b4df7a44c54d939efce25</msg>
<status status="PASS" starttime="20210327 22:48:58.105" endtime="20210327 22:48:58.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:58.107" endtime="20210327 22:48:58.108"></status>
</kw>
<msg timestamp="20210327 22:48:58.108" level="INFO">${entry_key_value} = vianaisadora@da.org</msg>
<status status="PASS" starttime="20210327 22:48:58.106" endtime="20210327 22:48:58.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.109" level="INFO">${entry_key_value} = vianaisadora@da.org</msg>
<status status="PASS" starttime="20210327 22:48:58.108" endtime="20210327 22:48:58.109"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:57.408" endtime="20210327 22:48:58.109"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:57.407" endtime="20210327 22:48:58.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:58.111" endtime="20210327 22:48:58.112"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.110" endtime="20210327 22:48:58.112"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.109" endtime="20210327 22:48:58.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:58.114" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:58.114" endtime="20210327 22:48:58.114"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.113" endtime="20210327 22:48:58.114"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:58.115" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/4632c8d2172d4e13944a0622c7f12fa5/accounts/589b3f8d93da4074a5e0ff26274cc546/entries/4f9e2378046b4df7a44c54d939efce25/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:48:58.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:58.114" endtime="20210327 22:48:58.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.772" level="INFO">{'code': '4415'}</msg>
<status status="PASS" starttime="20210327 22:48:58.772" endtime="20210327 22:48:58.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.773" level="INFO">f562f1c47cfaacf4</msg>
<status status="PASS" starttime="20210327 22:48:58.773" endtime="20210327 22:48:58.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.773" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:48:58.773" endtime="20210327 22:48:58.773"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:58.774" endtime="20210327 22:48:58.774"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 22:48:58.775" level="INFO">${verification_code} = 4415</msg>
<status status="PASS" starttime="20210327 22:48:58.774" endtime="20210327 22:48:58.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 22:48:58.775" level="INFO">${verification_code} = 4415</msg>
<status status="PASS" starttime="20210327 22:48:58.775" endtime="20210327 22:48:58.775"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.113" endtime="20210327 22:48:58.775"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.112" endtime="20210327 22:48:58.775"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:48:58.776" endtime="20210327 22:48:58.776"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.775" endtime="20210327 22:48:58.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:48:58.778" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:48:58.778" endtime="20210327 22:48:58.778"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.777" endtime="20210327 22:48:58.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:48:58.778" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:48:58.778" endtime="20210327 22:48:58.778"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:48:58.779" level="INFO">${body} = { "code": "4415" }</msg>
<status status="PASS" starttime="20210327 22:48:58.779" endtime="20210327 22:48:58.779"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:48:58.779" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/4632c8d2172d4e13944a0622c7f12fa5/accounts/589b3f8d93da4074a5e0ff26274cc546/entries/4f9e2378046b4df7a44c54d939efce25/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4415" } 
json=None</msg>
<msg timestamp="20210327 22:49:00.318" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:48:58.779" endtime="20210327 22:49:00.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:00.321" level="INFO">{'id': '4f9e2378046b4df7a44c54d939efce25', 'status': 'active', 'created_at': '2021-03-27T10:48:59.225', 'updated_at': '2021-03-27T10:49:01.472', 'key': {'value': 'vianaisadora@da.org', 'type': 'email'}, 'account': {'id': '589b3f8d93da4074a5e0ff26274cc546', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '4632c8d2172d4e13944a0622c7f12fa5', 'owner': {'name': 'Holder de teste', 'national_registration': '68094571357', 'type': 'individual'}, 'routing_number': '001', 'number': '3225467806', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:00.320" endtime="20210327 22:49:00.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:00.324" level="INFO">a8e7c0716b6b00c0</msg>
<status status="PASS" starttime="20210327 22:49:00.323" endtime="20210327 22:49:00.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:00.328" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:00.325" endtime="20210327 22:49:00.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:00.330" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:00.329" endtime="20210327 22:49:00.330"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.777" endtime="20210327 22:49:00.330"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:58.777" endtime="20210327 22:49:00.331"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:00.332" endtime="20210327 22:49:00.333"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:00.331" endtime="20210327 22:49:00.333"></status>
</kw>
<status status="PASS" starttime="20210327 22:48:53.338" endtime="20210327 22:49:00.334"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=200</arg>
<arg>creditor_account_number=0243882974</arg>
<arg>creditor_routing_number=0500</arg>
<arg>creditor_account_type=cacc</arg>
<arg>creditor_name=Massa ITI PFNAUmNNO</arg>
<arg>creditor_national_registration=${national_registration}</arg>
<arg>creditor_psp=17192451</arg>
<arg>pix_description=Teste PIX</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:00.338" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:00.337" endtime="20210327 22:49:00.339"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:00.336" endtime="20210327 22:49:00.339"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:00.339" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:00.339" endtime="20210327 22:49:00.339"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:00.340" level="INFO">${body} = { "amount": 200, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa ITI PFNAUmNNO", "national_registration": "68094571357", "psp": "17192451"...</msg>
<status status="PASS" starttime="20210327 22:49:00.339" endtime="20210327 22:49:00.340"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:00.341" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/4632c8d2172d4e13944a0622c7f12fa5/accounts/589b3f8d93da4074a5e0ff26274cc546/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 200, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa ITI PFNAUmNNO", "national_registration": "68094571357", "psp": "17192451" }, "description": "Teste PIX" } 
json=None</msg>
<msg timestamp="20210327 22:49:01.024" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:00.340" endtime="20210327 22:49:01.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.026" level="INFO">{'code': 9997, 'status': 'conflict', 'type': 'conflict', 'message': 'Resource already exists', 'category': 'business', 'status_code': 409}</msg>
<status status="PASS" starttime="20210327 22:49:01.025" endtime="20210327 22:49:01.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.029" level="INFO">5b32c6ed236a0dbd</msg>
<status status="PASS" starttime="20210327 22:49:01.028" endtime="20210327 22:49:01.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.031" level="INFO">409</msg>
<status status="PASS" starttime="20210327 22:49:01.031" endtime="20210327 22:49:01.031"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.033" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:01.032" endtime="20210327 22:49:01.033"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:01.035" level="INFO">${payment_external_key} = None</msg>
<status status="PASS" starttime="20210327 22:49:01.034" endtime="20210327 22:49:01.035"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.036" level="INFO">${payment_external_key} = None</msg>
<status status="PASS" starttime="20210327 22:49:01.035" endtime="20210327 22:49:01.036"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:01.037" level="INFO">${end_to_end_id} = None</msg>
<status status="PASS" starttime="20210327 22:49:01.036" endtime="20210327 22:49:01.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.037" level="INFO">${end_to_end_id} = None</msg>
<status status="PASS" starttime="20210327 22:49:01.037" endtime="20210327 22:49:01.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:01.038" level="INFO">${message_id} = None</msg>
<status status="PASS" starttime="20210327 22:49:01.037" endtime="20210327 22:49:01.038"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.038" level="INFO">${message_id} = None</msg>
<status status="PASS" starttime="20210327 22:49:01.038" endtime="20210327 22:49:01.038"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:00.335" endtime="20210327 22:49:01.038"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>status_code=201</arg>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:01.040" level="INFO">${date} = 2021-03-27 22:49:01.040328</msg>
<status status="PASS" starttime="20210327 22:49:01.040" endtime="20210327 22:49:01.040"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:01.041" level="INFO">${date} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:49:01.041" endtime="20210327 22:49:01.041"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=${status_code}</arg>
<arg>message_error=Fluxo de Envio de PIX com erro</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.042" level="FAIL">Fluxo de Envio de PIX com erro :: status_code: 409 || message: Resource already exists || X-REQUEST-ID: 5b32c6ed236a0dbd</msg>
<status status="FAIL" starttime="20210327 22:49:01.042" endtime="20210327 22:49:01.042"></status>
</kw>
<status status="FAIL" starttime="20210327 22:49:01.041" endtime="20210327 22:49:01.043"></status>
</kw>
<status status="FAIL" starttime="20210327 22:49:01.041" endtime="20210327 22:49:01.043"></status>
</kw>
<status status="FAIL" starttime="20210327 22:49:01.039" endtime="20210327 22:49:01.043"></status>
</kw>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="FAIL" starttime="20210327 22:48:53.338" endtime="20210327 22:49:01.044" critical="yes">Fluxo de Envio de PIX com erro :: status_code: 409 || message: Resource already exists || X-REQUEST-ID: 5b32c6ed236a0dbd</status>
</test>
<doc>Funcionalidade: Criar Chave de Endereçamento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma pagamento PIX</doc>
<status status="FAIL" starttime="20210327 22:48:44.825" endtime="20210327 22:49:01.045"></status>
</suite>
<status status="FAIL" starttime="20210327 22:48:35.463" endtime="20210327 22:49:01.048"></status>
</suite>
<suite id="s1-s2" name="Recebimento" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento">
<suite id="s1-s2-s1" name="Receber Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\recebimento\Receber Pagamento PIX.robot">
<test id="s1-s2-s1-t1" name="Cenário: Receber PIX">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=phone</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 22:49:01.116" level="INFO">${phone} = 99034085</msg>
<status status="PASS" starttime="20210327 22:49:01.115" endtime="20210327 22:49:01.116"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 22:49:01.116" level="INFO">${phone_pix} = +5521999034085</msg>
<status status="PASS" starttime="20210327 22:49:01.116" endtime="20210327 22:49:01.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.116" level="INFO">${phone_pix} = +5521999034085</msg>
<status status="PASS" starttime="20210327 22:49:01.116" endtime="20210327 22:49:01.117"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 22:49:01.117" level="INFO">${email_pix} = ccosta@da.br</msg>
<status status="PASS" starttime="20210327 22:49:01.117" endtime="20210327 22:49:01.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.117" level="INFO">${email_pix} = ccosta@da.br</msg>
<status status="PASS" starttime="20210327 22:49:01.117" endtime="20210327 22:49:01.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:01.119" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:01.119" endtime="20210327 22:49:01.119"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.118" endtime="20210327 22:49:01.119"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:01.120" level="INFO">${national_registration} = 817.359.026-59</msg>
<status status="PASS" starttime="20210327 22:49:01.119" endtime="20210327 22:49:01.120"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:01.120" level="INFO">${national_registration} = 817359026-59</msg>
<status status="PASS" starttime="20210327 22:49:01.120" endtime="20210327 22:49:01.120"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:01.120" level="INFO">${national_registration} = 81735902659</msg>
<status status="PASS" starttime="20210327 22:49:01.120" endtime="20210327 22:49:01.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.122" level="INFO">${national_registration} = 81735902659</msg>
<status status="PASS" starttime="20210327 22:49:01.121" endtime="20210327 22:49:01.122"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 22:49:01.122" level="INFO">${identity_card} = 380426572</msg>
<status status="PASS" starttime="20210327 22:49:01.122" endtime="20210327 22:49:01.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.122" level="INFO">${identity_card} = 380426572</msg>
<status status="PASS" starttime="20210327 22:49:01.122" endtime="20210327 22:49:01.122"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:01.123" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:01.123" endtime="20210327 22:49:01.123"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.122" endtime="20210327 22:49:01.123"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.124" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 22:49:01.123" endtime="20210327 22:49:01.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.124" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:49:01.124" endtime="20210327 22:49:01.124"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:01.125" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:01.124" endtime="20210327 22:49:01.125"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:01.125" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "81735902659", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 22:49:01.125" endtime="20210327 22:49:01.125"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:01.126" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "81735902659", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "380426572", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 22:49:01.817" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:01.125" endtime="20210327 22:49:01.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.819" level="INFO">{'id': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T22:49:02.943625', 'updated_at': '2021-03-27T22:49:02.943626', 'type': 'individual', 'national_registration': '81735902659', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '380426572', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:01.818" endtime="20210327 22:49:01.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.822" level="INFO">6af2f73e12ff93d1</msg>
<status status="PASS" starttime="20210327 22:49:01.821" endtime="20210327 22:49:01.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.824" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "81735902659", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "380426572", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 22:49:01.823" endtime="20210327 22:49:01.824"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:01.825" endtime="20210327 22:49:01.826"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:01.828" level="INFO">${holder_external_key} = be9d86e04bfc4746b9de0bc7a90b0e90</msg>
<status status="PASS" starttime="20210327 22:49:01.826" endtime="20210327 22:49:01.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.829" level="INFO">${holder_external_key} = be9d86e04bfc4746b9de0bc7a90b0e90</msg>
<status status="PASS" starttime="20210327 22:49:01.829" endtime="20210327 22:49:01.829"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.122" endtime="20210327 22:49:01.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:49:01.831" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:49:01.830" endtime="20210327 22:49:01.831"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:01.833" endtime="20210327 22:49:01.834"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.832" endtime="20210327 22:49:01.834"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:01.836" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:01.835" endtime="20210327 22:49:01.836"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:01.837" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 22:49:01.837" endtime="20210327 22:49:01.837"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:01.839" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 22:49:02.100" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:01.838" endtime="20210327 22:49:02.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.102" level="INFO">{'id': 'fa7e07e5db1d47b4af934ca144a35f35', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/phones/fa7e07e5db1d47b4af934ca144a35f35', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:02.101" endtime="20210327 22:49:02.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.104" level="INFO">eafdba300d091a6a</msg>
<status status="PASS" starttime="20210327 22:49:02.103" endtime="20210327 22:49:02.105"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.107" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:02.106" endtime="20210327 22:49:02.107"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:02.109" level="INFO">${phone_external_key} = fa7e07e5db1d47b4af934ca144a35f35</msg>
<status status="PASS" starttime="20210327 22:49:02.108" endtime="20210327 22:49:02.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.111" level="INFO">${phone_external_key} = fa7e07e5db1d47b4af934ca144a35f35</msg>
<status status="PASS" starttime="20210327 22:49:02.110" endtime="20210327 22:49:02.111"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.835" endtime="20210327 22:49:02.111"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:02.113" endtime="20210327 22:49:02.114"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:02.112" endtime="20210327 22:49:02.114"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:02.116" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:02.115" endtime="20210327 22:49:02.116"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:02.117" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 22:49:02.116" endtime="20210327 22:49:02.117"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:02.118" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 22:49:02.347" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:02.117" endtime="20210327 22:49:02.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.350" level="INFO">{'id': 'acd0dec88140410395a3f8f402fbc49a', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/addresses/acd0dec88140410395a3f8f402fbc49a', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:02.348" endtime="20210327 22:49:02.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.352" level="INFO">651839f12c30aaf9</msg>
<status status="PASS" starttime="20210327 22:49:02.351" endtime="20210327 22:49:02.353"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.354" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:02.354" endtime="20210327 22:49:02.355"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:02.357" level="INFO">${address_external_key} = acd0dec88140410395a3f8f402fbc49a</msg>
<status status="PASS" starttime="20210327 22:49:02.356" endtime="20210327 22:49:02.357"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.359" level="INFO">${address_external_key} = acd0dec88140410395a3f8f402fbc49a</msg>
<status status="PASS" starttime="20210327 22:49:02.358" endtime="20210327 22:49:02.359"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:02.114" endtime="20210327 22:49:02.359"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:02.360" endtime="20210327 22:49:02.361"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:02.360" endtime="20210327 22:49:02.361"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.361" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 22:49:02.361" endtime="20210327 22:49:02.362"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:02.362" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:02.362" endtime="20210327 22:49:02.362"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:02.362" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:02.363" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:02.362" endtime="20210327 22:49:02.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:02.364" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:02.712" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:02.364" endtime="20210327 22:49:02.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.715" level="INFO">{'id': '50c4c37abb8d41fd93b5a834e0a01c53', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents/50c4c37abb8d41fd93b5a834e0a01c53', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents/50c4c37abb8d41fd93b5a834e0a01c53/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:02.713" endtime="20210327 22:49:02.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.718" level="INFO">edb9d953e6cffd7c</msg>
<status status="PASS" starttime="20210327 22:49:02.716" endtime="20210327 22:49:02.718"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.720" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:02.719" endtime="20210327 22:49:02.720"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:02.722" level="INFO">${document_external_key} = 50c4c37abb8d41fd93b5a834e0a01c53</msg>
<status status="PASS" starttime="20210327 22:49:02.721" endtime="20210327 22:49:02.722"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.725" level="INFO">${document_external_key} = 50c4c37abb8d41fd93b5a834e0a01c53</msg>
<status status="PASS" starttime="20210327 22:49:02.723" endtime="20210327 22:49:02.725"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:02.361" endtime="20210327 22:49:02.725"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:02.726" endtime="20210327 22:49:02.729"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:02.726" endtime="20210327 22:49:02.729"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:02.732" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 22:49:02.731" endtime="20210327 22:49:02.732"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:02.733" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:02.732" endtime="20210327 22:49:02.733"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:02.735" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:02.738" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:02.735" endtime="20210327 22:49:02.738"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:02.739" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:03.116" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:02.738" endtime="20210327 22:49:03.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.120" level="INFO">{'id': '629c3a8024144e7babee40279cf1ac2d', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents/629c3a8024144e7babee40279cf1ac2d', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents/629c3a8024144e7babee40279cf1ac2d/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:03.118" endtime="20210327 22:49:03.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.122" level="INFO">d43c338b3c65ebba</msg>
<status status="PASS" starttime="20210327 22:49:03.121" endtime="20210327 22:49:03.122"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.124" endtime="20210327 22:49:03.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:03.127" level="INFO">${document_external_key} = 629c3a8024144e7babee40279cf1ac2d</msg>
<status status="PASS" starttime="20210327 22:49:03.126" endtime="20210327 22:49:03.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.128" level="INFO">${document_external_key} = 629c3a8024144e7babee40279cf1ac2d</msg>
<status status="PASS" starttime="20210327 22:49:03.128" endtime="20210327 22:49:03.128"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:02.729" endtime="20210327 22:49:03.129"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:03.130" endtime="20210327 22:49:03.131"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.129" endtime="20210327 22:49:03.132"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.132" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 22:49:03.132" endtime="20210327 22:49:03.132"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:03.133" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:03.133" endtime="20210327 22:49:03.133"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:03.133" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:03.134" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:03.133" endtime="20210327 22:49:03.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:03.135" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:03.434" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.134" endtime="20210327 22:49:03.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.437" level="INFO">{'id': '181866185f8c4adaa96d16fb8acfa744', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents/181866185f8c4adaa96d16fb8acfa744', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/documents/181866185f8c4adaa96d16fb8acfa744/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:03.436" endtime="20210327 22:49:03.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.439" level="INFO">10661baa309a0b78</msg>
<status status="PASS" starttime="20210327 22:49:03.438" endtime="20210327 22:49:03.439"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.441" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.440" endtime="20210327 22:49:03.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:03.443" level="INFO">${document_external_key} = 181866185f8c4adaa96d16fb8acfa744</msg>
<status status="PASS" starttime="20210327 22:49:03.441" endtime="20210327 22:49:03.443"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.444" level="INFO">${document_external_key} = 181866185f8c4adaa96d16fb8acfa744</msg>
<status status="PASS" starttime="20210327 22:49:03.443" endtime="20210327 22:49:03.444"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.132" endtime="20210327 22:49:03.444"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:03.444" endtime="20210327 22:49:03.445"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.444" endtime="20210327 22:49:03.445"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:03.445" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:03.445" endtime="20210327 22:49:03.445"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:03.446" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:03.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.446" endtime="20210327 22:49:03.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.749" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 22:49:03.748" endtime="20210327 22:49:03.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.751" level="INFO">2c430da83ad432e6</msg>
<status status="PASS" starttime="20210327 22:49:03.750" endtime="20210327 22:49:03.751"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.751" endtime="20210327 22:49:03.752"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.445" endtime="20210327 22:49:03.752"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:03.754" endtime="20210327 22:49:03.754"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.753" endtime="20210327 22:49:03.754"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 22:49:03.755" level="INFO">${assessment_id} = 897730c2-7e65-4a7c-9d00-b7577aba1712</msg>
<status status="PASS" starttime="20210327 22:49:03.755" endtime="20210327 22:49:03.755"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 22:49:03.755" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 22:49:03.755" endtime="20210327 22:49:03.755"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 22:49:03.756" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 22:49:03.755" endtime="20210327 22:49:03.756"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 22:49:03.756" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 22:49:03.756" endtime="20210327 22:49:03.756"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:03.757" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:03.756" endtime="20210327 22:49:03.757"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:03.757" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 22:49:03.757" endtime="20210327 22:49:03.757"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:03.758" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/be9d86e04bfc4746b9de0bc7a90b0e90/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "be9d86e04bfc4746b9de0bc7a90b0e90", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "897730c2-7e65-4a7c-9d00-b7577aba1712" } } 
json=None</msg>
<msg timestamp="20210327 22:49:03.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.757" endtime="20210327 22:49:03.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.990" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 22:49:03.988" endtime="20210327 22:49:03.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.992" level="INFO">dfb6417d39a7d5db</msg>
<status status="PASS" starttime="20210327 22:49:03.991" endtime="20210327 22:49:03.992"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:03.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.993" endtime="20210327 22:49:03.994"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 22:49:03.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:03.994" endtime="20210327 22:49:03.995"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.754" endtime="20210327 22:49:03.995"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:03.997" endtime="20210327 22:49:03.999"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.996" endtime="20210327 22:49:03.999"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:04.001" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:04.001" endtime="20210327 22:49:04.002"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:04.000" endtime="20210327 22:49:04.002"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:04.003" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/be9d86e04bfc4746b9de0bc7a90b0e90/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:04.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:04.003" endtime="20210327 22:49:04.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:04.656" level="INFO">{'items': [{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:05.093131', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 22:49:04.654" endtime="20210327 22:49:04.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:04.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:04.657" endtime="20210327 22:49:04.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:04.660" level="INFO">${account_external_key} = 0a202a0162c5480f8f1b6aef784e2507</msg>
<status status="PASS" starttime="20210327 22:49:04.659" endtime="20210327 22:49:04.660"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:04.661" level="INFO">${account_external_key} = 0a202a0162c5480f8f1b6aef784e2507</msg>
<status status="PASS" starttime="20210327 22:49:04.661" endtime="20210327 22:49:04.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 22:49:04.664" level="INFO">${account_number} = 5508108313</msg>
<status status="PASS" starttime="20210327 22:49:04.662" endtime="20210327 22:49:04.664"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 22:49:04.665" level="INFO">${account_number} = 5508108313</msg>
<status status="PASS" starttime="20210327 22:49:04.665" endtime="20210327 22:49:04.665"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 22:49:04.666" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:49:04.666" endtime="20210327 22:49:04.666"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 22:49:04.667" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:49:04.666" endtime="20210327 22:49:04.667"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:03.999" endtime="20210327 22:49:04.667"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:04.667" endtime="20210327 22:49:04.668"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:04.667" endtime="20210327 22:49:04.668"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.118" endtime="20210327 22:49:04.668"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.118" endtime="20210327 22:49:04.668"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 22:49:04.669" level="INFO">${uuid} = 1ad7b441-e6f0-4592-b041-01421731779d</msg>
<status status="PASS" starttime="20210327 22:49:04.668" endtime="20210327 22:49:04.669"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:04.669" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:04.669" endtime="20210327 22:49:04.670"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:04.669" endtime="20210327 22:49:04.670"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:04.670" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:04.670" endtime="20210327 22:49:04.670"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:04.671" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "1ad7b441-e6f0-4592-b041-01421731779d", "transaction_id": "1ad7b441-e6f0-4592-b041-01421731779d", "id": "1ad7b441-e6f0-4592-b041-0142...</msg>
<status status="PASS" starttime="20210327 22:49:04.670" endtime="20210327 22:49:04.671"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:04.671" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/1ad7b441-e6f0-4592-b041-01421731779d, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "1ad7b441-e6f0-4592-b041-01421731779d", "transaction_id": "1ad7b441-e6f0-4592-b041-01421731779d", "id": "1ad7b441-e6f0-4592-b041-01421731779d", "id_checking_account": "0a202a0162c5480f8f1b6aef784e2507", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "1ad7b441-e6f0-4592-b041-01421731779d", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 22:49:05.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:04.671" endtime="20210327 22:49:05.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:05.327" endtime="20210327 22:49:05.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:05.328" endtime="20210327 22:49:05.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:05.328" endtime="20210327 22:49:05.328"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:04.668" endtime="20210327 22:49:05.328"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:05.329" endtime="20210327 22:49:05.329"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:05.328" endtime="20210327 22:49:05.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:05.331" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:05.331" endtime="20210327 22:49:05.331"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:05.330" endtime="20210327 22:49:05.331"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 22:49:05.331" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210327 22:49:05.331" endtime="20210327 22:49:05.331"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 22:49:05.332" level="INFO">${value} = +5521999034085</msg>
<status status="PASS" starttime="20210327 22:49:05.332" endtime="20210327 22:49:05.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:05.332" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:05.332" endtime="20210327 22:49:05.332"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:05.333" level="INFO">${body} = { "type": "phone", "value": "+5521999034085" }</msg>
<status status="PASS" starttime="20210327 22:49:05.333" endtime="20210327 22:49:05.333"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:05.334" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/be9d86e04bfc4746b9de0bc7a90b0e90/accounts/0a202a0162c5480f8f1b6aef784e2507/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521999034085" } 
json=None</msg>
<msg timestamp="20210327 22:49:06.018" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:05.333" endtime="20210327 22:49:06.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.020" level="INFO">{'id': '58b2abd94f5346fdbcadede8857857c4', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T10:49:07.159', 'updated_at': '2021-03-27T10:49:07.159', 'key': {'value': '+5521999034085', 'type': 'phone'}, 'account': {'id': '0a202a0162c5480f8f1b6aef784e2507', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'owner': {'name': 'Holder de teste', 'national_registration': '81735902659', 'type': 'individual'}, 'routing_number': '001', 'number': '5508108313', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:06.019" endtime="20210327 22:49:06.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.022" level="INFO">38178e28427f1523</msg>
<status status="PASS" starttime="20210327 22:49:06.021" endtime="20210327 22:49:06.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.025" level="INFO">202</msg>
<status status="PASS" starttime="20210327 22:49:06.024" endtime="20210327 22:49:06.025"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.027" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:06.026" endtime="20210327 22:49:06.027"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:06.030" endtime="20210327 22:49:06.031"></status>
</kw>
<msg timestamp="20210327 22:49:06.031" level="INFO">${entry_external_key} = 58b2abd94f5346fdbcadede8857857c4</msg>
<status status="PASS" starttime="20210327 22:49:06.028" endtime="20210327 22:49:06.031"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.033" level="INFO">${entry_external_key} = 58b2abd94f5346fdbcadede8857857c4</msg>
<status status="PASS" starttime="20210327 22:49:06.032" endtime="20210327 22:49:06.033"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:06.035" endtime="20210327 22:49:06.036"></status>
</kw>
<msg timestamp="20210327 22:49:06.036" level="INFO">${entry_key_value} = +5521999034085</msg>
<status status="PASS" starttime="20210327 22:49:06.034" endtime="20210327 22:49:06.036"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.037" level="INFO">${entry_key_value} = +5521999034085</msg>
<status status="PASS" starttime="20210327 22:49:06.037" endtime="20210327 22:49:06.037"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:05.330" endtime="20210327 22:49:06.037"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:05.329" endtime="20210327 22:49:06.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:06.039" endtime="20210327 22:49:06.039"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.038" endtime="20210327 22:49:06.039"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.038" endtime="20210327 22:49:06.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:06.041" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:06.040" endtime="20210327 22:49:06.041"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.040" endtime="20210327 22:49:06.041"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:06.041" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/be9d86e04bfc4746b9de0bc7a90b0e90/accounts/0a202a0162c5480f8f1b6aef784e2507/entries/58b2abd94f5346fdbcadede8857857c4/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:06.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:06.041" endtime="20210327 22:49:06.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.695" level="INFO">{'code': '3022'}</msg>
<status status="PASS" starttime="20210327 22:49:06.694" endtime="20210327 22:49:06.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.697" level="INFO">fb86b1efd42f0674</msg>
<status status="PASS" starttime="20210327 22:49:06.696" endtime="20210327 22:49:06.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.699" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:49:06.698" endtime="20210327 22:49:06.699"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:06.700" endtime="20210327 22:49:06.701"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 22:49:06.703" level="INFO">${verification_code} = 3022</msg>
<status status="PASS" starttime="20210327 22:49:06.702" endtime="20210327 22:49:06.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:06.704" level="INFO">${verification_code} = 3022</msg>
<status status="PASS" starttime="20210327 22:49:06.703" endtime="20210327 22:49:06.704"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.040" endtime="20210327 22:49:06.704"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.039" endtime="20210327 22:49:06.705"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:06.706" endtime="20210327 22:49:06.707"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.705" endtime="20210327 22:49:06.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:06.712" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:06.712" endtime="20210327 22:49:06.713"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.711" endtime="20210327 22:49:06.713"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:06.714" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:06.713" endtime="20210327 22:49:06.714"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:06.714" level="INFO">${body} = { "code": "3022" }</msg>
<status status="PASS" starttime="20210327 22:49:06.714" endtime="20210327 22:49:06.714"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:06.715" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/be9d86e04bfc4746b9de0bc7a90b0e90/accounts/0a202a0162c5480f8f1b6aef784e2507/entries/58b2abd94f5346fdbcadede8857857c4/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "3022" } 
json=None</msg>
<msg timestamp="20210327 22:49:08.277" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:06.714" endtime="20210327 22:49:08.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.279" level="INFO">{'id': '58b2abd94f5346fdbcadede8857857c4', 'status': 'active', 'created_at': '2021-03-27T10:49:07.159', 'updated_at': '2021-03-27T10:49:09.431', 'key': {'value': '+5521999034085', 'type': 'phone'}, 'account': {'id': '0a202a0162c5480f8f1b6aef784e2507', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'owner': {'name': 'Holder de teste', 'national_registration': '81735902659', 'type': 'individual'}, 'routing_number': '001', 'number': '5508108313', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:08.278" endtime="20210327 22:49:08.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.280" level="INFO">1ad4302151731bb4</msg>
<status status="PASS" starttime="20210327 22:49:08.279" endtime="20210327 22:49:08.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.280" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:08.280" endtime="20210327 22:49:08.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.282" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:08.281" endtime="20210327 22:49:08.282"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.710" endtime="20210327 22:49:08.282"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:06.708" endtime="20210327 22:49:08.282"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:08.284" endtime="20210327 22:49:08.284"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.283" endtime="20210327 22:49:08.284"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:01.115" endtime="20210327 22:49:08.285"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:08.288" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:08.287" endtime="20210327 22:49:08.288"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.287" endtime="20210327 22:49:08.288"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:08.289" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:08.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:08.288" endtime="20210327 22:49:08.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.926" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:08.924" endtime="20210327 22:49:08.926"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:08.927" endtime="20210327 22:49:08.929"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:08.932" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:08.930" endtime="20210327 22:49:08.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.933" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:08.932" endtime="20210327 22:49:08.933"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.286" endtime="20210327 22:49:08.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_initial}</var>
</assign>
<msg timestamp="20210327 22:49:08.936" level="INFO">${account_balance_initial} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:08.936" endtime="20210327 22:49:08.936"></status>
</kw>
<kw name="gerar end_to_end_id" library="end_to_end_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:08.937" level="INFO">${date} = 2021-03-27 22:49:08.936528</msg>
<status status="PASS" starttime="20210327 22:49:08.937" endtime="20210327 22:49:08.937"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:08.938" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:08.937" endtime="20210327 22:49:08.938"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:08.938" level="INFO">${random_number_end_to_end_id} = 48096091544</msg>
<status status="PASS" starttime="20210327 22:49:08.938" endtime="20210327 22:49:08.938"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:08.939" level="INFO">${end_to_end_id} = E1946824220210327224948096091544</msg>
<status status="PASS" starttime="20210327 22:49:08.938" endtime="20210327 22:49:08.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.939" level="INFO">${end_to_end_id} = E1946824220210327224948096091544</msg>
<status status="PASS" starttime="20210327 22:49:08.939" endtime="20210327 22:49:08.939"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.937" endtime="20210327 22:49:08.939"></status>
</kw>
<kw name="gerar message_id" library="message_id_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:08.940" level="INFO">${date} = 2021-03-27 22:49:08.939527</msg>
<status status="PASS" starttime="20210327 22:49:08.940" endtime="20210327 22:49:08.940"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:08.940" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:08.940" endtime="20210327 22:49:08.940"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210327 22:49:08.941" level="INFO">${random_number_message_id} = 58924524307784531682054</msg>
<status status="PASS" starttime="20210327 22:49:08.941" endtime="20210327 22:49:08.941"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:08.941" level="INFO">${message_id} = M1946824258924524307784531682054</msg>
<status status="PASS" starttime="20210327 22:49:08.941" endtime="20210327 22:49:08.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.942" level="INFO">${message_id} = M1946824258924524307784531682054</msg>
<status status="PASS" starttime="20210327 22:49:08.942" endtime="20210327 22:49:08.942"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.940" endtime="20210327 22:49:08.942"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>amount=5000000</arg>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:08.944" level="INFO">${date} = 2021-03-27 22:49:08.943578</msg>
<status status="PASS" starttime="20210327 22:49:08.943" endtime="20210327 22:49:08.944"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:08.944" level="INFO">${datetime} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:49:08.944" endtime="20210327 22:49:08.944"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:49:08.945" level="INFO">${amount} = 5000000</msg>
<status status="PASS" starttime="20210327 22:49:08.944" endtime="20210327 22:49:08.945"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:08.945" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:08.945" endtime="20210327 22:49:08.945"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.945" endtime="20210327 22:49:08.946"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:08.946" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:08.946" endtime="20210327 22:49:08.946"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": ${amount},</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "0243882974",</arg>
<arg>"psp": "17192451",</arg>
<arg>"routing_number": "0500",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "42808422644",</arg>
<arg>"identification": "Teste de Recebimento de PIX",</arg>
<arg>"name": "Massa ITI PFNAUmNNO"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:08.948" level="INFO">${body} = { "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224948096091544", "message_id": "M1946824258924524307784531682054", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210327 22:49:08.946" endtime="20210327 22:49:08.948"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:08.948" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224948096091544", "message_id": "M1946824258924524307784531682054", "receiver": { "account_details": { "number": "5508108313", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "81735902659" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "0243882974", "psp": "17192451", "routing_number": "0500", "type": "cacc" }, "document": "42808422644", "identification": "Teste de Recebimento de PIX", "name": "Massa ITI PFNAUmNNO" } } 
json=None</msg>
<msg timestamp="20210327 22:49:09.649" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:08.948" endtime="20210327 22:49:09.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:09.652" level="INFO">{'id': '4cb0a3b57c414789a9f8aaf1d72e2296', 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210327 22:49:09.651" endtime="20210327 22:49:09.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:09.654" level="INFO">274fdfe868ddda26</msg>
<status status="PASS" starttime="20210327 22:49:09.653" endtime="20210327 22:49:09.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:09.657" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:09.656" endtime="20210327 22:49:09.657"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:09.658" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:09.658" endtime="20210327 22:49:09.659"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:08.943" endtime="20210327 22:49:09.659"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao receber PIX</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:09.662" endtime="20210327 22:49:09.663"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:09.661" endtime="20210327 22:49:09.663"></status>
</kw>
<kw name="confirmar pagamento pix admin" library="pix_admin_confirm_payment">
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:09.668" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:09.667" endtime="20210327 22:49:09.668"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:09.666" endtime="20210327 22:49:09.668"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20210327 22:49:09.670" level="INFO">${random_number} = 51769884485649460421430</msg>
<status status="PASS" starttime="20210327 22:49:09.669" endtime="20210327 22:49:09.670"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:09.671" level="INFO">${message_id} = M1946824251769884485649460421430</msg>
<status status="PASS" starttime="20210327 22:49:09.670" endtime="20210327 22:49:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:09.672" level="INFO">M1946824251769884485649460421430</msg>
<status status="PASS" starttime="20210327 22:49:09.671" endtime="20210327 22:49:09.672"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:09.672" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:09.672" endtime="20210327 22:49:09.672"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"instruction_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:09.673" level="INFO">${body} = { "instruction_id": "E1946824220210327224948096091544", "message_id": "M1946824251769884485649460421430" }</msg>
<status status="PASS" starttime="20210327 22:49:09.673" endtime="20210327 22:49:09.673"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix/${end_to_end_id}/confirmation</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:09.673" level="INFO">POST Request using : uri=/admin/internal_operation/pix/E1946824220210327224948096091544/confirmation, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "instruction_id": "E1946824220210327224948096091544", "message_id": "M1946824251769884485649460421430" } 
json=None</msg>
<msg timestamp="20210327 22:49:10.332" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:09.673" endtime="20210327 22:49:10.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:10.335" level="INFO">b52754052ffc0914</msg>
<status status="PASS" starttime="20210327 22:49:10.334" endtime="20210327 22:49:10.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:10.337" level="INFO">204</msg>
<status status="PASS" starttime="20210327 22:49:10.336" endtime="20210327 22:49:10.338"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:10.340" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:10.339" endtime="20210327 22:49:10.340"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:09.665" endtime="20210327 22:49:10.340"></status>
</kw>
<kw name="${index} IN RANGE [ 100 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:10.349" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:10.348" endtime="20210327 22:49:10.350"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:10.346" endtime="20210327 22:49:10.351"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:10.353" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:11.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:10.352" endtime="20210327 22:49:11.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:11.012" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:11.011" endtime="20210327 22:49:11.012"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:11.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:11.012" endtime="20210327 22:49:11.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:11.013" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:11.013" endtime="20210327 22:49:11.013"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:11.014" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:11.014" endtime="20210327 22:49:11.014"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:10.344" endtime="20210327 22:49:11.014"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:11.014" endtime="20210327 22:49:11.015"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:10.343" endtime="20210327 22:49:11.015"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:11.017" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:11.016" endtime="20210327 22:49:11.017"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:11.016" endtime="20210327 22:49:11.017"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:11.018" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:11.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:11.017" endtime="20210327 22:49:11.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:11.649" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:11.647" endtime="20210327 22:49:11.649"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:11.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:11.650" endtime="20210327 22:49:11.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:11.654" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:11.653" endtime="20210327 22:49:11.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:11.656" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:11.655" endtime="20210327 22:49:11.656"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:11.015" endtime="20210327 22:49:11.656"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:11.657" endtime="20210327 22:49:11.658"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:11.015" endtime="20210327 22:49:11.658"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:11.662" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:11.661" endtime="20210327 22:49:11.662"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:11.660" endtime="20210327 22:49:11.663"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:11.664" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:12.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:11.663" endtime="20210327 22:49:12.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:12.284" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:12.284" endtime="20210327 22:49:12.284"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:12.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:12.285" endtime="20210327 22:49:12.285"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:12.286" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:12.285" endtime="20210327 22:49:12.286"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:12.286" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:12.286" endtime="20210327 22:49:12.286"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:11.659" endtime="20210327 22:49:12.287"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:12.287" endtime="20210327 22:49:12.287"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:11.658" endtime="20210327 22:49:12.287"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:12.289" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:12.288" endtime="20210327 22:49:12.289"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:12.288" endtime="20210327 22:49:12.289"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:12.290" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:12.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:12.289" endtime="20210327 22:49:12.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:12.956" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:12.955" endtime="20210327 22:49:12.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:12.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:12.958" endtime="20210327 22:49:12.958"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:12.959" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:12.959" endtime="20210327 22:49:12.959"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:12.960" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:12.959" endtime="20210327 22:49:12.960"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:12.287" endtime="20210327 22:49:12.960"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:12.960" endtime="20210327 22:49:12.960"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:12.287" endtime="20210327 22:49:12.960"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:12.962" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:12.962" endtime="20210327 22:49:12.962"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:12.961" endtime="20210327 22:49:12.962"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:12.963" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:13.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:12.962" endtime="20210327 22:49:13.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:13.597" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:13.597" endtime="20210327 22:49:13.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:13.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:13.597" endtime="20210327 22:49:13.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:13.599" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:13.598" endtime="20210327 22:49:13.599"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:13.599" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:13.599" endtime="20210327 22:49:13.599"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:12.961" endtime="20210327 22:49:13.600"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:13.600" endtime="20210327 22:49:13.600"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:12.960" endtime="20210327 22:49:13.600"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:13.602" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:13.602" endtime="20210327 22:49:13.603"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:13.601" endtime="20210327 22:49:13.603"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:13.603" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:14.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:13.603" endtime="20210327 22:49:14.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:14.242" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:14.241" endtime="20210327 22:49:14.242"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:14.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:14.243" endtime="20210327 22:49:14.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:14.247" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:14.246" endtime="20210327 22:49:14.248"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:14.250" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:14.249" endtime="20210327 22:49:14.250"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:13.601" endtime="20210327 22:49:14.250"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:14.251" endtime="20210327 22:49:14.251"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:13.600" endtime="20210327 22:49:14.251"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:14.254" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:14.254" endtime="20210327 22:49:14.254"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:14.254" endtime="20210327 22:49:14.254"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:14.255" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:14.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:14.254" endtime="20210327 22:49:14.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:14.910" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:14.910" endtime="20210327 22:49:14.910"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:14.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:14.910" endtime="20210327 22:49:14.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:14.912" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:14.911" endtime="20210327 22:49:14.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:14.912" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:14.912" endtime="20210327 22:49:14.912"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:14.253" endtime="20210327 22:49:14.913"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:14.913" endtime="20210327 22:49:14.913"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:14.252" endtime="20210327 22:49:14.913"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:14.915" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:14.914" endtime="20210327 22:49:14.915"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:14.914" endtime="20210327 22:49:14.915"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:14.916" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:15.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:14.916" endtime="20210327 22:49:15.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:15.551" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:15.550" endtime="20210327 22:49:15.551"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:15.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:15.552" endtime="20210327 22:49:15.555"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:15.557" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:15.555" endtime="20210327 22:49:15.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:15.559" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:15.559" endtime="20210327 22:49:15.560"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:14.914" endtime="20210327 22:49:15.560"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:15.560" endtime="20210327 22:49:15.562"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:14.913" endtime="20210327 22:49:15.562"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:15.566" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:15.565" endtime="20210327 22:49:15.566"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:15.564" endtime="20210327 22:49:15.567"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:15.568" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:16.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:15.567" endtime="20210327 22:49:16.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:16.225" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:16.223" endtime="20210327 22:49:16.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:16.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:16.226" endtime="20210327 22:49:16.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:16.230" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:16.228" endtime="20210327 22:49:16.231"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:16.233" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:16.232" endtime="20210327 22:49:16.234"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:15.562" endtime="20210327 22:49:16.235"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:16.236" endtime="20210327 22:49:16.238"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:15.562" endtime="20210327 22:49:16.238"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:16.242" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:16.241" endtime="20210327 22:49:16.242"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:16.240" endtime="20210327 22:49:16.243"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:16.244" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:16.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:16.243" endtime="20210327 22:49:16.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:16.952" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:16.951" endtime="20210327 22:49:16.953"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:16.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:16.954" endtime="20210327 22:49:16.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:16.957" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:16.956" endtime="20210327 22:49:16.957"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:16.958" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:16.958" endtime="20210327 22:49:16.959"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:16.239" endtime="20210327 22:49:16.959"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:16.960" endtime="20210327 22:49:16.960"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:16.238" endtime="20210327 22:49:16.961"></status>
</kw>
<kw name="${index} = 10" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:16.964" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:16.964" endtime="20210327 22:49:16.965"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:16.963" endtime="20210327 22:49:16.965"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:16.966" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:17.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:16.965" endtime="20210327 22:49:17.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:17.620" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:17.618" endtime="20210327 22:49:17.620"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:17.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:17.621" endtime="20210327 22:49:17.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:17.626" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:17.624" endtime="20210327 22:49:17.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:17.628" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:17.627" endtime="20210327 22:49:17.628"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:16.961" endtime="20210327 22:49:17.629"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:17.630" endtime="20210327 22:49:17.631"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:16.961" endtime="20210327 22:49:17.631"></status>
</kw>
<kw name="${index} = 11" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:17.635" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:17.635" endtime="20210327 22:49:17.636"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:17.634" endtime="20210327 22:49:17.636"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:17.637" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:18.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:17.636" endtime="20210327 22:49:18.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:18.284" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:18.283" endtime="20210327 22:49:18.284"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:18.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:18.284" endtime="20210327 22:49:18.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:18.285" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:18.285" endtime="20210327 22:49:18.285"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:18.286" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:18.286" endtime="20210327 22:49:18.286"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:17.632" endtime="20210327 22:49:18.286"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:18.286" endtime="20210327 22:49:18.287"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:17.631" endtime="20210327 22:49:18.287"></status>
</kw>
<kw name="${index} = 12" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:18.288" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:18.288" endtime="20210327 22:49:18.289"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:18.288" endtime="20210327 22:49:18.289"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:18.289" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:18.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:18.289" endtime="20210327 22:49:18.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:18.946" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:18.946" endtime="20210327 22:49:18.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:18.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:18.946" endtime="20210327 22:49:18.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:18.947" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:18.947" endtime="20210327 22:49:18.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:18.948" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:18.948" endtime="20210327 22:49:18.948"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:18.287" endtime="20210327 22:49:18.948"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:18.948" endtime="20210327 22:49:18.948"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:18.287" endtime="20210327 22:49:18.948"></status>
</kw>
<kw name="${index} = 13" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:18.950" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:18.949" endtime="20210327 22:49:18.950"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:18.949" endtime="20210327 22:49:18.950"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:18.951" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:19.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:18.950" endtime="20210327 22:49:19.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:19.603" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:19.602" endtime="20210327 22:49:19.604"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:19.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:19.605" endtime="20210327 22:49:19.607"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:19.610" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:19.608" endtime="20210327 22:49:19.610"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:19.612" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:19.611" endtime="20210327 22:49:19.612"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:18.949" endtime="20210327 22:49:19.612"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:19.613" endtime="20210327 22:49:19.614"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:18.949" endtime="20210327 22:49:19.614"></status>
</kw>
<kw name="${index} = 14" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:19.617" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:19.617" endtime="20210327 22:49:19.618"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:19.616" endtime="20210327 22:49:19.618"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:19.619" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:20.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:19.618" endtime="20210327 22:49:20.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:20.237" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:20.235" endtime="20210327 22:49:20.237"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:20.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:20.238" endtime="20210327 22:49:20.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:20.242" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:20.240" endtime="20210327 22:49:20.242"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:20.244" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:20.243" endtime="20210327 22:49:20.245"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:19.615" endtime="20210327 22:49:20.245"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:20.246" endtime="20210327 22:49:20.247"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:19.614" endtime="20210327 22:49:20.248"></status>
</kw>
<kw name="${index} = 15" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:20.251" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:20.251" endtime="20210327 22:49:20.252"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:20.250" endtime="20210327 22:49:20.252"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:20.252" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:20.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:20.252" endtime="20210327 22:49:20.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:20.888" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9000000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:06.482175', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:20.887" endtime="20210327 22:49:20.888"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:20.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:20.889" endtime="20210327 22:49:20.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:20.893" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:20.891" endtime="20210327 22:49:20.893"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:20.895" level="INFO">${account_balance} = 9000000.00</msg>
<status status="PASS" starttime="20210327 22:49:20.894" endtime="20210327 22:49:20.895"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:20.248" endtime="20210327 22:49:20.896"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:20.896" endtime="20210327 22:49:20.897"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:20.248" endtime="20210327 22:49:20.897"></status>
</kw>
<kw name="${index} = 16" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:20.900" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:20.899" endtime="20210327 22:49:20.900"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:20.899" endtime="20210327 22:49:20.900"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:20.900" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:21.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:20.900" endtime="20210327 22:49:21.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:21.541" level="INFO">{'id': '0a202a0162c5480f8f1b6aef784e2507', 'holder': 'be9d86e04bfc4746b9de0bc7a90b0e90', 'balance': '9050000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '5508108313', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:05.093131', 'updated_at': '2021-03-28T01:49:22.421558', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/0a202a0162c5480f8f1b6aef784e2507', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:21.540" endtime="20210327 22:49:21.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:21.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:21.542" endtime="20210327 22:49:21.543"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:21.545" level="INFO">${account_balance} = 9050000.00</msg>
<status status="PASS" starttime="20210327 22:49:21.544" endtime="20210327 22:49:21.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:21.546" level="INFO">${account_balance} = 9050000.00</msg>
<status status="PASS" starttime="20210327 22:49:21.546" endtime="20210327 22:49:21.546"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:20.898" endtime="20210327 22:49:21.547"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<msg timestamp="20210327 22:49:21.548" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210327 22:49:21.547" endtime="20210327 22:49:21.549"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:20.897" endtime="20210327 22:49:21.549"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:10.343" endtime="20210327 22:49:21.549"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210327 22:49:21.553" level="INFO">${account_balance_final} = 9050000.00</msg>
<status status="PASS" starttime="20210327 22:49:21.552" endtime="20210327 22:49:21.553"></status>
</kw>
<kw name="validar crédito na account" library="asserts">
<arguments>
<arg>account_balance_initial=${account_balance_initial}</arg>
<arg>account_balance_final=${account_balance_final}</arg>
<arg>amount=${amount}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${account_balance_initial} + (${amount}/100)</arg>
</arguments>
<assign>
<var>${account_balance_actual}</var>
</assign>
<msg timestamp="20210327 22:49:21.557" level="INFO">${account_balance_actual} = 9050000.0</msg>
<status status="PASS" starttime="20210327 22:49:21.556" endtime="20210327 22:49:21.557"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${account_balance_final}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210327 22:49:21.557" level="INFO">${account_balance_final} = 9050000.0</msg>
<status status="PASS" starttime="20210327 22:49:21.557" endtime="20210327 22:49:21.557"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${account_balance_final}</arg>
<arg>${account_balance_actual}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:21.557" endtime="20210327 22:49:21.558"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:21.555" endtime="20210327 22:49:21.558"></status>
</kw>
<doc>Receber PIX com sucesso</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 22:49:01.114" endtime="20210327 22:49:21.558" critical="yes"></status>
</test>
<test id="s1-s2-s1-t2" name="Cenário: Receber PIX do destinatário com o mesmo documento do remetente">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9908064892484490ab5d7eb832f385ea</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:21.560" level="INFO">${account_external_key} = 9908064892484490ab5d7eb832f385ea</msg>
<status status="PASS" starttime="20210327 22:49:21.560" endtime="20210327 22:49:21.560"></status>
</kw>
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:21.562" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:21.561" endtime="20210327 22:49:21.562"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:21.561" endtime="20210327 22:49:21.562"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:21.563" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:22.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:21.562" endtime="20210327 22:49:22.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.192" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:22.190" endtime="20210327 22:49:22.192"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:22.193" endtime="20210327 22:49:22.195"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:22.197" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:22.195" endtime="20210327 22:49:22.197"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.198" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:22.198" endtime="20210327 22:49:22.198"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:21.561" endtime="20210327 22:49:22.199"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_initial}</var>
</assign>
<msg timestamp="20210327 22:49:22.201" level="INFO">${account_balance_initial} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:22.201" endtime="20210327 22:49:22.202"></status>
</kw>
<kw name="gerar end_to_end_id" library="end_to_end_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:22.204" level="INFO">${date} = 2021-03-27 22:49:22.204053</msg>
<status status="PASS" starttime="20210327 22:49:22.204" endtime="20210327 22:49:22.204"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:22.205" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:22.205" endtime="20210327 22:49:22.206"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:22.207" level="INFO">${random_number_end_to_end_id} = 17754431758</msg>
<status status="PASS" starttime="20210327 22:49:22.206" endtime="20210327 22:49:22.207"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:22.207" level="INFO">${end_to_end_id} = E1946824220210327224917754431758</msg>
<status status="PASS" starttime="20210327 22:49:22.207" endtime="20210327 22:49:22.208"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.208" level="INFO">${end_to_end_id} = E1946824220210327224917754431758</msg>
<status status="PASS" starttime="20210327 22:49:22.208" endtime="20210327 22:49:22.208"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.203" endtime="20210327 22:49:22.208"></status>
</kw>
<kw name="gerar message_id" library="message_id_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:22.209" level="INFO">${date} = 2021-03-27 22:49:22.209035</msg>
<status status="PASS" starttime="20210327 22:49:22.209" endtime="20210327 22:49:22.209"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:22.209" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:22.209" endtime="20210327 22:49:22.209"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210327 22:49:22.210" level="INFO">${random_number_message_id} = 10738489446816073231878</msg>
<status status="PASS" starttime="20210327 22:49:22.210" endtime="20210327 22:49:22.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:22.210" level="INFO">${message_id} = M1946824210738489446816073231878</msg>
<status status="PASS" starttime="20210327 22:49:22.210" endtime="20210327 22:49:22.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.211" level="INFO">${message_id} = M1946824210738489446816073231878</msg>
<status status="PASS" starttime="20210327 22:49:22.210" endtime="20210327 22:49:22.211"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.209" endtime="20210327 22:49:22.211"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>amount=5000000</arg>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=4604866635</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=001</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=42808422644</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:22.212" level="INFO">${date} = 2021-03-27 22:49:22.212037</msg>
<status status="PASS" starttime="20210327 22:49:22.212" endtime="20210327 22:49:22.212"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:22.212" level="INFO">${datetime} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:49:22.212" endtime="20210327 22:49:22.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.213" level="INFO">${amount} = 5000000</msg>
<status status="PASS" starttime="20210327 22:49:22.213" endtime="20210327 22:49:22.213"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:22.214" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:22.213" endtime="20210327 22:49:22.214"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.213" endtime="20210327 22:49:22.214"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:22.214" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:22.214" endtime="20210327 22:49:22.214"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": ${amount},</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "0243882974",</arg>
<arg>"psp": "17192451",</arg>
<arg>"routing_number": "0500",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "42808422644",</arg>
<arg>"identification": "Teste de Recebimento de PIX",</arg>
<arg>"name": "Massa ITI PFNAUmNNO"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:22.215" level="INFO">${body} = { "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224917754431758", "message_id": "M1946824210738489446816073231878", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210327 22:49:22.215" endtime="20210327 22:49:22.215"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:22.216" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224917754431758", "message_id": "M1946824210738489446816073231878", "receiver": { "account_details": { "number": "4604866635", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "42808422644" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "0243882974", "psp": "17192451", "routing_number": "0500", "type": "cacc" }, "document": "42808422644", "identification": "Teste de Recebimento de PIX", "name": "Massa ITI PFNAUmNNO" } } 
json=None</msg>
<msg timestamp="20210327 22:49:22.844" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:22.215" endtime="20210327 22:49:22.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.847" level="INFO">{'id': '73259319f4704a7097ada7cf63f8925f', 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210327 22:49:22.846" endtime="20210327 22:49:22.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.851" level="INFO">737ff8d75e9c98b2</msg>
<status status="PASS" starttime="20210327 22:49:22.849" endtime="20210327 22:49:22.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.852" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:22.851" endtime="20210327 22:49:22.854"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.856" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:22.855" endtime="20210327 22:49:22.857"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.211" endtime="20210327 22:49:22.858"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao receber PIX</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:22.861" endtime="20210327 22:49:22.863"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.860" endtime="20210327 22:49:22.863"></status>
</kw>
<kw name="confirmar pagamento pix admin" library="pix_admin_confirm_payment">
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:22.867" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:22.866" endtime="20210327 22:49:22.867"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.866" endtime="20210327 22:49:22.868"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20210327 22:49:22.869" level="INFO">${random_number} = 22482390074003521206546</msg>
<status status="PASS" starttime="20210327 22:49:22.868" endtime="20210327 22:49:22.869"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:22.869" level="INFO">${message_id} = M1946824222482390074003521206546</msg>
<status status="PASS" starttime="20210327 22:49:22.869" endtime="20210327 22:49:22.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:22.870" level="INFO">M1946824222482390074003521206546</msg>
<status status="PASS" starttime="20210327 22:49:22.870" endtime="20210327 22:49:22.870"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:22.871" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:22.871" endtime="20210327 22:49:22.871"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"instruction_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:22.871" level="INFO">${body} = { "instruction_id": "E1946824220210327224917754431758", "message_id": "M1946824222482390074003521206546" }</msg>
<status status="PASS" starttime="20210327 22:49:22.871" endtime="20210327 22:49:22.871"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix/${end_to_end_id}/confirmation</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:22.871" level="INFO">POST Request using : uri=/admin/internal_operation/pix/E1946824220210327224917754431758/confirmation, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "instruction_id": "E1946824220210327224917754431758", "message_id": "M1946824222482390074003521206546" } 
json=None</msg>
<msg timestamp="20210327 22:49:23.565" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:22.871" endtime="20210327 22:49:23.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:23.566" level="INFO">e382748af36ba103</msg>
<status status="PASS" starttime="20210327 22:49:23.565" endtime="20210327 22:49:23.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:23.566" level="INFO">204</msg>
<status status="PASS" starttime="20210327 22:49:23.566" endtime="20210327 22:49:23.566"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:23.567" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:23.567" endtime="20210327 22:49:23.567"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:22.864" endtime="20210327 22:49:23.567"></status>
</kw>
<kw name="${index} IN RANGE [ 100 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:23.569" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:23.569" endtime="20210327 22:49:23.569"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:23.568" endtime="20210327 22:49:23.569"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:23.570" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:24.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:23.570" endtime="20210327 22:49:24.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:24.206" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:24.204" endtime="20210327 22:49:24.206"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:24.208" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:24.207" endtime="20210327 22:49:24.208"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:24.211" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:24.209" endtime="20210327 22:49:24.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:24.213" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:24.213" endtime="20210327 22:49:24.213"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:23.568" endtime="20210327 22:49:24.214"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:24.214" endtime="20210327 22:49:24.215"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:23.568" endtime="20210327 22:49:24.215"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:24.218" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:24.217" endtime="20210327 22:49:24.218"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:24.217" endtime="20210327 22:49:24.218"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:24.218" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:24.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:24.218" endtime="20210327 22:49:24.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:24.844" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:24.843" endtime="20210327 22:49:24.844"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:24.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:24.844" endtime="20210327 22:49:24.844"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:24.845" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:24.845" endtime="20210327 22:49:24.845"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:24.846" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:24.846" endtime="20210327 22:49:24.846"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:24.216" endtime="20210327 22:49:24.846"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:24.846" endtime="20210327 22:49:24.847"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:24.215" endtime="20210327 22:49:24.847"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:24.848" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:24.848" endtime="20210327 22:49:24.849"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:24.848" endtime="20210327 22:49:24.849"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:24.849" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:25.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:24.849" endtime="20210327 22:49:25.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:25.485" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:25.485" endtime="20210327 22:49:25.485"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:25.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:25.486" endtime="20210327 22:49:25.486"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:25.487" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:25.486" endtime="20210327 22:49:25.487"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:25.487" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:25.487" endtime="20210327 22:49:25.487"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:24.847" endtime="20210327 22:49:25.488"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:25.488" endtime="20210327 22:49:25.488"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:24.847" endtime="20210327 22:49:25.488"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:25.490" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:25.489" endtime="20210327 22:49:25.490"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:25.489" endtime="20210327 22:49:25.490"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:25.491" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:26.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:25.490" endtime="20210327 22:49:26.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:26.131" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:26.130" endtime="20210327 22:49:26.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:26.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:26.131" endtime="20210327 22:49:26.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:26.132" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:26.132" endtime="20210327 22:49:26.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:26.133" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:26.133" endtime="20210327 22:49:26.133"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:25.488" endtime="20210327 22:49:26.133"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:26.133" endtime="20210327 22:49:26.134"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:25.488" endtime="20210327 22:49:26.134"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:26.135" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:26.135" endtime="20210327 22:49:26.136"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:26.135" endtime="20210327 22:49:26.136"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:26.136" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:26.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:26.136" endtime="20210327 22:49:26.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:26.784" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:26.782" endtime="20210327 22:49:26.784"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:26.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:26.785" endtime="20210327 22:49:26.787"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:26.789" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:26.788" endtime="20210327 22:49:26.789"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:26.790" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:26.790" endtime="20210327 22:49:26.790"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:26.134" endtime="20210327 22:49:26.791"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:26.791" endtime="20210327 22:49:26.792"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:26.134" endtime="20210327 22:49:26.792"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:26.795" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:26.794" endtime="20210327 22:49:26.795"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:26.793" endtime="20210327 22:49:26.795"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:26.796" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:27.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:26.796" endtime="20210327 22:49:27.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:27.414" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:27.414" endtime="20210327 22:49:27.414"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:27.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:27.415" endtime="20210327 22:49:27.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:27.416" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:27.415" endtime="20210327 22:49:27.416"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:27.416" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:27.416" endtime="20210327 22:49:27.416"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:26.792" endtime="20210327 22:49:27.416"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:27.416" endtime="20210327 22:49:27.417"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:26.792" endtime="20210327 22:49:27.417"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:27.418" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:27.418" endtime="20210327 22:49:27.418"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:27.417" endtime="20210327 22:49:27.418"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:27.419" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:28.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:27.419" endtime="20210327 22:49:28.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:28.060" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:28.059" endtime="20210327 22:49:28.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:28.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:28.060" endtime="20210327 22:49:28.060"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:28.060" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:28.060" endtime="20210327 22:49:28.060"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:28.061" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:28.060" endtime="20210327 22:49:28.061"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:27.417" endtime="20210327 22:49:28.061"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:28.061" endtime="20210327 22:49:28.061"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:27.417" endtime="20210327 22:49:28.061"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:28.063" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:28.062" endtime="20210327 22:49:28.063"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:28.062" endtime="20210327 22:49:28.063"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:28.064" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:28.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:28.063" endtime="20210327 22:49:28.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:28.699" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:28.699" endtime="20210327 22:49:28.700"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:28.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:28.701" endtime="20210327 22:49:28.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:28.704" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:28.704" endtime="20210327 22:49:28.704"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:28.706" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:28.705" endtime="20210327 22:49:28.706"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:28.062" endtime="20210327 22:49:28.706"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:28.707" endtime="20210327 22:49:28.707"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:28.061" endtime="20210327 22:49:28.707"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:28.708" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:28.708" endtime="20210327 22:49:28.709"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:28.708" endtime="20210327 22:49:28.709"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:28.709" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:29.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:28.709" endtime="20210327 22:49:29.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:29.341" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:29.340" endtime="20210327 22:49:29.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:29.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:29.343" endtime="20210327 22:49:29.344"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:29.347" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:29.345" endtime="20210327 22:49:29.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:29.348" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:29.348" endtime="20210327 22:49:29.348"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:28.708" endtime="20210327 22:49:29.349"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:29.349" endtime="20210327 22:49:29.350"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:28.707" endtime="20210327 22:49:29.350"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:29.352" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:29.352" endtime="20210327 22:49:29.352"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:29.351" endtime="20210327 22:49:29.352"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:29.352" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:29.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:29.352" endtime="20210327 22:49:29.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:29.992" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:29.992" endtime="20210327 22:49:29.992"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:29.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:29.993" endtime="20210327 22:49:29.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:29.994" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:29.993" endtime="20210327 22:49:29.994"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:29.994" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:29.994" endtime="20210327 22:49:29.994"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:29.351" endtime="20210327 22:49:29.994"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:29.995" endtime="20210327 22:49:29.995"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:29.350" endtime="20210327 22:49:29.995"></status>
</kw>
<kw name="${index} = 10" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:29.997" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:29.996" endtime="20210327 22:49:29.997"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:29.996" endtime="20210327 22:49:29.997"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:29.997" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:30.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:29.997" endtime="20210327 22:49:30.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:30.664" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:30.662" endtime="20210327 22:49:30.665"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:30.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:30.665" endtime="20210327 22:49:30.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:30.669" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:30.667" endtime="20210327 22:49:30.670"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:30.672" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:30.671" endtime="20210327 22:49:30.672"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:29.995" endtime="20210327 22:49:30.673"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:30.674" endtime="20210327 22:49:30.675"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:29.995" endtime="20210327 22:49:30.676"></status>
</kw>
<kw name="${index} = 11" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:30.679" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:30.678" endtime="20210327 22:49:30.679"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:30.677" endtime="20210327 22:49:30.680"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:30.681" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:31.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:30.680" endtime="20210327 22:49:31.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:31.317" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:31.316" endtime="20210327 22:49:31.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:31.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:31.319" endtime="20210327 22:49:31.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:31.323" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:31.321" endtime="20210327 22:49:31.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:31.324" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:31.324" endtime="20210327 22:49:31.324"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:30.676" endtime="20210327 22:49:31.325"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:31.325" endtime="20210327 22:49:31.326"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:30.676" endtime="20210327 22:49:31.326"></status>
</kw>
<kw name="${index} = 12" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:31.327" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:31.327" endtime="20210327 22:49:31.327"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:31.327" endtime="20210327 22:49:31.327"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:31.328" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:31.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:31.328" endtime="20210327 22:49:31.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:31.963" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:31.963" endtime="20210327 22:49:31.963"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:31.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:31.963" endtime="20210327 22:49:31.964"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:31.964" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:31.964" endtime="20210327 22:49:31.964"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:31.965" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:31.965" endtime="20210327 22:49:31.965"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:31.326" endtime="20210327 22:49:31.965"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:31.965" endtime="20210327 22:49:31.965"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:31.326" endtime="20210327 22:49:31.965"></status>
</kw>
<kw name="${index} = 13" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:31.967" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:31.966" endtime="20210327 22:49:31.967"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:31.966" endtime="20210327 22:49:31.967"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:31.967" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:32.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:31.967" endtime="20210327 22:49:32.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:32.588" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:32.586" endtime="20210327 22:49:32.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:32.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:32.589" endtime="20210327 22:49:32.590"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:32.591" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:32.590" endtime="20210327 22:49:32.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:32.593" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:32.592" endtime="20210327 22:49:32.593"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:31.966" endtime="20210327 22:49:32.593"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:32.594" endtime="20210327 22:49:32.594"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:31.965" endtime="20210327 22:49:32.594"></status>
</kw>
<kw name="${index} = 14" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:32.596" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:32.595" endtime="20210327 22:49:32.596"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:32.595" endtime="20210327 22:49:32.596"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:32.596" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:33.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:32.596" endtime="20210327 22:49:33.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:33.234" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:33.234" endtime="20210327 22:49:33.234"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:33.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:33.235" endtime="20210327 22:49:33.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:33.236" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:33.235" endtime="20210327 22:49:33.236"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:33.236" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:33.236" endtime="20210327 22:49:33.236"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:32.595" endtime="20210327 22:49:33.236"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:33.237" endtime="20210327 22:49:33.237"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:32.594" endtime="20210327 22:49:33.237"></status>
</kw>
<kw name="${index} = 15" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:33.238" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:33.238" endtime="20210327 22:49:33.239"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:33.238" endtime="20210327 22:49:33.239"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:33.239" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:33.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:33.239" endtime="20210327 22:49:33.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:33.850" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:33.848" endtime="20210327 22:49:33.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:33.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:33.851" endtime="20210327 22:49:33.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:33.855" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:33.853" endtime="20210327 22:49:33.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:33.856" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:33.855" endtime="20210327 22:49:33.856"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:33.237" endtime="20210327 22:49:33.857"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:33.857" endtime="20210327 22:49:33.858"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:33.237" endtime="20210327 22:49:33.858"></status>
</kw>
<kw name="${index} = 16" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:33.860" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:33.860" endtime="20210327 22:49:33.861"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:33.860" endtime="20210327 22:49:33.861"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:33.861" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:34.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:33.861" endtime="20210327 22:49:34.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:34.485" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:34.484" endtime="20210327 22:49:34.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:34.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:34.487" endtime="20210327 22:49:34.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:34.489" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:34.488" endtime="20210327 22:49:34.490"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:34.491" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:34.490" endtime="20210327 22:49:34.491"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:33.859" endtime="20210327 22:49:34.491"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:34.492" endtime="20210327 22:49:34.493"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:33.858" endtime="20210327 22:49:34.493"></status>
</kw>
<kw name="${index} = 17" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:34.496" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:34.496" endtime="20210327 22:49:34.497"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:34.495" endtime="20210327 22:49:34.497"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:34.498" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:35.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:34.498" endtime="20210327 22:49:35.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:35.149" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:35.147" endtime="20210327 22:49:35.149"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:35.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:35.150" endtime="20210327 22:49:35.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:35.154" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:35.153" endtime="20210327 22:49:35.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:35.155" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:35.154" endtime="20210327 22:49:35.155"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:34.494" endtime="20210327 22:49:35.156"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:35.156" endtime="20210327 22:49:35.157"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:34.493" endtime="20210327 22:49:35.157"></status>
</kw>
<kw name="${index} = 18" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:35.159" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:35.158" endtime="20210327 22:49:35.159"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:35.158" endtime="20210327 22:49:35.159"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:35.159" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:35.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:35.159" endtime="20210327 22:49:35.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:35.784" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '500000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:48:00.770681', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:35.783" endtime="20210327 22:49:35.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:35.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:35.786" endtime="20210327 22:49:35.787"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:35.791" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:35.788" endtime="20210327 22:49:35.791"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:35.793" level="INFO">${account_balance} = 500000.00</msg>
<status status="PASS" starttime="20210327 22:49:35.792" endtime="20210327 22:49:35.793"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:35.158" endtime="20210327 22:49:35.793"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:35.794" endtime="20210327 22:49:35.795"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:35.157" endtime="20210327 22:49:35.795"></status>
</kw>
<kw name="${index} = 19" type="foritem">
<kw name="buscar account balance" library="account_get_balance">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:35.799" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:35.798" endtime="20210327 22:49:35.799"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:35.797" endtime="20210327 22:49:35.799"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/accounts/${account_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:35.799" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:36.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:35.799" endtime="20210327 22:49:36.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:36.423" level="INFO">{'id': '9908064892484490ab5d7eb832f385ea', 'holder': '68d1019f26774640a85e2f2726983553', 'balance': '550000.00', 'currency': 'BRL', 'routing_number': '001', 'number': '4604866635', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:04:04.640788', 'updated_at': '2021-03-28T01:49:37.363624', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9908064892484490ab5d7eb832f385ea', 'resource': 'payment_account'}</msg>
<status status="PASS" starttime="20210327 22:49:36.421" endtime="20210327 22:49:36.423"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:36.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:36.424" endtime="20210327 22:49:36.425"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["balance"]}</arg>
</arguments>
<assign>
<var>${account_balance}</var>
</assign>
<msg timestamp="20210327 22:49:36.429" level="INFO">${account_balance} = 550000.00</msg>
<status status="PASS" starttime="20210327 22:49:36.426" endtime="20210327 22:49:36.430"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<msg timestamp="20210327 22:49:36.432" level="INFO">${account_balance} = 550000.00</msg>
<status status="PASS" starttime="20210327 22:49:36.431" endtime="20210327 22:49:36.432"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:35.796" endtime="20210327 22:49:36.433"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${account_balance}' != '${account_balance_initial}'</arg>
</arguments>
<msg timestamp="20210327 22:49:36.434" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210327 22:49:36.434" endtime="20210327 22:49:36.435"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:35.795" endtime="20210327 22:49:36.435"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:23.568" endtime="20210327 22:49:36.435"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_balance}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210327 22:49:36.438" level="INFO">${account_balance_final} = 550000.00</msg>
<status status="PASS" starttime="20210327 22:49:36.437" endtime="20210327 22:49:36.438"></status>
</kw>
<kw name="validar crédito na account" library="asserts">
<arguments>
<arg>account_balance_initial=${account_balance_initial}</arg>
<arg>account_balance_final=${account_balance_final}</arg>
<arg>amount=${amount}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${account_balance_initial} + (${amount}/100)</arg>
</arguments>
<assign>
<var>${account_balance_actual}</var>
</assign>
<msg timestamp="20210327 22:49:36.441" level="INFO">${account_balance_actual} = 550000.0</msg>
<status status="PASS" starttime="20210327 22:49:36.440" endtime="20210327 22:49:36.441"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${account_balance_final}</arg>
</arguments>
<assign>
<var>${account_balance_final}</var>
</assign>
<msg timestamp="20210327 22:49:36.441" level="INFO">${account_balance_final} = 550000.0</msg>
<status status="PASS" starttime="20210327 22:49:36.441" endtime="20210327 22:49:36.441"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${account_balance_final}</arg>
<arg>${account_balance_actual}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:36.442" endtime="20210327 22:49:36.442"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:36.439" endtime="20210327 22:49:36.442"></status>
</kw>
<doc>A conta que realiza o envio e que recebe o PIX possuem o mesmo documento (CPF ou CNPJ). O PIX deverá ser recebido com sucesso.</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 22:49:21.559" endtime="20210327 22:49:36.442" critical="yes"></status>
</test>
<test id="s1-s2-s1-t3" name="Cenário: Receber pix sem transaction id">
<kw name="gerar end_to_end_id" library="end_to_end_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:36.445" level="INFO">${date} = 2021-03-27 22:49:36.443882</msg>
<status status="PASS" starttime="20210327 22:49:36.444" endtime="20210327 22:49:36.445"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:36.445" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:36.445" endtime="20210327 22:49:36.445"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:36.445" level="INFO">${random_number_end_to_end_id} = 57791521796</msg>
<status status="PASS" starttime="20210327 22:49:36.445" endtime="20210327 22:49:36.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:36.446" level="INFO">${end_to_end_id} = E1946824220210327224957791521796</msg>
<status status="PASS" starttime="20210327 22:49:36.446" endtime="20210327 22:49:36.446"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:36.446" level="INFO">${end_to_end_id} = E1946824220210327224957791521796</msg>
<status status="PASS" starttime="20210327 22:49:36.446" endtime="20210327 22:49:36.446"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:36.444" endtime="20210327 22:49:36.446"></status>
</kw>
<kw name="gerar message_id" library="message_id_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:36.448" level="INFO">${date} = 2021-03-27 22:49:36.447887</msg>
<status status="PASS" starttime="20210327 22:49:36.448" endtime="20210327 22:49:36.448"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:36.448" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:36.448" endtime="20210327 22:49:36.448"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210327 22:49:36.449" level="INFO">${random_number_message_id} = 54897392904268193564225</msg>
<status status="PASS" starttime="20210327 22:49:36.449" endtime="20210327 22:49:36.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:36.449" level="INFO">${message_id} = M1946824254897392904268193564225</msg>
<status status="PASS" starttime="20210327 22:49:36.449" endtime="20210327 22:49:36.449"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:36.449" level="INFO">${message_id} = M1946824254897392904268193564225</msg>
<status status="PASS" starttime="20210327 22:49:36.449" endtime="20210327 22:49:36.450"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:36.447" endtime="20210327 22:49:36.450"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>amount=5000000</arg>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=1853017169</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=001</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=00734275196</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:36.451" level="INFO">${date} = 2021-03-27 22:49:36.450920</msg>
<status status="PASS" starttime="20210327 22:49:36.451" endtime="20210327 22:49:36.451"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:36.452" level="INFO">${datetime} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:49:36.451" endtime="20210327 22:49:36.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:49:36.452" level="INFO">${amount} = 5000000</msg>
<status status="PASS" starttime="20210327 22:49:36.452" endtime="20210327 22:49:36.452"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:36.453" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:36.452" endtime="20210327 22:49:36.453"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:36.452" endtime="20210327 22:49:36.453"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:36.453" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:36.453" endtime="20210327 22:49:36.453"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": ${amount},</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "0243882974",</arg>
<arg>"psp": "17192451",</arg>
<arg>"routing_number": "0500",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "42808422644",</arg>
<arg>"identification": "Teste de Recebimento de PIX",</arg>
<arg>"name": "Massa ITI PFNAUmNNO"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:36.454" level="INFO">${body} = { "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224957791521796", "message_id": "M1946824254897392904268193564225", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210327 22:49:36.454" endtime="20210327 22:49:36.454"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:36.455" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224957791521796", "message_id": "M1946824254897392904268193564225", "receiver": { "account_details": { "number": "1853017169", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "00734275196" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "0243882974", "psp": "17192451", "routing_number": "0500", "type": "cacc" }, "document": "42808422644", "identification": "Teste de Recebimento de PIX", "name": "Massa ITI PFNAUmNNO" } } 
json=None</msg>
<msg timestamp="20210327 22:49:37.086" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:36.455" endtime="20210327 22:49:37.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.089" level="INFO">{'code': 4002, 'status': 'precondition_failed', 'type': 'precondition_failed', 'message': 'Denied by missing transactionId', 'category': 'business', 'status_code': 412}</msg>
<status status="PASS" starttime="20210327 22:49:37.087" endtime="20210327 22:49:37.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.091" level="INFO">d4e77c25cde33201</msg>
<status status="PASS" starttime="20210327 22:49:37.089" endtime="20210327 22:49:37.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.093" level="INFO">412</msg>
<status status="PASS" starttime="20210327 22:49:37.092" endtime="20210327 22:49:37.093"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.095" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.094" endtime="20210327 22:49:37.096"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:36.450" endtime="20210327 22:49:37.096"></status>
</kw>
<kw name="validar precondition failed" library="precondition_failed">
<arguments>
<arg>message=Denied by missing transactionId</arg>
<arg>message_code=4002</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response precondition failed</arg>
</arguments>
<msg timestamp="20210327 22:49:37.099" level="INFO">Validando response precondition failed</msg>
<status status="PASS" starttime="20210327 22:49:37.099" endtime="20210327 22:49:37.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>412</arg>
</arguments>
<msg timestamp="20210327 22:49:37.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.100" endtime="20210327 22:49:37.101"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>precondition_failed</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:37.102" endtime="20210327 22:49:37.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:37.103" endtime="20210327 22:49:37.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.104" endtime="20210327 22:49:37.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>412</arg>
</arguments>
<msg timestamp="20210327 22:49:37.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.105" endtime="20210327 22:49:37.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:37.107" endtime="20210327 22:49:37.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>precondition_failed</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:37.108" endtime="20210327 22:49:37.109"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.098" endtime="20210327 22:49:37.109"></status>
</kw>
<doc>Não permitir o recebimento de PIX sem o transaction id</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 22:49:36.443" endtime="20210327 22:49:37.110" critical="yes"></status>
</test>
<test id="s1-s2-s1-t4" name="Cenário: Receber pagamento PIX com end to end já recebido">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=phone</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 22:49:37.112" level="INFO">${phone} = 85669821</msg>
<status status="PASS" starttime="20210327 22:49:37.112" endtime="20210327 22:49:37.112"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 22:49:37.113" level="INFO">${phone_pix} = +5521985669821</msg>
<status status="PASS" starttime="20210327 22:49:37.113" endtime="20210327 22:49:37.113"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.113" level="INFO">${phone_pix} = +5521985669821</msg>
<status status="PASS" starttime="20210327 22:49:37.113" endtime="20210327 22:49:37.113"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 22:49:37.114" level="INFO">${email_pix} = sophiaviana@costa.net</msg>
<status status="PASS" starttime="20210327 22:49:37.113" endtime="20210327 22:49:37.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.114" level="INFO">${email_pix} = sophiaviana@costa.net</msg>
<status status="PASS" starttime="20210327 22:49:37.114" endtime="20210327 22:49:37.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:37.115" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:37.115" endtime="20210327 22:49:37.116"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.115" endtime="20210327 22:49:37.116"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:37.116" level="INFO">${national_registration} = 391.250.648-51</msg>
<status status="PASS" starttime="20210327 22:49:37.116" endtime="20210327 22:49:37.116"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:37.117" level="INFO">${national_registration} = 391250648-51</msg>
<status status="PASS" starttime="20210327 22:49:37.116" endtime="20210327 22:49:37.117"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:37.117" level="INFO">${national_registration} = 39125064851</msg>
<status status="PASS" starttime="20210327 22:49:37.117" endtime="20210327 22:49:37.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.117" level="INFO">${national_registration} = 39125064851</msg>
<status status="PASS" starttime="20210327 22:49:37.117" endtime="20210327 22:49:37.117"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 22:49:37.118" level="INFO">${identity_card} = 851426037</msg>
<status status="PASS" starttime="20210327 22:49:37.118" endtime="20210327 22:49:37.118"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.118" level="INFO">${identity_card} = 851426037</msg>
<status status="PASS" starttime="20210327 22:49:37.118" endtime="20210327 22:49:37.118"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:37.119" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:37.119" endtime="20210327 22:49:37.120"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.119" endtime="20210327 22:49:37.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.120" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 22:49:37.120" endtime="20210327 22:49:37.120"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.121" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:49:37.121" endtime="20210327 22:49:37.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:37.121" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:37.121" endtime="20210327 22:49:37.121"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:37.122" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "39125064851", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 22:49:37.121" endtime="20210327 22:49:37.122"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:37.122" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "39125064851", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "851426037", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 22:49:37.845" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.122" endtime="20210327 22:49:37.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.845" level="INFO">{'id': 'e36c9d36d9064204af3b2d6cb157a30b', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T22:49:38.938233', 'updated_at': '2021-03-27T22:49:38.938235', 'type': 'individual', 'national_registration': '39125064851', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '851426037', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:37.845" endtime="20210327 22:49:37.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.846" level="INFO">b7cb153803fab428</msg>
<status status="PASS" starttime="20210327 22:49:37.846" endtime="20210327 22:49:37.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.846" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "39125064851", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "851426037", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 22:49:37.846" endtime="20210327 22:49:37.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.848" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.847" endtime="20210327 22:49:37.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:37.848" level="INFO">${holder_external_key} = e36c9d36d9064204af3b2d6cb157a30b</msg>
<status status="PASS" starttime="20210327 22:49:37.848" endtime="20210327 22:49:37.848"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.848" level="INFO">${holder_external_key} = e36c9d36d9064204af3b2d6cb157a30b</msg>
<status status="PASS" starttime="20210327 22:49:37.848" endtime="20210327 22:49:37.848"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.118" endtime="20210327 22:49:37.848"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:49:37.849" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:49:37.848" endtime="20210327 22:49:37.849"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:37.849" endtime="20210327 22:49:37.850"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.849" endtime="20210327 22:49:37.850"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:37.851" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:37.850" endtime="20210327 22:49:37.851"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:37.851" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 22:49:37.851" endtime="20210327 22:49:37.851"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:37.852" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 22:49:38.168" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:37.851" endtime="20210327 22:49:38.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.171" level="INFO">{'id': '04828fbd98304f708b45dda2a1d8ba26', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/phones/04828fbd98304f708b45dda2a1d8ba26', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:38.170" endtime="20210327 22:49:38.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.173" level="INFO">4c3a69de642105ba</msg>
<status status="PASS" starttime="20210327 22:49:38.172" endtime="20210327 22:49:38.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.175" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:38.174" endtime="20210327 22:49:38.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:38.177" level="INFO">${phone_external_key} = 04828fbd98304f708b45dda2a1d8ba26</msg>
<status status="PASS" starttime="20210327 22:49:38.175" endtime="20210327 22:49:38.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.178" level="INFO">${phone_external_key} = 04828fbd98304f708b45dda2a1d8ba26</msg>
<status status="PASS" starttime="20210327 22:49:38.177" endtime="20210327 22:49:38.178"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.850" endtime="20210327 22:49:38.178"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:38.179" endtime="20210327 22:49:38.179"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:38.178" endtime="20210327 22:49:38.179"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:38.180" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:38.180" endtime="20210327 22:49:38.180"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:38.181" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 22:49:38.180" endtime="20210327 22:49:38.181"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:38.181" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 22:49:38.408" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:38.181" endtime="20210327 22:49:38.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.408" level="INFO">{'id': '9074caec7eb4481daaaf4843de2544be', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/addresses/9074caec7eb4481daaaf4843de2544be', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:38.408" endtime="20210327 22:49:38.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.409" level="INFO">9ef09dd2ff70c75a</msg>
<status status="PASS" starttime="20210327 22:49:38.408" endtime="20210327 22:49:38.409"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.409" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:38.409" endtime="20210327 22:49:38.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:38.410" level="INFO">${address_external_key} = 9074caec7eb4481daaaf4843de2544be</msg>
<status status="PASS" starttime="20210327 22:49:38.409" endtime="20210327 22:49:38.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.410" level="INFO">${address_external_key} = 9074caec7eb4481daaaf4843de2544be</msg>
<status status="PASS" starttime="20210327 22:49:38.410" endtime="20210327 22:49:38.410"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:38.179" endtime="20210327 22:49:38.411"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:38.412" endtime="20210327 22:49:38.412"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:38.411" endtime="20210327 22:49:38.412"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.413" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 22:49:38.412" endtime="20210327 22:49:38.413"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:38.413" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:38.413" endtime="20210327 22:49:38.413"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:38.414" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:38.415" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:38.413" endtime="20210327 22:49:38.415"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:38.416" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:38.719" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:38.415" endtime="20210327 22:49:38.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.722" level="INFO">{'id': 'c791babe01df4ccf955abbdc248e47af', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents/c791babe01df4ccf955abbdc248e47af', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents/c791babe01df4ccf955abbdc248e47af/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:38.721" endtime="20210327 22:49:38.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.725" level="INFO">762bd53d5a6cd5a4</msg>
<status status="PASS" starttime="20210327 22:49:38.724" endtime="20210327 22:49:38.725"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.726" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:38.726" endtime="20210327 22:49:38.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:38.728" level="INFO">${document_external_key} = c791babe01df4ccf955abbdc248e47af</msg>
<status status="PASS" starttime="20210327 22:49:38.727" endtime="20210327 22:49:38.729"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.730" level="INFO">${document_external_key} = c791babe01df4ccf955abbdc248e47af</msg>
<status status="PASS" starttime="20210327 22:49:38.729" endtime="20210327 22:49:38.730"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:38.412" endtime="20210327 22:49:38.730"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:38.732" endtime="20210327 22:49:38.733"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:38.731" endtime="20210327 22:49:38.733"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:38.735" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 22:49:38.734" endtime="20210327 22:49:38.735"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:38.736" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:38.735" endtime="20210327 22:49:38.736"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:38.737" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:38.739" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:38.736" endtime="20210327 22:49:38.739"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:38.740" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:39.045" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:38.739" endtime="20210327 22:49:39.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.048" level="INFO">{'id': 'a13664aba1b54749a3a04fa4f7e781a6', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents/a13664aba1b54749a3a04fa4f7e781a6', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents/a13664aba1b54749a3a04fa4f7e781a6/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:39.046" endtime="20210327 22:49:39.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.050" level="INFO">e4012413c26ee128</msg>
<status status="PASS" starttime="20210327 22:49:39.049" endtime="20210327 22:49:39.050"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.052" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.051" endtime="20210327 22:49:39.052"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:39.053" level="INFO">${document_external_key} = a13664aba1b54749a3a04fa4f7e781a6</msg>
<status status="PASS" starttime="20210327 22:49:39.052" endtime="20210327 22:49:39.054"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.055" level="INFO">${document_external_key} = a13664aba1b54749a3a04fa4f7e781a6</msg>
<status status="PASS" starttime="20210327 22:49:39.054" endtime="20210327 22:49:39.055"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:38.734" endtime="20210327 22:49:39.055"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:39.057" endtime="20210327 22:49:39.058"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.056" endtime="20210327 22:49:39.058"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.060" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 22:49:39.060" endtime="20210327 22:49:39.060"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:39.061" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:39.061" endtime="20210327 22:49:39.061"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:39.063" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:39.065" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:39.062" endtime="20210327 22:49:39.065"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:39.066" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:39.376" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.065" endtime="20210327 22:49:39.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.377" level="INFO">{'id': 'b68b110c0cb849a6ad0dbfe74de587a3', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents/b68b110c0cb849a6ad0dbfe74de587a3', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/documents/b68b110c0cb849a6ad0dbfe74de587a3/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:39.377" endtime="20210327 22:49:39.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.378" level="INFO">77a0c9e17ed34263</msg>
<status status="PASS" starttime="20210327 22:49:39.377" endtime="20210327 22:49:39.378"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.378" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.378" endtime="20210327 22:49:39.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:39.379" level="INFO">${document_external_key} = b68b110c0cb849a6ad0dbfe74de587a3</msg>
<status status="PASS" starttime="20210327 22:49:39.378" endtime="20210327 22:49:39.379"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.379" level="INFO">${document_external_key} = b68b110c0cb849a6ad0dbfe74de587a3</msg>
<status status="PASS" starttime="20210327 22:49:39.379" endtime="20210327 22:49:39.379"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.059" endtime="20210327 22:49:39.379"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:39.380" endtime="20210327 22:49:39.381"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.380" endtime="20210327 22:49:39.381"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:39.381" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:39.381" endtime="20210327 22:49:39.381"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:39.382" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:39.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.382" endtime="20210327 22:49:39.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.716" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 22:49:39.715" endtime="20210327 22:49:39.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.718" level="INFO">9db6a64216debaea</msg>
<status status="PASS" starttime="20210327 22:49:39.717" endtime="20210327 22:49:39.718"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.719" endtime="20210327 22:49:39.719"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.381" endtime="20210327 22:49:39.720"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:39.721" endtime="20210327 22:49:39.721"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.720" endtime="20210327 22:49:39.722"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 22:49:39.722" level="INFO">${assessment_id} = a24e38fa-198a-4332-bb3b-72a721e34e15</msg>
<status status="PASS" starttime="20210327 22:49:39.722" endtime="20210327 22:49:39.722"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 22:49:39.722" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 22:49:39.722" endtime="20210327 22:49:39.723"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 22:49:39.723" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 22:49:39.723" endtime="20210327 22:49:39.723"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 22:49:39.723" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 22:49:39.723" endtime="20210327 22:49:39.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:39.724" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:39.724" endtime="20210327 22:49:39.724"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:39.724" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 22:49:39.724" endtime="20210327 22:49:39.724"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:39.725" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/e36c9d36d9064204af3b2d6cb157a30b/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "e36c9d36d9064204af3b2d6cb157a30b", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "a24e38fa-198a-4332-bb3b-72a721e34e15" } } 
json=None</msg>
<msg timestamp="20210327 22:49:39.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.725" endtime="20210327 22:49:39.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.942" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 22:49:39.941" endtime="20210327 22:49:39.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.944" level="INFO">a80151e0163801f4</msg>
<status status="PASS" starttime="20210327 22:49:39.943" endtime="20210327 22:49:39.945"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:39.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.946" endtime="20210327 22:49:39.949"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 22:49:39.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.950" endtime="20210327 22:49:39.951"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.722" endtime="20210327 22:49:39.952"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:39.955" endtime="20210327 22:49:39.957"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.953" endtime="20210327 22:49:39.957"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:39.959" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:39.959" endtime="20210327 22:49:39.960"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.958" endtime="20210327 22:49:39.960"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:39.961" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/e36c9d36d9064204af3b2d6cb157a30b/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:40.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:39.960" endtime="20210327 22:49:40.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:40.584" level="INFO">{'items': [{'id': '9df02eb26981405b9d4587ceabb490ff', 'holder': 'e36c9d36d9064204af3b2d6cb157a30b', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '229430752', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:41.059268', 'updated_at': '2021-03-28T01:49:41.059268', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/9df02eb26981405b9d4587ceabb490ff', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 22:49:40.584" endtime="20210327 22:49:40.585"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:40.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:40.586" endtime="20210327 22:49:40.587"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:40.589" level="INFO">${account_external_key} = 9df02eb26981405b9d4587ceabb490ff</msg>
<status status="PASS" starttime="20210327 22:49:40.588" endtime="20210327 22:49:40.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:40.590" level="INFO">${account_external_key} = 9df02eb26981405b9d4587ceabb490ff</msg>
<status status="PASS" starttime="20210327 22:49:40.589" endtime="20210327 22:49:40.590"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 22:49:40.592" level="INFO">${account_number} = 229430752</msg>
<status status="PASS" starttime="20210327 22:49:40.591" endtime="20210327 22:49:40.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 22:49:40.593" level="INFO">${account_number} = 229430752</msg>
<status status="PASS" starttime="20210327 22:49:40.592" endtime="20210327 22:49:40.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 22:49:40.595" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:49:40.593" endtime="20210327 22:49:40.595"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 22:49:40.596" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:49:40.596" endtime="20210327 22:49:40.596"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:39.957" endtime="20210327 22:49:40.596"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:40.597" endtime="20210327 22:49:40.599"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:40.596" endtime="20210327 22:49:40.599"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.115" endtime="20210327 22:49:40.599"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.114" endtime="20210327 22:49:40.599"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 22:49:40.600" level="INFO">${uuid} = 1165b45a-472d-4447-af16-f225f27d5e6e</msg>
<status status="PASS" starttime="20210327 22:49:40.600" endtime="20210327 22:49:40.600"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:40.600" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:40.600" endtime="20210327 22:49:40.601"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:40.600" endtime="20210327 22:49:40.601"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:40.601" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:40.601" endtime="20210327 22:49:40.601"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:40.602" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "1165b45a-472d-4447-af16-f225f27d5e6e", "transaction_id": "1165b45a-472d-4447-af16-f225f27d5e6e", "id": "1165b45a-472d-4447-af16-f225...</msg>
<status status="PASS" starttime="20210327 22:49:40.601" endtime="20210327 22:49:40.602"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:40.602" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/1165b45a-472d-4447-af16-f225f27d5e6e, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "1165b45a-472d-4447-af16-f225f27d5e6e", "transaction_id": "1165b45a-472d-4447-af16-f225f27d5e6e", "id": "1165b45a-472d-4447-af16-f225f27d5e6e", "id_checking_account": "9df02eb26981405b9d4587ceabb490ff", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "1165b45a-472d-4447-af16-f225f27d5e6e", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 22:49:41.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:40.602" endtime="20210327 22:49:41.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:41.299" endtime="20210327 22:49:41.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:41.301" endtime="20210327 22:49:41.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:41.303" endtime="20210327 22:49:41.304"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:40.599" endtime="20210327 22:49:41.305"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:41.306" endtime="20210327 22:49:41.308"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:41.305" endtime="20210327 22:49:41.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:41.312" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:41.311" endtime="20210327 22:49:41.312"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:41.311" endtime="20210327 22:49:41.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 22:49:41.313" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210327 22:49:41.313" endtime="20210327 22:49:41.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 22:49:41.314" level="INFO">${value} = +5521985669821</msg>
<status status="PASS" starttime="20210327 22:49:41.314" endtime="20210327 22:49:41.315"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:41.315" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:41.315" endtime="20210327 22:49:41.315"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:41.316" level="INFO">${body} = { "type": "phone", "value": "+5521985669821" }</msg>
<status status="PASS" starttime="20210327 22:49:41.316" endtime="20210327 22:49:41.316"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:41.317" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e36c9d36d9064204af3b2d6cb157a30b/accounts/9df02eb26981405b9d4587ceabb490ff/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521985669821" } 
json=None</msg>
<msg timestamp="20210327 22:49:42.002" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:41.317" endtime="20210327 22:49:42.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.003" level="INFO">{'id': '39fb118bede14581bb88982a118b0c5f', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T10:49:43.132', 'updated_at': '2021-03-27T10:49:43.132', 'key': {'value': '+5521985669821', 'type': 'phone'}, 'account': {'id': '9df02eb26981405b9d4587ceabb490ff', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e36c9d36d9064204af3b2d6cb157a30b', 'owner': {'name': 'Holder de teste', 'national_registration': '39125064851', 'type': 'individual'}, 'routing_number': '001', 'number': '229430752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:42.002" endtime="20210327 22:49:42.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.003" level="INFO">07b8ce8afb5edfda</msg>
<status status="PASS" starttime="20210327 22:49:42.003" endtime="20210327 22:49:42.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.004" level="INFO">202</msg>
<status status="PASS" starttime="20210327 22:49:42.004" endtime="20210327 22:49:42.004"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.005" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:42.004" endtime="20210327 22:49:42.005"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:42.005" endtime="20210327 22:49:42.006"></status>
</kw>
<msg timestamp="20210327 22:49:42.006" level="INFO">${entry_external_key} = 39fb118bede14581bb88982a118b0c5f</msg>
<status status="PASS" starttime="20210327 22:49:42.005" endtime="20210327 22:49:42.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.006" level="INFO">${entry_external_key} = 39fb118bede14581bb88982a118b0c5f</msg>
<status status="PASS" starttime="20210327 22:49:42.006" endtime="20210327 22:49:42.006"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:42.007" endtime="20210327 22:49:42.007"></status>
</kw>
<msg timestamp="20210327 22:49:42.007" level="INFO">${entry_key_value} = +5521985669821</msg>
<status status="PASS" starttime="20210327 22:49:42.006" endtime="20210327 22:49:42.007"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.008" level="INFO">${entry_key_value} = +5521985669821</msg>
<status status="PASS" starttime="20210327 22:49:42.008" endtime="20210327 22:49:42.008"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:41.310" endtime="20210327 22:49:42.008"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:41.309" endtime="20210327 22:49:42.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:42.009" endtime="20210327 22:49:42.010"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.009" endtime="20210327 22:49:42.010"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.008" endtime="20210327 22:49:42.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:42.011" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:42.011" endtime="20210327 22:49:42.012"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.011" endtime="20210327 22:49:42.012"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:42.012" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e36c9d36d9064204af3b2d6cb157a30b/accounts/9df02eb26981405b9d4587ceabb490ff/entries/39fb118bede14581bb88982a118b0c5f/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:42.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:42.012" endtime="20210327 22:49:42.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.660" level="INFO">{'code': '6552'}</msg>
<status status="PASS" starttime="20210327 22:49:42.660" endtime="20210327 22:49:42.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.661" level="INFO">b0f6ac46c363b0ee</msg>
<status status="PASS" starttime="20210327 22:49:42.660" endtime="20210327 22:49:42.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.661" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:49:42.661" endtime="20210327 22:49:42.661"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:42.661" endtime="20210327 22:49:42.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 22:49:42.662" level="INFO">${verification_code} = 6552</msg>
<status status="PASS" starttime="20210327 22:49:42.662" endtime="20210327 22:49:42.662"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:42.663" level="INFO">${verification_code} = 6552</msg>
<status status="PASS" starttime="20210327 22:49:42.663" endtime="20210327 22:49:42.663"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.010" endtime="20210327 22:49:42.663"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.010" endtime="20210327 22:49:42.663"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:42.664" endtime="20210327 22:49:42.664"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.663" endtime="20210327 22:49:42.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:42.666" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:42.666" endtime="20210327 22:49:42.666"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.665" endtime="20210327 22:49:42.666"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:42.667" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:42.666" endtime="20210327 22:49:42.667"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:42.667" level="INFO">${body} = { "code": "6552" }</msg>
<status status="PASS" starttime="20210327 22:49:42.667" endtime="20210327 22:49:42.667"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:42.668" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/e36c9d36d9064204af3b2d6cb157a30b/accounts/9df02eb26981405b9d4587ceabb490ff/entries/39fb118bede14581bb88982a118b0c5f/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "6552" } 
json=None</msg>
<msg timestamp="20210327 22:49:44.430" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:42.667" endtime="20210327 22:49:44.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.430" level="INFO">{'id': '39fb118bede14581bb88982a118b0c5f', 'status': 'active', 'created_at': '2021-03-27T10:49:43.132', 'updated_at': '2021-03-27T10:49:45.580', 'key': {'value': '+5521985669821', 'type': 'phone'}, 'account': {'id': '9df02eb26981405b9d4587ceabb490ff', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'e36c9d36d9064204af3b2d6cb157a30b', 'owner': {'name': 'Holder de teste', 'national_registration': '39125064851', 'type': 'individual'}, 'routing_number': '001', 'number': '229430752', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:44.430" endtime="20210327 22:49:44.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.431" level="INFO">ec05e3894aae65c6</msg>
<status status="PASS" starttime="20210327 22:49:44.430" endtime="20210327 22:49:44.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.431" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:44.431" endtime="20210327 22:49:44.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.432" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:44.432" endtime="20210327 22:49:44.432"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.665" endtime="20210327 22:49:44.432"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:42.664" endtime="20210327 22:49:44.432"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:44.433" endtime="20210327 22:49:44.433"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:44.432" endtime="20210327 22:49:44.433"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:37.112" endtime="20210327 22:49:44.433"></status>
</kw>
<kw name="gerar end_to_end_id" library="end_to_end_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:44.435" level="INFO">${date} = 2021-03-27 22:49:44.435191</msg>
<status status="PASS" starttime="20210327 22:49:44.435" endtime="20210327 22:49:44.435"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:44.436" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:44.435" endtime="20210327 22:49:44.436"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=11</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:44.436" level="INFO">${random_number_end_to_end_id} = 75761008684</msg>
<status status="PASS" starttime="20210327 22:49:44.436" endtime="20210327 22:49:44.436"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E19468242${datetime}${random_number_end_to_end_id}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210327 22:49:44.437" level="INFO">${end_to_end_id} = E1946824220210327224975761008684</msg>
<status status="PASS" starttime="20210327 22:49:44.436" endtime="20210327 22:49:44.437"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.437" level="INFO">${end_to_end_id} = E1946824220210327224975761008684</msg>
<status status="PASS" starttime="20210327 22:49:44.437" endtime="20210327 22:49:44.437"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:44.434" endtime="20210327 22:49:44.437"></status>
</kw>
<kw name="gerar message_id" library="message_id_generator">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:44.438" level="INFO">${date} = 2021-03-27 22:49:44.438189</msg>
<status status="PASS" starttime="20210327 22:49:44.438" endtime="20210327 22:49:44.438"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y%m%d%H%M</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:44.439" level="INFO">${datetime} = 202103272249</msg>
<status status="PASS" starttime="20210327 22:49:44.438" endtime="20210327 22:49:44.439"></status>
</kw>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=23</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${random_number_message_id}</var>
</assign>
<msg timestamp="20210327 22:49:44.439" level="INFO">${random_number_message_id} = 86267613350496103227083</msg>
<status status="PASS" starttime="20210327 22:49:44.439" endtime="20210327 22:49:44.439"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>M19468242${random_number_message_id}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210327 22:49:44.440" level="INFO">${message_id} = M1946824286267613350496103227083</msg>
<status status="PASS" starttime="20210327 22:49:44.440" endtime="20210327 22:49:44.440"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.440" level="INFO">${message_id} = M1946824286267613350496103227083</msg>
<status status="PASS" starttime="20210327 22:49:44.440" endtime="20210327 22:49:44.440"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:44.438" endtime="20210327 22:49:44.440"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>amount=5000000</arg>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:44.442" level="INFO">${date} = 2021-03-27 22:49:44.442189</msg>
<status status="PASS" starttime="20210327 22:49:44.441" endtime="20210327 22:49:44.442"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:44.442" level="INFO">${datetime} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:49:44.442" endtime="20210327 22:49:44.442"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:49:44.443" level="INFO">${amount} = 5000000</msg>
<status status="PASS" starttime="20210327 22:49:44.442" endtime="20210327 22:49:44.443"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:44.443" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:44.443" endtime="20210327 22:49:44.444"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:44.443" endtime="20210327 22:49:44.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:44.444" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:44.444" endtime="20210327 22:49:44.444"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": ${amount},</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "0243882974",</arg>
<arg>"psp": "17192451",</arg>
<arg>"routing_number": "0500",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "42808422644",</arg>
<arg>"identification": "Teste de Recebimento de PIX",</arg>
<arg>"name": "Massa ITI PFNAUmNNO"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:44.445" level="INFO">${body} = { "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224975761008684", "message_id": "M1946824286267613350496103227083", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210327 22:49:44.444" endtime="20210327 22:49:44.445"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:44.446" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224975761008684", "message_id": "M1946824286267613350496103227083", "receiver": { "account_details": { "number": "229430752", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "39125064851" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "0243882974", "psp": "17192451", "routing_number": "0500", "type": "cacc" }, "document": "42808422644", "identification": "Teste de Recebimento de PIX", "name": "Massa ITI PFNAUmNNO" } } 
json=None</msg>
<msg timestamp="20210327 22:49:45.141" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:44.445" endtime="20210327 22:49:45.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.142" level="INFO">{'id': '3dce3b7ba2c8497ebb8c46cf3c954fbe', 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210327 22:49:45.142" endtime="20210327 22:49:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.143" level="INFO">e6b70c8c0a881bd9</msg>
<status status="PASS" starttime="20210327 22:49:45.143" endtime="20210327 22:49:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.145" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:45.144" endtime="20210327 22:49:45.145"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:45.145" endtime="20210327 22:49:45.145"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:44.441" endtime="20210327 22:49:45.145"></status>
</kw>
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=phone</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210327 22:49:45.147" level="INFO">${phone} = 27153281</msg>
<status status="PASS" starttime="20210327 22:49:45.146" endtime="20210327 22:49:45.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210327 22:49:45.147" level="INFO">${phone_pix} = +5521927153281</msg>
<status status="PASS" starttime="20210327 22:49:45.147" endtime="20210327 22:49:45.148"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.148" level="INFO">${phone_pix} = +5521927153281</msg>
<status status="PASS" starttime="20210327 22:49:45.148" endtime="20210327 22:49:45.148"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210327 22:49:45.149" level="INFO">${email_pix} = emillymoreira@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:49:45.149" endtime="20210327 22:49:45.149"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.150" level="INFO">${email_pix} = emillymoreira@yahoo.com.br</msg>
<status status="PASS" starttime="20210327 22:49:45.150" endtime="20210327 22:49:45.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:45.153" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:45.153" endtime="20210327 22:49:45.154"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.152" endtime="20210327 22:49:45.154"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:45.154" level="INFO">${national_registration} = 289.701.543-88</msg>
<status status="PASS" starttime="20210327 22:49:45.154" endtime="20210327 22:49:45.154"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:45.155" level="INFO">${national_registration} = 289701543-88</msg>
<status status="PASS" starttime="20210327 22:49:45.155" endtime="20210327 22:49:45.155"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210327 22:49:45.156" level="INFO">${national_registration} = 28970154388</msg>
<status status="PASS" starttime="20210327 22:49:45.156" endtime="20210327 22:49:45.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.157" level="INFO">${national_registration} = 28970154388</msg>
<status status="PASS" starttime="20210327 22:49:45.156" endtime="20210327 22:49:45.157"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210327 22:49:45.157" level="INFO">${identity_card} = 543721863</msg>
<status status="PASS" starttime="20210327 22:49:45.157" endtime="20210327 22:49:45.158"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.158" level="INFO">${identity_card} = 543721863</msg>
<status status="PASS" starttime="20210327 22:49:45.158" endtime="20210327 22:49:45.158"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:45.161" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:45.160" endtime="20210327 22:49:45.161"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.160" endtime="20210327 22:49:45.161"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.162" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210327 22:49:45.161" endtime="20210327 22:49:45.162"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.163" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:49:45.162" endtime="20210327 22:49:45.163"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:45.163" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:45.163" endtime="20210327 22:49:45.163"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:45.164" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "28970154388", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder",...</msg>
<status status="PASS" starttime="20210327 22:49:45.164" endtime="20210327 22:49:45.164"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:45.165" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "28970154388", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "543721863", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210327 22:49:45.842" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:45.165" endtime="20210327 22:49:45.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.845" level="INFO">{'id': '7c51332ae4b0417eace5d281d4f50c7d', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-27T22:49:46.970641', 'updated_at': '2021-03-27T22:49:46.970643', 'type': 'individual', 'national_registration': '28970154388', 'birthday': '1988-04-23', 'mothers_name': 'Mãe do Holder', 'identity_card': '543721863', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:45.843" endtime="20210327 22:49:45.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.847" level="INFO">62866bbfe39d5564</msg>
<status status="PASS" starttime="20210327 22:49:45.846" endtime="20210327 22:49:45.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.848" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "28970154388", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "Mãe do Holder", "identity_card": "543721863", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210327 22:49:45.848" endtime="20210327 22:49:45.848"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.850" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:45.849" endtime="20210327 22:49:45.850"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:45.852" level="INFO">${holder_external_key} = 7c51332ae4b0417eace5d281d4f50c7d</msg>
<status status="PASS" starttime="20210327 22:49:45.850" endtime="20210327 22:49:45.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.853" level="INFO">${holder_external_key} = 7c51332ae4b0417eace5d281d4f50c7d</msg>
<status status="PASS" starttime="20210327 22:49:45.852" endtime="20210327 22:49:45.853"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.159" endtime="20210327 22:49:45.854"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210327 22:49:45.855" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210327 22:49:45.854" endtime="20210327 22:49:45.855"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar holder individual</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:45.857" endtime="20210327 22:49:45.858"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.855" endtime="20210327 22:49:45.858"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:45.860" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:45.859" endtime="20210327 22:49:45.860"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:45.861" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210327 22:49:45.861" endtime="20210327 22:49:45.861"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:45.862" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210327 22:49:46.122" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:45.862" endtime="20210327 22:49:46.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.123" level="INFO">{'id': 'fa598689f2914bf8bb21dfafc5831b9e', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/phones/fa598689f2914bf8bb21dfafc5831b9e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:46.122" endtime="20210327 22:49:46.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.124" level="INFO">14256eec89fae5a6</msg>
<status status="PASS" starttime="20210327 22:49:46.123" endtime="20210327 22:49:46.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:46.124" endtime="20210327 22:49:46.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:46.126" level="INFO">${phone_external_key} = fa598689f2914bf8bb21dfafc5831b9e</msg>
<status status="PASS" starttime="20210327 22:49:46.125" endtime="20210327 22:49:46.126"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.126" level="INFO">${phone_external_key} = fa598689f2914bf8bb21dfafc5831b9e</msg>
<status status="PASS" starttime="20210327 22:49:46.126" endtime="20210327 22:49:46.126"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.858" endtime="20210327 22:49:46.127"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar telefone do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:46.127" endtime="20210327 22:49:46.128"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:46.127" endtime="20210327 22:49:46.128"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:46.129" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:46.129" endtime="20210327 22:49:46.129"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:46.130" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210327 22:49:46.129" endtime="20210327 22:49:46.131"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:46.132" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210327 22:49:46.390" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:46.131" endtime="20210327 22:49:46.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.391" level="INFO">{'id': '8302102b53b242e2b29a6354945751e1', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/addresses/8302102b53b242e2b29a6354945751e1', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:46.390" endtime="20210327 22:49:46.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.392" level="INFO">13934b582fa3abf8</msg>
<status status="PASS" starttime="20210327 22:49:46.391" endtime="20210327 22:49:46.392"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.393" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:46.392" endtime="20210327 22:49:46.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:46.394" level="INFO">${address_external_key} = 8302102b53b242e2b29a6354945751e1</msg>
<status status="PASS" starttime="20210327 22:49:46.393" endtime="20210327 22:49:46.394"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.395" level="INFO">${address_external_key} = 8302102b53b242e2b29a6354945751e1</msg>
<status status="PASS" starttime="20210327 22:49:46.394" endtime="20210327 22:49:46.395"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:46.128" endtime="20210327 22:49:46.395"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar endereço do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:46.396" endtime="20210327 22:49:46.397"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:46.396" endtime="20210327 22:49:46.397"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=SELFIE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.398" level="INFO">${document_type} = SELFIE</msg>
<status status="PASS" starttime="20210327 22:49:46.398" endtime="20210327 22:49:46.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:46.399" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:46.399" endtime="20210327 22:49:46.399"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:46.400" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:46.401" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:46.399" endtime="20210327 22:49:46.402"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:46.402" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:46.711" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:46.402" endtime="20210327 22:49:46.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.713" level="INFO">{'id': '31ae47affd7d47eea28107d084f656c2', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents/31ae47affd7d47eea28107d084f656c2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents/31ae47affd7d47eea28107d084f656c2/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:46.712" endtime="20210327 22:49:46.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.717" level="INFO">b25e37b0319adc2b</msg>
<status status="PASS" starttime="20210327 22:49:46.715" endtime="20210327 22:49:46.718"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.718" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:46.718" endtime="20210327 22:49:46.718"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:46.720" level="INFO">${document_external_key} = 31ae47affd7d47eea28107d084f656c2</msg>
<status status="PASS" starttime="20210327 22:49:46.719" endtime="20210327 22:49:46.720"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.722" level="INFO">${document_external_key} = 31ae47affd7d47eea28107d084f656c2</msg>
<status status="PASS" starttime="20210327 22:49:46.720" endtime="20210327 22:49:46.722"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:46.398" endtime="20210327 22:49:46.722"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:46.726" endtime="20210327 22:49:46.726"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:46.723" endtime="20210327 22:49:46.726"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_FRENTE</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:46.728" level="INFO">${document_type} = RG_FRENTE</msg>
<status status="PASS" starttime="20210327 22:49:46.727" endtime="20210327 22:49:46.728"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:46.728" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:46.728" endtime="20210327 22:49:46.729"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:46.730" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:46.731" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:46.729" endtime="20210327 22:49:46.731"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:46.733" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:47.038" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:46.732" endtime="20210327 22:49:47.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.041" level="INFO">{'id': '1ce133356b0f4103bf88f6682e743246', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents/1ce133356b0f4103bf88f6682e743246', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents/1ce133356b0f4103bf88f6682e743246/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:47.040" endtime="20210327 22:49:47.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.043" level="INFO">5e8653aab8f83a1b</msg>
<status status="PASS" starttime="20210327 22:49:47.042" endtime="20210327 22:49:47.043"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.045" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.044" endtime="20210327 22:49:47.045"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:47.047" level="INFO">${document_external_key} = 1ce133356b0f4103bf88f6682e743246</msg>
<status status="PASS" starttime="20210327 22:49:47.045" endtime="20210327 22:49:47.047"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.048" level="INFO">${document_external_key} = 1ce133356b0f4103bf88f6682e743246</msg>
<status status="PASS" starttime="20210327 22:49:47.047" endtime="20210327 22:49:47.048"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:46.727" endtime="20210327 22:49:47.048"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:47.050" endtime="20210327 22:49:47.051"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.049" endtime="20210327 22:49:47.051"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>document_type=RG_VERSO</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${document_type}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.053" level="INFO">${document_type} = RG_VERSO</msg>
<status status="PASS" starttime="20210327 22:49:47.052" endtime="20210327 22:49:47.053"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:47.054" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210327 22:49:47.053" endtime="20210327 22:49:47.054"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>C:\\Users\\vinicius.trindade\\banking_continuous_testing\\banking_continuous_testing\\apis\\accreditation\\documents\\holder_documents\\post.${/}..${/}..${/}..${/}..${/}..${/}images${/}accreditation${/}image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210327 22:49:47.055" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210327 22:49:47.057" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210327 22:49:47.054" endtime="20210327 22:49:47.057"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:47.058" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210327 22:49:47.339" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.057" endtime="20210327 22:49:47.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.343" level="INFO">{'id': '8c2c7a7a865c4272b71cf70758c66888', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents/8c2c7a7a865c4272b71cf70758c66888', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/documents/8c2c7a7a865c4272b71cf70758c66888/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210327 22:49:47.341" endtime="20210327 22:49:47.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.345" level="INFO">6f0f6a780de505cf</msg>
<status status="PASS" starttime="20210327 22:49:47.344" endtime="20210327 22:49:47.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.347" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.346" endtime="20210327 22:49:47.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:47.350" level="INFO">${document_external_key} = 8c2c7a7a865c4272b71cf70758c66888</msg>
<status status="PASS" starttime="20210327 22:49:47.348" endtime="20210327 22:49:47.350"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.352" level="INFO">${document_external_key} = 8c2c7a7a865c4272b71cf70758c66888</msg>
<status status="PASS" starttime="20210327 22:49:47.351" endtime="20210327 22:49:47.352"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.051" endtime="20210327 22:49:47.352"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar ${document_type} do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:47.354" endtime="20210327 22:49:47.355"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.353" endtime="20210327 22:49:47.356"></status>
</kw>
<kw name="solicitar aprovação do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:47.358" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:47.357" endtime="20210327 22:49:47.358"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:47.360" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:47.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.358" endtime="20210327 22:49:47.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.665" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210327 22:49:47.664" endtime="20210327 22:49:47.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.668" level="INFO">4d77ff311a5e6abd</msg>
<status status="PASS" starttime="20210327 22:49:47.667" endtime="20210327 22:49:47.668"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.668" endtime="20210327 22:49:47.670"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.356" endtime="20210327 22:49:47.670"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao solicitar aprovação do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:47.672" endtime="20210327 22:49:47.674"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.671" endtime="20210327 22:49:47.674"></status>
</kw>
<kw name="recebendo notificação de aprovação" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210327 22:49:47.676" level="INFO">${assessment_id} = 3222d1f5-fee1-4f50-8fa9-8e1383e308a4</msg>
<status status="PASS" starttime="20210327 22:49:47.676" endtime="20210327 22:49:47.676"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210327 22:49:47.678" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210327 22:49:47.676" endtime="20210327 22:49:47.678"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210327 22:49:47.679" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210327 22:49:47.678" endtime="20210327 22:49:47.679"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210327 22:49:47.680" level="INFO">${day} = 27</msg>
<status status="PASS" starttime="20210327 22:49:47.679" endtime="20210327 22:49:47.680"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:47.680" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:47.680" endtime="20210327 22:49:47.681"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:47.682" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210327 22:49:47.681" endtime="20210327 22:49:47.682"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:47.683" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/7c51332ae4b0417eace5d281d4f50c7d/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-27 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "7c51332ae4b0417eace5d281d4f50c7d", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3222d1f5-fee1-4f50-8fa9-8e1383e308a4" } } 
json=None</msg>
<msg timestamp="20210327 22:49:47.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.682" endtime="20210327 22:49:47.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.884" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210327 22:49:47.883" endtime="20210327 22:49:47.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.885" level="INFO">57cb88fe0f44d3ab</msg>
<status status="PASS" starttime="20210327 22:49:47.885" endtime="20210327 22:49:47.886"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:47.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.886" endtime="20210327 22:49:47.887"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210327 22:49:47.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.887" endtime="20210327 22:49:47.888"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.674" endtime="20210327 22:49:47.889"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao receber notificação de aprovação</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:47.891" endtime="20210327 22:49:47.893"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.889" endtime="20210327 22:49:47.893"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:47.897" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:47.897" endtime="20210327 22:49:47.897"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.895" endtime="20210327 22:49:47.897"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:47.898" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/7c51332ae4b0417eace5d281d4f50c7d/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:48.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:47.898" endtime="20210327 22:49:48.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:48.588" level="INFO">{'items': [{'id': 'f85f49c56e414fab87a3ebb4bf79ca41', 'holder': '7c51332ae4b0417eace5d281d4f50c7d', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '241612176', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-28T01:49:49.004036', 'updated_at': '2021-03-28T01:49:49.004036', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/f85f49c56e414fab87a3ebb4bf79ca41', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210327 22:49:48.586" endtime="20210327 22:49:48.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:48.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:48.590" endtime="20210327 22:49:48.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210327 22:49:48.595" level="INFO">${account_external_key} = f85f49c56e414fab87a3ebb4bf79ca41</msg>
<status status="PASS" starttime="20210327 22:49:48.593" endtime="20210327 22:49:48.595"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:48.597" level="INFO">${account_external_key} = f85f49c56e414fab87a3ebb4bf79ca41</msg>
<status status="PASS" starttime="20210327 22:49:48.596" endtime="20210327 22:49:48.597"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210327 22:49:48.600" level="INFO">${account_number} = 241612176</msg>
<status status="PASS" starttime="20210327 22:49:48.598" endtime="20210327 22:49:48.600"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210327 22:49:48.601" level="INFO">${account_number} = 241612176</msg>
<status status="PASS" starttime="20210327 22:49:48.600" endtime="20210327 22:49:48.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210327 22:49:48.603" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:49:48.602" endtime="20210327 22:49:48.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210327 22:49:48.604" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210327 22:49:48.604" endtime="20210327 22:49:48.605"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:47.894" endtime="20210327 22:49:48.605"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar account do holder</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:48.606" endtime="20210327 22:49:48.608"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:48.605" endtime="20210327 22:49:48.608"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.151" endtime="20210327 22:49:48.608"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.150" endtime="20210327 22:49:48.608"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210327 22:49:48.610" level="INFO">${uuid} = 46f53f93-6fb9-4074-8b0d-3fd2fc048042</msg>
<status status="PASS" starttime="20210327 22:49:48.609" endtime="20210327 22:49:48.610"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:48.612" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:48.611" endtime="20210327 22:49:48.612"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:48.610" endtime="20210327 22:49:48.612"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:48.613" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:48.613" endtime="20210327 22:49:48.613"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:48.614" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "46f53f93-6fb9-4074-8b0d-3fd2fc048042", "transaction_id": "46f53f93-6fb9-4074-8b0d-3fd2fc048042", "id": "46f53f93-6fb9-4074-8b0d-3fd2...</msg>
<status status="PASS" starttime="20210327 22:49:48.613" endtime="20210327 22:49:48.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:48.615" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/46f53f93-6fb9-4074-8b0d-3fd2fc048042, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "46f53f93-6fb9-4074-8b0d-3fd2fc048042", "transaction_id": "46f53f93-6fb9-4074-8b0d-3fd2fc048042", "id": "46f53f93-6fb9-4074-8b0d-3fd2fc048042", "id_checking_account": "f85f49c56e414fab87a3ebb4bf79ca41", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "46f53f93-6fb9-4074-8b0d-3fd2fc048042", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210327 22:49:49.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:48.615" endtime="20210327 22:49:49.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:49.323" endtime="20210327 22:49:49.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:49.325" endtime="20210327 22:49:49.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:49.328" endtime="20210327 22:49:49.330"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:48.608" endtime="20210327 22:49:49.331"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao gerar saldo</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:49.334" endtime="20210327 22:49:49.336"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:49.332" endtime="20210327 22:49:49.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:49.342" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:49.341" endtime="20210327 22:49:49.342"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:49.340" endtime="20210327 22:49:49.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210327 22:49:49.344" level="INFO">${type} = phone</msg>
<status status="PASS" starttime="20210327 22:49:49.343" endtime="20210327 22:49:49.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210327 22:49:49.345" level="INFO">${value} = +5521927153281</msg>
<status status="PASS" starttime="20210327 22:49:49.344" endtime="20210327 22:49:49.345"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:49.346" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:49.345" endtime="20210327 22:49:49.346"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:49.347" level="INFO">${body} = { "type": "phone", "value": "+5521927153281" }</msg>
<status status="PASS" starttime="20210327 22:49:49.346" endtime="20210327 22:49:49.347"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:49.348" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7c51332ae4b0417eace5d281d4f50c7d/accounts/f85f49c56e414fab87a3ebb4bf79ca41/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "phone", "value": "+5521927153281" } 
json=None</msg>
<msg timestamp="20210327 22:49:50.047" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:49.347" endtime="20210327 22:49:50.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.048" level="INFO">{'id': 'feba6027c412410c8e55983577dba977', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-27T10:49:51.186', 'updated_at': '2021-03-27T10:49:51.186', 'key': {'value': '+5521927153281', 'type': 'phone'}, 'account': {'id': 'f85f49c56e414fab87a3ebb4bf79ca41', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7c51332ae4b0417eace5d281d4f50c7d', 'owner': {'name': 'Holder de teste', 'national_registration': '28970154388', 'type': 'individual'}, 'routing_number': '001', 'number': '241612176', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:50.048" endtime="20210327 22:49:50.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.049" level="INFO">7a7d302e5265f695</msg>
<status status="PASS" starttime="20210327 22:49:50.049" endtime="20210327 22:49:50.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.050" level="INFO">202</msg>
<status status="PASS" starttime="20210327 22:49:50.049" endtime="20210327 22:49:50.050"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.050" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:50.050" endtime="20210327 22:49:50.051"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:50.052" endtime="20210327 22:49:50.052"></status>
</kw>
<msg timestamp="20210327 22:49:50.052" level="INFO">${entry_external_key} = feba6027c412410c8e55983577dba977</msg>
<status status="PASS" starttime="20210327 22:49:50.051" endtime="20210327 22:49:50.052"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.053" level="INFO">${entry_external_key} = feba6027c412410c8e55983577dba977</msg>
<status status="PASS" starttime="20210327 22:49:50.052" endtime="20210327 22:49:50.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:50.054" endtime="20210327 22:49:50.054"></status>
</kw>
<msg timestamp="20210327 22:49:50.054" level="INFO">${entry_key_value} = +5521927153281</msg>
<status status="PASS" starttime="20210327 22:49:50.053" endtime="20210327 22:49:50.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.055" level="INFO">${entry_key_value} = +5521927153281</msg>
<status status="PASS" starttime="20210327 22:49:50.055" endtime="20210327 22:49:50.055"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:49.339" endtime="20210327 22:49:50.056"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:49.337" endtime="20210327 22:49:50.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>validar status code</arg>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>validar status code</arg>
<arg>status_code=201</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=202</arg>
<arg>message_error=Erro ao criar chave do tipo ${pix_type}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:50.057" endtime="20210327 22:49:50.058"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.057" endtime="20210327 22:49:50.058"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.056" endtime="20210327 22:49:50.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:50.060" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:50.060" endtime="20210327 22:49:50.061"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.060" endtime="20210327 22:49:50.061"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:50.061" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7c51332ae4b0417eace5d281d4f50c7d/accounts/f85f49c56e414fab87a3ebb4bf79ca41/entries/feba6027c412410c8e55983577dba977/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210327 22:49:50.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:50.061" endtime="20210327 22:49:50.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.733" level="INFO">{'code': '2147'}</msg>
<status status="PASS" starttime="20210327 22:49:50.732" endtime="20210327 22:49:50.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.735" level="INFO">3a35e8f5a7b67dc3</msg>
<status status="PASS" starttime="20210327 22:49:50.734" endtime="20210327 22:49:50.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.736" level="INFO">200</msg>
<status status="PASS" starttime="20210327 22:49:50.735" endtime="20210327 22:49:50.736"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:50.737" endtime="20210327 22:49:50.737"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210327 22:49:50.739" level="INFO">${verification_code} = 2147</msg>
<status status="PASS" starttime="20210327 22:49:50.738" endtime="20210327 22:49:50.739"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:50.740" level="INFO">${verification_code} = 2147</msg>
<status status="PASS" starttime="20210327 22:49:50.740" endtime="20210327 22:49:50.740"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.059" endtime="20210327 22:49:50.741"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.059" endtime="20210327 22:49:50.741"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=200</arg>
<arg>message_error=Erro ao buscar verification code</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:50.743" endtime="20210327 22:49:50.744"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.742" endtime="20210327 22:49:50.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:50.748" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:50.748" endtime="20210327 22:49:50.749"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.747" endtime="20210327 22:49:50.749"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:50.750" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:50.750" endtime="20210327 22:49:50.750"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:50.751" level="INFO">${body} = { "code": "2147" }</msg>
<status status="PASS" starttime="20210327 22:49:50.750" endtime="20210327 22:49:50.751"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:50.752" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/7c51332ae4b0417eace5d281d4f50c7d/accounts/f85f49c56e414fab87a3ebb4bf79ca41/entries/feba6027c412410c8e55983577dba977/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2147" } 
json=None</msg>
<msg timestamp="20210327 22:49:52.484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:50.751" endtime="20210327 22:49:52.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:52.487" level="INFO">{'id': 'feba6027c412410c8e55983577dba977', 'status': 'active', 'created_at': '2021-03-27T10:49:51.186', 'updated_at': '2021-03-27T10:49:53.640', 'key': {'value': '+5521927153281', 'type': 'phone'}, 'account': {'id': 'f85f49c56e414fab87a3ebb4bf79ca41', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '7c51332ae4b0417eace5d281d4f50c7d', 'owner': {'name': 'Holder de teste', 'national_registration': '28970154388', 'type': 'individual'}, 'routing_number': '001', 'number': '241612176', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210327 22:49:52.486" endtime="20210327 22:49:52.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:52.489" level="INFO">89d7957643c965f6</msg>
<status status="PASS" starttime="20210327 22:49:52.488" endtime="20210327 22:49:52.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:52.491" level="INFO">201</msg>
<status status="PASS" starttime="20210327 22:49:52.490" endtime="20210327 22:49:52.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:52.492" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:52.492" endtime="20210327 22:49:52.492"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.746" endtime="20210327 22:49:52.493"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:50.745" endtime="20210327 22:49:52.493"></status>
</kw>
<kw name="validar status code" library="status_code_validade">
<arguments>
<arg>status_code=201</arg>
<arg>message_error=Erro ao confirmar propriedade da chave pix</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == '500'</arg>
<arg>Fatal Error</arg>
<arg>msg=|| Fatal Error || EXECUÇÃO DA SUITE DE TESTE INTERROMPIDA :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
<arg>ELSE IF</arg>
<arg>'${response.status_code}' != '${status_code}'</arg>
<arg>Fail</arg>
<arg>msg=${message_error} :: status_code: ${response.status_code} || message: ${response.json()["message"]} || X-REQUEST-ID: ${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:52.494" endtime="20210327 22:49:52.496"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:52.493" endtime="20210327 22:49:52.496"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:45.146" endtime="20210327 22:49:52.496"></status>
</kw>
<kw name="receber pagamento pix admin" library="pix_admin_receive_payment">
<arguments>
<arg>amount=5000000</arg>
<arg>end_to_end_id=${end_to_end_id}</arg>
<arg>message_id=${message_id}</arg>
<arg>account_number=${account_number}</arg>
<arg>psp_code=${psp_code}</arg>
<arg>account_rounting_number=${account_routing_number}</arg>
<arg>account_type=${account_type}</arg>
<arg>national_registration=${national_registration}</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210327 22:49:52.501" level="INFO">${date} = 2021-03-27 22:49:52.499582</msg>
<status status="PASS" starttime="20210327 22:49:52.500" endtime="20210327 22:49:52.501"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>result_format=%Y-%m-%d</arg>
</arguments>
<assign>
<var>${datetime}</var>
</assign>
<msg timestamp="20210327 22:49:52.502" level="INFO">${datetime} = 2021-03-27</msg>
<status status="PASS" starttime="20210327 22:49:52.501" endtime="20210327 22:49:52.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210327 22:49:52.503" level="INFO">${amount} = 5000000</msg>
<status status="PASS" starttime="20210327 22:49:52.503" endtime="20210327 22:49:52.504"></status>
</kw>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210327 22:49:52.506" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210327 22:49:52.505" endtime="20210327 22:49:52.507"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:52.504" endtime="20210327 22:49:52.507"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210327 22:49:52.508" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210327 22:49:52.508" endtime="20210327 22:49:52.508"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"acceptance_date_time": "${datetime}T15:55:43.269Z",</arg>
<arg>"amount": ${amount},</arg>
<arg>"end_to_end_id": "${end_to_end_id}",</arg>
<arg>"message_id": "${message_id}",</arg>
<arg>"receiver": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "${account_number}",</arg>
<arg>"psp": "${psp_code}",</arg>
<arg>"routing_number": "${account_rounting_number}",</arg>
<arg>"type": "${account_type}"</arg>
<arg>},</arg>
<arg>"document": "${national_registration}"</arg>
<arg>},</arg>
<arg>"remittance_information": "Teste Crédito PIX",</arg>
<arg>"sender": {</arg>
<arg>"account_details": {</arg>
<arg>"number": "0243882974",</arg>
<arg>"psp": "17192451",</arg>
<arg>"routing_number": "0500",</arg>
<arg>"type": "cacc"</arg>
<arg>},</arg>
<arg>"document": "42808422644",</arg>
<arg>"identification": "Teste de Recebimento de PIX",</arg>
<arg>"name": "Massa ITI PFNAUmNNO"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210327 22:49:52.511" level="INFO">${body} = { "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224975761008684", "message_id": "M1946824286267613350496103227083", "receiver": { "account_d...</msg>
<status status="PASS" starttime="20210327 22:49:52.509" endtime="20210327 22:49:52.511"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/admin/internal_operation/pix</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210327 22:49:52.513" level="INFO">POST Request using : uri=/admin/internal_operation/pix, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "acceptance_date_time": "2021-03-27T15:55:43.269Z", "amount": 5000000, "end_to_end_id": "E1946824220210327224975761008684", "message_id": "M1946824286267613350496103227083", "receiver": { "account_details": { "number": "241612176", "psp": "19468242", "routing_number": "001", "type": "cacc" }, "document": "28970154388" }, "remittance_information": "Teste Crédito PIX", "sender": { "account_details": { "number": "0243882974", "psp": "17192451", "routing_number": "0500", "type": "cacc" }, "document": "42808422644", "identification": "Teste de Recebimento de PIX", "name": "Massa ITI PFNAUmNNO" } } 
json=None</msg>
<msg timestamp="20210327 22:49:53.257" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:52.512" endtime="20210327 22:49:53.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210327 22:49:53.259" level="INFO">{'code': 4001, 'status': 'conflict', 'type': 'precondition_failed', 'message': 'Duplicated endToEndId', 'category': 'business', 'status_code': 409}</msg>
<status status="PASS" starttime="20210327 22:49:53.258" endtime="20210327 22:49:53.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210327 22:49:53.260" level="INFO">5d58f5d7f77d9a2b</msg>
<status status="PASS" starttime="20210327 22:49:53.260" endtime="20210327 22:49:53.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:53.262" level="INFO">409</msg>
<status status="PASS" starttime="20210327 22:49:53.261" endtime="20210327 22:49:53.263"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210327 22:49:53.263" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210327 22:49:53.263" endtime="20210327 22:49:53.263"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:52.498" endtime="20210327 22:49:53.264"></status>
</kw>
<kw name="validar conflict" library="conflict">
<arguments>
<arg>message=Duplicated endToEndId</arg>
<arg>message_code=4001</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validando response precondition failed</arg>
</arguments>
<msg timestamp="20210327 22:49:53.267" level="INFO">Validando response precondition failed</msg>
<status status="PASS" starttime="20210327 22:49:53.267" endtime="20210327 22:49:53.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210327 22:49:53.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:53.268" endtime="20210327 22:49:53.269"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>conflict</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:53.270" endtime="20210327 22:49:53.270"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["category"]}</arg>
<arg>business</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:53.271" endtime="20210327 22:49:53.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["code"]}</arg>
<arg>${message_code}</arg>
</arguments>
<msg timestamp="20210327 22:49:53.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:53.272" endtime="20210327 22:49:53.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["status_code"]}</arg>
<arg>409</arg>
</arguments>
<msg timestamp="20210327 22:49:53.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210327 22:49:53.273" endtime="20210327 22:49:53.274"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["message"]}</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:53.274" endtime="20210327 22:49:53.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["type"]}</arg>
<arg>precondition_failed</arg>
</arguments>
<status status="PASS" starttime="20210327 22:49:53.276" endtime="20210327 22:49:53.276"></status>
</kw>
<status status="PASS" starttime="20210327 22:49:53.267" endtime="20210327 22:49:53.277"></status>
</kw>
<doc>Não permitir o recebimento de PIX com o mesmo End to End</doc>
<tags>
<tag>smoke_test</tag>
</tags>
<status status="PASS" starttime="20210327 22:49:37.111" endtime="20210327 22:49:53.277" critical="yes"></status>
</test>
<doc>Funcionalidade: Recebimento de PIX
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo receber um pagamento PIX</doc>
<status status="PASS" starttime="20210327 22:49:01.051" endtime="20210327 22:49:53.282"></status>
</suite>
<status status="PASS" starttime="20210327 22:49:01.050" endtime="20210327 22:49:53.287"></status>
</suite>
<status status="FAIL" starttime="20210327 22:48:35.442" endtime="20210327 22:49:53.291"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="1">Critical Tests</stat>
<stat pass="6" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="1">smoke_test</stat>
</tag>
<suite>
<stat pass="6" fail="1" id="s1" name="Pix-Payments">Pix-Payments</stat>
<stat pass="2" fail="1" id="s1-s1" name="Envio">Pix-Payments.Envio</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Cancelar Pagamento PIX">Pix-Payments.Envio.Cancelar Pagamento PIX</stat>
<stat pass="1" fail="1" id="s1-s1-s2" name="Criar Pagamento PIX">Pix-Payments.Envio.Criar Pagamento PIX</stat>
<stat pass="4" fail="0" id="s1-s2" name="Recebimento">Pix-Payments.Recebimento</stat>
<stat pass="4" fail="0" id="s1-s2-s1" name="Receber Pagamento PIX">Pix-Payments.Recebimento.Receber Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20210322 02:37:00.255" rpa="false">
<suite id="s1" name="Pix-Payments" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments">
<suite id="s1-s1" name="Envio" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio">
<suite id="s1-s1-s1" name="Confirmar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Confirmar Pagamento PIX.robot">
<test id="s1-s1-s1-t1" name="CenÃ¡rio: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:37:00.941" level="INFO">${phone} = 13069292</msg>
<status status="PASS" starttime="20210322 02:37:00.941" endtime="20210322 02:37:00.941"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:37:00.942" level="INFO">${phone_pix} = +5521913069292</msg>
<status status="PASS" starttime="20210322 02:37:00.942" endtime="20210322 02:37:00.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.943" level="INFO">${phone_pix} = +5521913069292</msg>
<status status="PASS" starttime="20210322 02:37:00.942" endtime="20210322 02:37:00.943"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:37:00.943" level="INFO">${email_pix} = melomarcela@da.com</msg>
<status status="PASS" starttime="20210322 02:37:00.943" endtime="20210322 02:37:00.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.944" level="INFO">${email_pix} = melomarcela@da.com</msg>
<status status="PASS" starttime="20210322 02:37:00.943" endtime="20210322 02:37:00.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:00.946" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:00.945" endtime="20210322 02:37:00.946"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:00.945" endtime="20210322 02:37:00.946"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:00.947" level="INFO">${national_registration} = 79.580.423/0001-88</msg>
<status status="PASS" starttime="20210322 02:37:00.946" endtime="20210322 02:37:00.947"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:00.947" level="INFO">${national_registration} = 79580423/0001-88</msg>
<status status="PASS" starttime="20210322 02:37:00.947" endtime="20210322 02:37:00.947"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:00.948" level="INFO">${national_registration} = 79580423/000188</msg>
<status status="PASS" starttime="20210322 02:37:00.948" endtime="20210322 02:37:00.948"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:00.949" level="INFO">${national_registration} = 79580423000188</msg>
<status status="PASS" starttime="20210322 02:37:00.948" endtime="20210322 02:37:00.949"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.949" level="INFO">${national_registration} = 79580423000188</msg>
<status status="PASS" starttime="20210322 02:37:00.949" endtime="20210322 02:37:00.949"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:37:00.950" level="INFO">${identity_card} = 436178254</msg>
<status status="PASS" starttime="20210322 02:37:00.950" endtime="20210322 02:37:00.950"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.951" level="INFO">${identity_card} = 436178254</msg>
<status status="PASS" starttime="20210322 02:37:00.950" endtime="20210322 02:37:00.951"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:00.953" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:00.953" endtime="20210322 02:37:00.954"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:00.952" endtime="20210322 02:37:00.954"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.954" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 02:37:00.954" endtime="20210322 02:37:00.954"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.955" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:37:00.955" endtime="20210322 02:37:00.955"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:00.955" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 02:37:00.955" endtime="20210322 02:37:00.955"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:00.956" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:00.956" endtime="20210322 02:37:00.956"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:00.957" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "79580423000188", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 02:37:00.957" endtime="20210322 02:37:00.957"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:00.958" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "79580423000188", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 02:37:01.668" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:00.958" endtime="20210322 02:37:01.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.669" level="INFO">{'id': 'f0c74092c8f74dd385ac2d235e5185b5', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:37:02.447511', 'updated_at': '2021-03-22T02:37:02.447514', 'type': 'business', 'national_registration': '79580423000188', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:01.669" endtime="20210322 02:37:01.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.670" level="INFO">40ff6dbfd3d12bda</msg>
<status status="PASS" starttime="20210322 02:37:01.669" endtime="20210322 02:37:01.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.671" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "79580423000188", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 02:37:01.670" endtime="20210322 02:37:01.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.671" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:01.671" endtime="20210322 02:37:01.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:01.672" level="INFO">${holder_external_key} = f0c74092c8f74dd385ac2d235e5185b5</msg>
<status status="PASS" starttime="20210322 02:37:01.672" endtime="20210322 02:37:01.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.673" level="INFO">${holder_external_key} = f0c74092c8f74dd385ac2d235e5185b5</msg>
<status status="PASS" starttime="20210322 02:37:01.673" endtime="20210322 02:37:01.674"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:00.951" endtime="20210322 02:37:01.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:01.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:01.674" endtime="20210322 02:37:01.675"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:01.676" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:01.675" endtime="20210322 02:37:01.676"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:01.677" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:37:01.676" endtime="20210322 02:37:01.677"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:01.678" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:37:01.980" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:01.677" endtime="20210322 02:37:01.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.982" level="INFO">{'id': '8de66ca55b37471db859ecb985c067dc', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/phones/8de66ca55b37471db859ecb985c067dc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:01.981" endtime="20210322 02:37:01.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.985" level="INFO">ee6174489d708096</msg>
<status status="PASS" starttime="20210322 02:37:01.984" endtime="20210322 02:37:01.985"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.987" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:01.986" endtime="20210322 02:37:01.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:01.990" level="INFO">${phone_external_key} = 8de66ca55b37471db859ecb985c067dc</msg>
<status status="PASS" starttime="20210322 02:37:01.989" endtime="20210322 02:37:01.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:01.991" level="INFO">${phone_external_key} = 8de66ca55b37471db859ecb985c067dc</msg>
<status status="PASS" starttime="20210322 02:37:01.991" endtime="20210322 02:37:01.992"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:01.675" endtime="20210322 02:37:01.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:01.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:01.992" endtime="20210322 02:37:01.994"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:01.996" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:01.995" endtime="20210322 02:37:01.996"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:01.997" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:37:01.996" endtime="20210322 02:37:01.997"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:01.998" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:37:02.306" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:01.998" endtime="20210322 02:37:02.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.308" level="INFO">{'id': '552d2e2654d74d4ca244cec8c344c6ee', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/addresses/552d2e2654d74d4ca244cec8c344c6ee', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:02.307" endtime="20210322 02:37:02.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.310" level="INFO">253e4c3f17821cd9</msg>
<status status="PASS" starttime="20210322 02:37:02.310" endtime="20210322 02:37:02.311"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.312" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.311" endtime="20210322 02:37:02.312"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:02.314" level="INFO">${address_external_key} = 552d2e2654d74d4ca244cec8c344c6ee</msg>
<status status="PASS" starttime="20210322 02:37:02.313" endtime="20210322 02:37:02.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.316" level="INFO">${address_external_key} = 552d2e2654d74d4ca244cec8c344c6ee</msg>
<status status="PASS" starttime="20210322 02:37:02.315" endtime="20210322 02:37:02.316"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:01.994" endtime="20210322 02:37:02.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:02.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.316" endtime="20210322 02:37:02.318"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:02.320" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:02.319" endtime="20210322 02:37:02.320"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:02.321" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:02.323" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:02.321" endtime="20210322 02:37:02.324"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:02.325" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:02.621" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.324" endtime="20210322 02:37:02.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.622" level="INFO">{'id': '0983b1a3f9244b2791c1721fb2b4d630', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/documents/0983b1a3f9244b2791c1721fb2b4d630', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/documents/0983b1a3f9244b2791c1721fb2b4d630/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:02.621" endtime="20210322 02:37:02.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.622" level="INFO">5bc9fbe253f746cd</msg>
<status status="PASS" starttime="20210322 02:37:02.622" endtime="20210322 02:37:02.622"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.623" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.623" endtime="20210322 02:37:02.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:02.624" level="INFO">${document_external_key} = 0983b1a3f9244b2791c1721fb2b4d630</msg>
<status status="PASS" starttime="20210322 02:37:02.624" endtime="20210322 02:37:02.624"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.625" level="INFO">${document_external_key} = 0983b1a3f9244b2791c1721fb2b4d630</msg>
<status status="PASS" starttime="20210322 02:37:02.624" endtime="20210322 02:37:02.625"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:02.318" endtime="20210322 02:37:02.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:02.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.625" endtime="20210322 02:37:02.625"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:02.626" level="INFO">${partner_individual_national_registration} = 951.462.830-60</msg>
<status status="PASS" starttime="20210322 02:37:02.626" endtime="20210322 02:37:02.626"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:02.626" level="INFO">${partner_individual_national_registration} = 951462830-60</msg>
<status status="PASS" starttime="20210322 02:37:02.626" endtime="20210322 02:37:02.626"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:02.627" level="INFO">${partner_individual_national_registration} = 95146283060</msg>
<status status="PASS" starttime="20210322 02:37:02.627" endtime="20210322 02:37:02.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.627" level="INFO">${partner_individual_national_registration} = 95146283060</msg>
<status status="PASS" starttime="20210322 02:37:02.627" endtime="20210322 02:37:02.627"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 02:37:02.628" level="INFO">${partner_individual_identity_card} = 816752308</msg>
<status status="PASS" starttime="20210322 02:37:02.628" endtime="20210322 02:37:02.628"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.628" level="INFO">${partner_individual_identity_card} = 816752308</msg>
<status status="PASS" starttime="20210322 02:37:02.628" endtime="20210322 02:37:02.628"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:02.630" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:02.629" endtime="20210322 02:37:02.630"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:02.631" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "95146283060", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e...</msg>
<status status="PASS" starttime="20210322 02:37:02.630" endtime="20210322 02:37:02.631"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:02.632" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "95146283060", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Individual Partner", "identity_card": "816752308", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:37:02.874" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.631" endtime="20210322 02:37:02.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.876" level="INFO">{'id': '4a988da21b88414faf9da5a720561f00', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T02:37:03.648746', 'updated_at': '2021-03-22T02:37:03.648748', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '95146283060', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Individual Partner', 'identity_card': '816752308', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:02.875" endtime="20210322 02:37:02.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.877" level="INFO">77e2ac3a700c95ce</msg>
<status status="PASS" starttime="20210322 02:37:02.876" endtime="20210322 02:37:02.877"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.878" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.877" endtime="20210322 02:37:02.878"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:02.879" level="INFO">${partner_external_key} = 4a988da21b88414faf9da5a720561f00</msg>
<status status="PASS" starttime="20210322 02:37:02.878" endtime="20210322 02:37:02.879"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:02.880" level="INFO">${partner_external_key} = 4a988da21b88414faf9da5a720561f00</msg>
<status status="PASS" starttime="20210322 02:37:02.880" endtime="20210322 02:37:02.880"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:02.629" endtime="20210322 02:37:02.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:02.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.881" endtime="20210322 02:37:02.881"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:02.883" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:02.882" endtime="20210322 02:37:02.883"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:02.884" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 02:37:02.883" endtime="20210322 02:37:02.884"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:02.885" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 02:37:03.103" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:02.884" endtime="20210322 02:37:03.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.106" level="INFO">{'id': '0e374b381d904cea97aebed0e732539e', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/phones/0e374b381d904cea97aebed0e732539e', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:03.104" endtime="20210322 02:37:03.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.108" level="INFO">334fbd265495247b</msg>
<status status="PASS" starttime="20210322 02:37:03.107" endtime="20210322 02:37:03.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.111" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.110" endtime="20210322 02:37:03.111"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:03.114" level="INFO">${holder_external_key} = 0e374b381d904cea97aebed0e732539e</msg>
<status status="PASS" starttime="20210322 02:37:03.112" endtime="20210322 02:37:03.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.115" level="INFO">${phone_external_key} = 8de66ca55b37471db859ecb985c067dc</msg>
<status status="PASS" starttime="20210322 02:37:03.115" endtime="20210322 02:37:03.116"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:02.882" endtime="20210322 02:37:03.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:03.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.116" endtime="20210322 02:37:03.118"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:03.120" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:03.119" endtime="20210322 02:37:03.120"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:03.121" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:37:03.120" endtime="20210322 02:37:03.121"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:03.123" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 02:37:03.353" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.122" endtime="20210322 02:37:03.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.354" level="INFO">{'id': 'bc7899faf107463986b565559c2206ca', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/addresses/bc7899faf107463986b565559c2206ca', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:03.353" endtime="20210322 02:37:03.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.355" level="INFO">8bc50705eeb6b970</msg>
<status status="PASS" starttime="20210322 02:37:03.355" endtime="20210322 02:37:03.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.357" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.356" endtime="20210322 02:37:03.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:03.359" level="INFO">${address_external_key} = bc7899faf107463986b565559c2206ca</msg>
<status status="PASS" starttime="20210322 02:37:03.358" endtime="20210322 02:37:03.359"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.361" level="INFO">${address_external_key} = bc7899faf107463986b565559c2206ca</msg>
<status status="PASS" starttime="20210322 02:37:03.360" endtime="20210322 02:37:03.361"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:03.118" endtime="20210322 02:37:03.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:03.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.361" endtime="20210322 02:37:03.363"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:03.365" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:03.364" endtime="20210322 02:37:03.365"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:03.365" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:03.367" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:03.365" endtime="20210322 02:37:03.368"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:03.369" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:03.700" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.368" endtime="20210322 02:37:03.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.701" level="INFO">{'id': '5e38443902cf4ed9b42628be3de78749', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents/5e38443902cf4ed9b42628be3de78749', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents/5e38443902cf4ed9b42628be3de78749/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:03.701" endtime="20210322 02:37:03.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.701" level="INFO">cede40b9ed031b2a</msg>
<status status="PASS" starttime="20210322 02:37:03.701" endtime="20210322 02:37:03.701"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.702" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.702" endtime="20210322 02:37:03.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:03.703" level="INFO">${document_external_key} = 5e38443902cf4ed9b42628be3de78749</msg>
<status status="PASS" starttime="20210322 02:37:03.702" endtime="20210322 02:37:03.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:03.703" level="INFO">${document_external_key} = 5e38443902cf4ed9b42628be3de78749</msg>
<status status="PASS" starttime="20210322 02:37:03.703" endtime="20210322 02:37:03.703"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:03.363" endtime="20210322 02:37:03.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:03.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.703" endtime="20210322 02:37:03.703"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:03.704" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:03.704" endtime="20210322 02:37:03.704"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:03.704" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:03.705" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:03.704" endtime="20210322 02:37:03.705"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:03.706" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:04.031" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:03.705" endtime="20210322 02:37:04.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.033" level="INFO">{'id': '7001763ddcd545dbb1f79088513bb0c2', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents/7001763ddcd545dbb1f79088513bb0c2', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents/7001763ddcd545dbb1f79088513bb0c2/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:04.032" endtime="20210322 02:37:04.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.035" level="INFO">a3c6c23e6f8d3f71</msg>
<status status="PASS" starttime="20210322 02:37:04.034" endtime="20210322 02:37:04.035"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.037" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.036" endtime="20210322 02:37:04.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:04.039" level="INFO">${document_external_key} = 7001763ddcd545dbb1f79088513bb0c2</msg>
<status status="PASS" starttime="20210322 02:37:04.038" endtime="20210322 02:37:04.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.040" level="INFO">${document_external_key} = 7001763ddcd545dbb1f79088513bb0c2</msg>
<status status="PASS" starttime="20210322 02:37:04.040" endtime="20210322 02:37:04.040"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:03.703" endtime="20210322 02:37:04.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:04.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.041" endtime="20210322 02:37:04.041"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:04.043" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:04.042" endtime="20210322 02:37:04.043"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:04.044" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:04.045" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:04.044" endtime="20210322 02:37:04.046"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:04.047" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:04.300" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.046" endtime="20210322 02:37:04.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.301" level="INFO">{'id': 'fb8c739a15644a259b9bbebca91d4b79', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents/fb8c739a15644a259b9bbebca91d4b79', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/partners/4a988da21b88414faf9da5a720561f00/documents/fb8c739a15644a259b9bbebca91d4b79/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:04.301" endtime="20210322 02:37:04.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.303" level="INFO">b586dbf4e3261759</msg>
<status status="PASS" starttime="20210322 02:37:04.303" endtime="20210322 02:37:04.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.304" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.304" endtime="20210322 02:37:04.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:04.305" level="INFO">${document_external_key} = fb8c739a15644a259b9bbebca91d4b79</msg>
<status status="PASS" starttime="20210322 02:37:04.305" endtime="20210322 02:37:04.305"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.306" level="INFO">${document_external_key} = fb8c739a15644a259b9bbebca91d4b79</msg>
<status status="PASS" starttime="20210322 02:37:04.305" endtime="20210322 02:37:04.306"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:04.042" endtime="20210322 02:37:04.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:04.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.306" endtime="20210322 02:37:04.307"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:04.308" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:04.307" endtime="20210322 02:37:04.308"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:04.308" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:04.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.308" endtime="20210322 02:37:04.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.601" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:37:04.600" endtime="20210322 02:37:04.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.602" level="INFO">bef72d268f83f112</msg>
<status status="PASS" starttime="20210322 02:37:04.602" endtime="20210322 02:37:04.602"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.603" endtime="20210322 02:37:04.603"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:04.307" endtime="20210322 02:37:04.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:04.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.604" endtime="20210322 02:37:04.604"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:37:04.605" level="INFO">${assessment_id} = 3ea3b928-7792-42a7-b1e7-d43107045e2e</msg>
<status status="PASS" starttime="20210322 02:37:04.605" endtime="20210322 02:37:04.605"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:37:04.607" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:37:04.606" endtime="20210322 02:37:04.607"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:37:04.607" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:37:04.607" endtime="20210322 02:37:04.607"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:37:04.608" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:37:04.607" endtime="20210322 02:37:04.608"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:04.608" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:04.608" endtime="20210322 02:37:04.608"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:04.609" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:37:04.609" endtime="20210322 02:37:04.609"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:04.610" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/f0c74092c8f74dd385ac2d235e5185b5/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "f0c74092c8f74dd385ac2d235e5185b5", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "3ea3b928-7792-42a7-b1e7-d43107045e2e" } } 
json=None</msg>
<msg timestamp="20210322 02:37:04.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.610" endtime="20210322 02:37:04.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.831" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:37:04.830" endtime="20210322 02:37:04.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.834" level="INFO">14bb1074a71b73a9</msg>
<status status="PASS" starttime="20210322 02:37:04.833" endtime="20210322 02:37:04.834"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:04.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.835" endtime="20210322 02:37:04.837"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:04.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.838" endtime="20210322 02:37:04.839"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:04.605" endtime="20210322 02:37:04.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:04.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.841" endtime="20210322 02:37:04.841"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:04.845" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:04.844" endtime="20210322 02:37:04.845"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:04.843" endtime="20210322 02:37:04.845"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:04.846" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/f0c74092c8f74dd385ac2d235e5185b5/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:05.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:04.846" endtime="20210322 02:37:05.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:05.486" level="INFO">{'items': [{'id': 'cec48b5349584b5ea526e98f55e0bfc1', 'holder': 'f0c74092c8f74dd385ac2d235e5185b5', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '8302200461', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:37:05.650742', 'updated_at': '2021-03-22T05:37:05.650742', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/cec48b5349584b5ea526e98f55e0bfc1', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:37:05.484" endtime="20210322 02:37:05.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:05.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:05.488" endtime="20210322 02:37:05.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:05.492" level="INFO">${account_external_key} = cec48b5349584b5ea526e98f55e0bfc1</msg>
<status status="PASS" starttime="20210322 02:37:05.490" endtime="20210322 02:37:05.492"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:05.494" level="INFO">${account_external_key} = cec48b5349584b5ea526e98f55e0bfc1</msg>
<status status="PASS" starttime="20210322 02:37:05.493" endtime="20210322 02:37:05.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:37:05.497" level="INFO">${account_number} = 8302200461</msg>
<status status="PASS" starttime="20210322 02:37:05.495" endtime="20210322 02:37:05.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:05.499" level="INFO">${account_number} = 8302200461</msg>
<status status="PASS" starttime="20210322 02:37:05.499" endtime="20210322 02:37:05.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:37:05.502" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:05.500" endtime="20210322 02:37:05.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:05.503" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:05.503" endtime="20210322 02:37:05.504"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:04.842" endtime="20210322 02:37:05.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:05.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:05.504" endtime="20210322 02:37:05.505"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:00.945" endtime="20210322 02:37:05.505"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:00.944" endtime="20210322 02:37:05.506"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:05.509" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:05.508" endtime="20210322 02:37:05.510"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:05.507" endtime="20210322 02:37:05.510"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 02:37:05.511" level="INFO">${uuid} = 75561d38-f5db-4af6-a6a7-345fce9b740a</msg>
<status status="PASS" starttime="20210322 02:37:05.510" endtime="20210322 02:37:05.511"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:05.512" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:05.512" endtime="20210322 02:37:05.513"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:05.511" endtime="20210322 02:37:05.513"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:05.513" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:05.513" endtime="20210322 02:37:05.513"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:05.514" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "75561d38-f5db-4af6-a6a7-345fce9b740a", "transaction_id": "75561d38-f5db-4af6-a6a7-345fce9b740a", "id": "75561d38-f5db-4af6-a6a7-345f...</msg>
<status status="PASS" starttime="20210322 02:37:05.513" endtime="20210322 02:37:05.515"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:05.517" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/75561d38-f5db-4af6-a6a7-345fce9b740a, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "75561d38-f5db-4af6-a6a7-345fce9b740a", "transaction_id": "75561d38-f5db-4af6-a6a7-345fce9b740a", "id": "75561d38-f5db-4af6-a6a7-345fce9b740a", "id_checking_account": "cec48b5349584b5ea526e98f55e0bfc1", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "75561d38-f5db-4af6-a6a7-345fce9b740a", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 02:37:06.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:05.515" endtime="20210322 02:37:06.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:06.168" endtime="20210322 02:37:06.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:06.169" endtime="20210322 02:37:06.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:06.170" endtime="20210322 02:37:06.170"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:05.507" endtime="20210322 02:37:06.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:06.173" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:06.172" endtime="20210322 02:37:06.173"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:06.172" endtime="20210322 02:37:06.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.174" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:37:06.173" endtime="20210322 02:37:06.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.174" level="INFO">${value} = melomarcela@da.com</msg>
<status status="PASS" starttime="20210322 02:37:06.174" endtime="20210322 02:37:06.174"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:06.175" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:06.174" endtime="20210322 02:37:06.175"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:06.175" level="INFO">${body} = { "type": "email", "value": "melomarcela@da.com" }</msg>
<status status="PASS" starttime="20210322 02:37:06.175" endtime="20210322 02:37:06.175"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:06.176" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f0c74092c8f74dd385ac2d235e5185b5/accounts/cec48b5349584b5ea526e98f55e0bfc1/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "melomarcela@da.com" } 
json=None</msg>
<msg timestamp="20210322 02:37:06.811" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:06.176" endtime="20210322 02:37:06.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.811" level="INFO">{'id': '8f74b1fc3a264b2c85af86e5dcad943c', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:37:07.649', 'updated_at': '2021-03-22T02:37:07.649', 'key': {'value': 'melomarcela@da.com', 'type': 'email'}, 'account': {'id': 'cec48b5349584b5ea526e98f55e0bfc1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f0c74092c8f74dd385ac2d235e5185b5', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '79580423000188', 'type': 'business'}, 'routing_number': '001', 'number': '8302200461', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:06.811" endtime="20210322 02:37:06.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.812" level="INFO">8fbc6b31843bd49c</msg>
<status status="PASS" starttime="20210322 02:37:06.812" endtime="20210322 02:37:06.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.812" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:37:06.812" endtime="20210322 02:37:06.813"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.813" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:06.813" endtime="20210322 02:37:06.813"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:06.814" endtime="20210322 02:37:06.814"></status>
</kw>
<msg timestamp="20210322 02:37:06.814" level="INFO">${entry_external_key} = 8f74b1fc3a264b2c85af86e5dcad943c</msg>
<status status="PASS" starttime="20210322 02:37:06.813" endtime="20210322 02:37:06.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.815" level="INFO">${entry_external_key} = 8f74b1fc3a264b2c85af86e5dcad943c</msg>
<status status="PASS" starttime="20210322 02:37:06.815" endtime="20210322 02:37:06.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:06.816" endtime="20210322 02:37:06.817"></status>
</kw>
<msg timestamp="20210322 02:37:06.817" level="INFO">${entry_key_value} = melomarcela@da.com</msg>
<status status="PASS" starttime="20210322 02:37:06.815" endtime="20210322 02:37:06.817"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:37:06.817" level="INFO">${entry_key_value} = melomarcela@da.com</msg>
<status status="PASS" starttime="20210322 02:37:06.817" endtime="20210322 02:37:06.817"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:06.171" endtime="20210322 02:37:06.817"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:06.171" endtime="20210322 02:37:06.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:06.819" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:06.819" endtime="20210322 02:37:06.820"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:06.819" endtime="20210322 02:37:06.820"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:06.820" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f0c74092c8f74dd385ac2d235e5185b5/accounts/cec48b5349584b5ea526e98f55e0bfc1/entries/8f74b1fc3a264b2c85af86e5dcad943c/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:07.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:06.820" endtime="20210322 02:37:07.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:07.434" level="INFO">{'code': '8068'}</msg>
<status status="PASS" starttime="20210322 02:37:07.433" endtime="20210322 02:37:07.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:07.435" level="INFO">32adffcb79b06830</msg>
<status status="PASS" starttime="20210322 02:37:07.435" endtime="20210322 02:37:07.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:07.436" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:37:07.436" endtime="20210322 02:37:07.436"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:07.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:07.436" endtime="20210322 02:37:07.437"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:37:07.438" level="INFO">${verification_code} = 8068</msg>
<status status="PASS" starttime="20210322 02:37:07.437" endtime="20210322 02:37:07.438"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:07.439" level="INFO">${verification_code} = 8068</msg>
<status status="PASS" starttime="20210322 02:37:07.439" endtime="20210322 02:37:07.439"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:06.818" endtime="20210322 02:37:07.440"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:06.818" endtime="20210322 02:37:07.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:07.443" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:07.443" endtime="20210322 02:37:07.444"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:07.442" endtime="20210322 02:37:07.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:07.445" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:07.444" endtime="20210322 02:37:07.445"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:07.446" level="INFO">${body} = { "code": "8068" }</msg>
<status status="PASS" starttime="20210322 02:37:07.445" endtime="20210322 02:37:07.446"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:07.447" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/f0c74092c8f74dd385ac2d235e5185b5/accounts/cec48b5349584b5ea526e98f55e0bfc1/entries/8f74b1fc3a264b2c85af86e5dcad943c/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "8068" } 
json=None</msg>
<msg timestamp="20210322 02:37:09.591" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:07.446" endtime="20210322 02:37:09.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:09.593" level="INFO">{'id': '8f74b1fc3a264b2c85af86e5dcad943c', 'status': 'active', 'created_at': '2021-03-22T02:37:07.649', 'updated_at': '2021-03-22T02:37:10.450', 'key': {'value': 'melomarcela@da.com', 'type': 'email'}, 'account': {'id': 'cec48b5349584b5ea526e98f55e0bfc1', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': 'f0c74092c8f74dd385ac2d235e5185b5', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '79580423000188', 'type': 'business'}, 'routing_number': '001', 'number': '8302200461', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:09.592" endtime="20210322 02:37:09.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:09.595" level="INFO">8e6c84775490107c</msg>
<status status="PASS" starttime="20210322 02:37:09.594" endtime="20210322 02:37:09.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:09.596" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:09.596" endtime="20210322 02:37:09.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:09.598" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:09.597" endtime="20210322 02:37:09.598"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:07.441" endtime="20210322 02:37:09.599"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:07.440" endtime="20210322 02:37:09.599"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:09.601" endtime="20210322 02:37:09.602"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:09.600" endtime="20210322 02:37:09.602"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:00.941" endtime="20210322 02:37:09.603"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:09.606" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:09.606" endtime="20210322 02:37:09.607"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:09.605" endtime="20210322 02:37:09.607"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:09.608" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:09.608" endtime="20210322 02:37:09.608"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:09.610" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 02:37:09.609" endtime="20210322 02:37:09.610"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:09.611" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/f0c74092c8f74dd385ac2d235e5185b5/accounts/cec48b5349584b5ea526e98f55e0bfc1/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 02:37:10.245" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:09.610" endtime="20210322 02:37:10.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.246" level="INFO">{'id': '58b8a4d5bc1347d3a1f1e1c6ed98b627', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103220537bc91c6b0c80', 'message_id': 'M19468242fa009eaa42b7aa97211427e', 'amount': 100, 'created_at': '2021-03-22T02:37:11.066553', 'description': 'Envio de PIX', 'debtor': {'national_registration': '79580423000188', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': 'f0c74092c8f74dd385ac2d235e5185b5', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'cec48b5349584b5ea526e98f55e0bfc1', 'number': '8302200461', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 02:37:10.245" endtime="20210322 02:37:10.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.247" level="INFO">a2d7eee0543911c3</msg>
<status status="PASS" starttime="20210322 02:37:10.246" endtime="20210322 02:37:10.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.247" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:10.247" endtime="20210322 02:37:10.247"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.248" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:10.247" endtime="20210322 02:37:10.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:10.250" level="INFO">${payment_external_key} = 58b8a4d5bc1347d3a1f1e1c6ed98b627</msg>
<status status="PASS" starttime="20210322 02:37:10.248" endtime="20210322 02:37:10.250"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.251" level="INFO">${payment_external_key} = 58b8a4d5bc1347d3a1f1e1c6ed98b627</msg>
<status status="PASS" starttime="20210322 02:37:10.251" endtime="20210322 02:37:10.251"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 02:37:10.252" level="INFO">${end_to_end_id} = E19468242202103220537bc91c6b0c80</msg>
<status status="PASS" starttime="20210322 02:37:10.251" endtime="20210322 02:37:10.252"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.253" level="INFO">${end_to_end_id} = E19468242202103220537bc91c6b0c80</msg>
<status status="PASS" starttime="20210322 02:37:10.253" endtime="20210322 02:37:10.253"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 02:37:10.254" level="INFO">${message_id} = M19468242fa009eaa42b7aa97211427e</msg>
<status status="PASS" starttime="20210322 02:37:10.253" endtime="20210322 02:37:10.254"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.255" level="INFO">${message_id} = M19468242fa009eaa42b7aa97211427e</msg>
<status status="PASS" starttime="20210322 02:37:10.254" endtime="20210322 02:37:10.255"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:09.603" endtime="20210322 02:37:10.255"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:10.258" level="INFO">${date} = 2021-03-22 02:37:10.257113</msg>
<status status="PASS" starttime="20210322 02:37:10.257" endtime="20210322 02:37:10.258"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:10.258" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 02:37:10.258" endtime="20210322 02:37:10.258"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:10.259" endtime="20210322 02:37:10.259"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:10.259" endtime="20210322 02:37:10.260"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.260" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:10.260" endtime="20210322 02:37:10.260"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.261" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:10.260" endtime="20210322 02:37:10.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:10.261" endtime="20210322 02:37:10.262"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:10.262" endtime="20210322 02:37:10.262"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:10.262" endtime="20210322 02:37:10.263"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:10.263" endtime="20210322 02:37:10.263"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.264" level="FAIL">individual != business</msg>
<status status="FAIL" starttime="20210322 02:37:10.264" endtime="20210322 02:37:10.264"></status>
</kw>
<status status="FAIL" starttime="20210322 02:37:10.255" endtime="20210322 02:37:10.264"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Individual</doc>
<status status="FAIL" starttime="20210322 02:37:00.940" endtime="20210322 02:37:10.265" critical="yes">individual != business</status>
</test>
<test id="s1-s1-s1-t2" name="CenÃ¡rio: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:37:10.267" level="INFO">${phone} = 37945499</msg>
<status status="PASS" starttime="20210322 02:37:10.266" endtime="20210322 02:37:10.267"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:37:10.267" level="INFO">${phone_pix} = +5521937945499</msg>
<status status="PASS" starttime="20210322 02:37:10.267" endtime="20210322 02:37:10.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.268" level="INFO">${phone_pix} = +5521937945499</msg>
<status status="PASS" starttime="20210322 02:37:10.267" endtime="20210322 02:37:10.268"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:37:10.269" level="INFO">${email_pix} = mnogueira@cavalcanti.br</msg>
<status status="PASS" starttime="20210322 02:37:10.268" endtime="20210322 02:37:10.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.269" level="INFO">${email_pix} = mnogueira@cavalcanti.br</msg>
<status status="PASS" starttime="20210322 02:37:10.269" endtime="20210322 02:37:10.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:10.271" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:10.270" endtime="20210322 02:37:10.271"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.270" endtime="20210322 02:37:10.271"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:10.271" level="INFO">${national_registration} = 592.167.803-12</msg>
<status status="PASS" starttime="20210322 02:37:10.271" endtime="20210322 02:37:10.271"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:10.272" level="INFO">${national_registration} = 592167803-12</msg>
<status status="PASS" starttime="20210322 02:37:10.272" endtime="20210322 02:37:10.272"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:10.272" level="INFO">${national_registration} = 59216780312</msg>
<status status="PASS" starttime="20210322 02:37:10.272" endtime="20210322 02:37:10.272"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.273" level="INFO">${national_registration} = 59216780312</msg>
<status status="PASS" starttime="20210322 02:37:10.273" endtime="20210322 02:37:10.273"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:37:10.273" level="INFO">${identity_card} = 532178464</msg>
<status status="PASS" starttime="20210322 02:37:10.273" endtime="20210322 02:37:10.273"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.274" level="INFO">${identity_card} = 532178464</msg>
<status status="PASS" starttime="20210322 02:37:10.273" endtime="20210322 02:37:10.274"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:10.275" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:10.275" endtime="20210322 02:37:10.275"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.274" endtime="20210322 02:37:10.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.276" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:37:10.275" endtime="20210322 02:37:10.276"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.276" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:37:10.276" endtime="20210322 02:37:10.276"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:10.277" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:10.277" endtime="20210322 02:37:10.277"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:10.278" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59216780312", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder",...</msg>
<status status="PASS" starttime="20210322 02:37:10.277" endtime="20210322 02:37:10.278"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:10.279" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59216780312", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "532178464", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:37:10.936" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:10.278" endtime="20210322 02:37:10.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.937" level="INFO">{'id': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:37:11.741279', 'updated_at': '2021-03-22T02:37:11.741281', 'type': 'individual', 'national_registration': '59216780312', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Holder', 'identity_card': '532178464', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:10.937" endtime="20210322 02:37:10.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.937" level="INFO">a6585b18a190ac0c</msg>
<status status="PASS" starttime="20210322 02:37:10.937" endtime="20210322 02:37:10.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.938" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "59216780312", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "532178464", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:37:10.938" endtime="20210322 02:37:10.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.938" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:10.938" endtime="20210322 02:37:10.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:10.939" level="INFO">${holder_external_key} = 6ee05b83be0b4fb29e8af8db2b7ac8c2</msg>
<status status="PASS" starttime="20210322 02:37:10.939" endtime="20210322 02:37:10.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.939" level="INFO">${holder_external_key} = 6ee05b83be0b4fb29e8af8db2b7ac8c2</msg>
<status status="PASS" starttime="20210322 02:37:10.939" endtime="20210322 02:37:10.939"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.274" endtime="20210322 02:37:10.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:10.940" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:37:10.940" endtime="20210322 02:37:10.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:10.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:10.940" endtime="20210322 02:37:10.940"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:10.941" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:10.941" endtime="20210322 02:37:10.941"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:10.942" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:37:10.942" endtime="20210322 02:37:10.942"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:10.942" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:37:11.200" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:10.942" endtime="20210322 02:37:11.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.200" level="INFO">{'id': '34afcc0662fa4ea094d451e7577e7ded', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/phones/34afcc0662fa4ea094d451e7577e7ded', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:11.200" endtime="20210322 02:37:11.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.201" level="INFO">531b84dc082e06fe</msg>
<status status="PASS" starttime="20210322 02:37:11.201" endtime="20210322 02:37:11.201"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.202" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.202" endtime="20210322 02:37:11.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:11.203" level="INFO">${phone_external_key} = 34afcc0662fa4ea094d451e7577e7ded</msg>
<status status="PASS" starttime="20210322 02:37:11.202" endtime="20210322 02:37:11.203"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.204" level="INFO">${phone_external_key} = 34afcc0662fa4ea094d451e7577e7ded</msg>
<status status="PASS" starttime="20210322 02:37:11.203" endtime="20210322 02:37:11.204"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.941" endtime="20210322 02:37:11.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:11.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.204" endtime="20210322 02:37:11.204"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:11.206" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:11.205" endtime="20210322 02:37:11.206"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:11.206" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:37:11.206" endtime="20210322 02:37:11.207"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:11.207" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:37:11.428" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.207" endtime="20210322 02:37:11.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.429" level="INFO">{'id': '3c0adb71fe1f4bacb269787ef3cbadad', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/addresses/3c0adb71fe1f4bacb269787ef3cbadad', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:11.428" endtime="20210322 02:37:11.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.429" level="INFO">1354aa9bfb02b824</msg>
<status status="PASS" starttime="20210322 02:37:11.429" endtime="20210322 02:37:11.430"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.430" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.430" endtime="20210322 02:37:11.430"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:11.431" level="INFO">${address_external_key} = 3c0adb71fe1f4bacb269787ef3cbadad</msg>
<status status="PASS" starttime="20210322 02:37:11.430" endtime="20210322 02:37:11.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.431" level="INFO">${address_external_key} = 3c0adb71fe1f4bacb269787ef3cbadad</msg>
<status status="PASS" starttime="20210322 02:37:11.431" endtime="20210322 02:37:11.431"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:11.205" endtime="20210322 02:37:11.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:11.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.432" endtime="20210322 02:37:11.432"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:11.433" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:11.432" endtime="20210322 02:37:11.433"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:11.433" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:11.434" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:11.433" endtime="20210322 02:37:11.434"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:11.435" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:11.756" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.435" endtime="20210322 02:37:11.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.758" level="INFO">{'id': '4505c33de60c4d5f9c6175e5f7d1a4d8', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents/4505c33de60c4d5f9c6175e5f7d1a4d8', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents/4505c33de60c4d5f9c6175e5f7d1a4d8/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:11.756" endtime="20210322 02:37:11.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.760" level="INFO">b233b8ddb1a7fd82</msg>
<status status="PASS" starttime="20210322 02:37:11.759" endtime="20210322 02:37:11.760"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.761" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.760" endtime="20210322 02:37:11.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:11.764" level="INFO">${document_external_key} = 4505c33de60c4d5f9c6175e5f7d1a4d8</msg>
<status status="PASS" starttime="20210322 02:37:11.762" endtime="20210322 02:37:11.764"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:11.765" level="INFO">${document_external_key} = 4505c33de60c4d5f9c6175e5f7d1a4d8</msg>
<status status="PASS" starttime="20210322 02:37:11.765" endtime="20210322 02:37:11.766"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:11.432" endtime="20210322 02:37:11.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:11.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.767" endtime="20210322 02:37:11.768"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:11.770" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:11.770" endtime="20210322 02:37:11.770"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:11.771" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:11.775" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:11.771" endtime="20210322 02:37:11.775"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:11.776" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:12.143" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:11.775" endtime="20210322 02:37:12.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.144" level="INFO">{'id': '8ca77c8f89ea496cb6caa78b228f5505', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents/8ca77c8f89ea496cb6caa78b228f5505', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents/8ca77c8f89ea496cb6caa78b228f5505/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:12.144" endtime="20210322 02:37:12.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.145" level="INFO">78455dce533636c4</msg>
<status status="PASS" starttime="20210322 02:37:12.144" endtime="20210322 02:37:12.145"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.145" endtime="20210322 02:37:12.146"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:12.147" level="INFO">${document_external_key} = 8ca77c8f89ea496cb6caa78b228f5505</msg>
<status status="PASS" starttime="20210322 02:37:12.146" endtime="20210322 02:37:12.147"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.147" level="INFO">${document_external_key} = 8ca77c8f89ea496cb6caa78b228f5505</msg>
<status status="PASS" starttime="20210322 02:37:12.147" endtime="20210322 02:37:12.147"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:11.769" endtime="20210322 02:37:12.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:12.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.148" endtime="20210322 02:37:12.148"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:12.149" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:12.149" endtime="20210322 02:37:12.149"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:12.150" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:12.151" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:12.150" endtime="20210322 02:37:12.152"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:12.153" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:12.420" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.152" endtime="20210322 02:37:12.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.421" level="INFO">{'id': '8af317032d6a478e9510d7fa0356de4e', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents/8af317032d6a478e9510d7fa0356de4e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/documents/8af317032d6a478e9510d7fa0356de4e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:12.421" endtime="20210322 02:37:12.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.422" level="INFO">f97cc7ad686f340f</msg>
<status status="PASS" starttime="20210322 02:37:12.421" endtime="20210322 02:37:12.422"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.422" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.422" endtime="20210322 02:37:12.422"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:12.423" level="INFO">${document_external_key} = 8af317032d6a478e9510d7fa0356de4e</msg>
<status status="PASS" starttime="20210322 02:37:12.422" endtime="20210322 02:37:12.423"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.423" level="INFO">${document_external_key} = 8af317032d6a478e9510d7fa0356de4e</msg>
<status status="PASS" starttime="20210322 02:37:12.423" endtime="20210322 02:37:12.423"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:12.148" endtime="20210322 02:37:12.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:12.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.423" endtime="20210322 02:37:12.424"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:12.425" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:12.424" endtime="20210322 02:37:12.425"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:12.425" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:12.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.425" endtime="20210322 02:37:12.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.702" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:37:12.701" endtime="20210322 02:37:12.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.703" level="INFO">ee7e97932f10fcdc</msg>
<status status="PASS" starttime="20210322 02:37:12.702" endtime="20210322 02:37:12.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.703" endtime="20210322 02:37:12.704"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:12.424" endtime="20210322 02:37:12.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:12.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.704" endtime="20210322 02:37:12.705"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:37:12.706" level="INFO">${assessment_id} = 52e8cd13-9646-4455-88e5-493f4d953b8e</msg>
<status status="PASS" starttime="20210322 02:37:12.705" endtime="20210322 02:37:12.706"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:37:12.706" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:37:12.706" endtime="20210322 02:37:12.706"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:37:12.707" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:37:12.707" endtime="20210322 02:37:12.707"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:37:12.708" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:37:12.707" endtime="20210322 02:37:12.708"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:12.708" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:12.708" endtime="20210322 02:37:12.708"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:12.709" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:37:12.709" endtime="20210322 02:37:12.709"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:12.710" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "6ee05b83be0b4fb29e8af8db2b7ac8c2", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "52e8cd13-9646-4455-88e5-493f4d953b8e" } } 
json=None</msg>
<msg timestamp="20210322 02:37:12.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.710" endtime="20210322 02:37:12.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.917" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:37:12.916" endtime="20210322 02:37:12.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.918" level="INFO">75d4836fec2d984f</msg>
<status status="PASS" starttime="20210322 02:37:12.917" endtime="20210322 02:37:12.918"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:12.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.918" endtime="20210322 02:37:12.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:12.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.919" endtime="20210322 02:37:12.919"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:12.705" endtime="20210322 02:37:12.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:12.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.920" endtime="20210322 02:37:12.920"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:12.922" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:12.921" endtime="20210322 02:37:12.922"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:12.921" endtime="20210322 02:37:12.922"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:12.923" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:13.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:12.922" endtime="20210322 02:37:13.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:13.538" level="INFO">{'items': [{'id': '2780dec94d8f42b78b2e14646aaaacdd', 'holder': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '3389300392', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:37:13.746279', 'updated_at': '2021-03-22T05:37:13.746279', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/2780dec94d8f42b78b2e14646aaaacdd', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:37:13.537" endtime="20210322 02:37:13.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:13.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:13.538" endtime="20210322 02:37:13.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:13.539" level="INFO">${account_external_key} = 2780dec94d8f42b78b2e14646aaaacdd</msg>
<status status="PASS" starttime="20210322 02:37:13.539" endtime="20210322 02:37:13.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:13.540" level="INFO">${account_external_key} = 2780dec94d8f42b78b2e14646aaaacdd</msg>
<status status="PASS" starttime="20210322 02:37:13.539" endtime="20210322 02:37:13.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:37:13.540" level="INFO">${account_number} = 3389300392</msg>
<status status="PASS" starttime="20210322 02:37:13.540" endtime="20210322 02:37:13.540"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:13.541" level="INFO">${account_number} = 3389300392</msg>
<status status="PASS" starttime="20210322 02:37:13.541" endtime="20210322 02:37:13.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:37:13.542" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:13.541" endtime="20210322 02:37:13.542"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:13.542" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:13.542" endtime="20210322 02:37:13.542"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:12.921" endtime="20210322 02:37:13.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:13.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:13.543" endtime="20210322 02:37:13.543"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.270" endtime="20210322 02:37:13.543"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.269" endtime="20210322 02:37:13.543"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:13.545" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:13.545" endtime="20210322 02:37:13.545"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:13.544" endtime="20210322 02:37:13.545"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 02:37:13.546" level="INFO">${uuid} = 41b88c7b-2616-4e78-9745-f0f651e522ab</msg>
<status status="PASS" starttime="20210322 02:37:13.545" endtime="20210322 02:37:13.546"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:13.547" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:13.546" endtime="20210322 02:37:13.547"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:13.546" endtime="20210322 02:37:13.547"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:13.548" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:13.547" endtime="20210322 02:37:13.548"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:13.548" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "41b88c7b-2616-4e78-9745-f0f651e522ab", "transaction_id": "41b88c7b-2616-4e78-9745-f0f651e522ab", "id": "41b88c7b-2616-4e78-9745-f0f6...</msg>
<status status="PASS" starttime="20210322 02:37:13.548" endtime="20210322 02:37:13.548"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:13.550" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/41b88c7b-2616-4e78-9745-f0f651e522ab, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "41b88c7b-2616-4e78-9745-f0f651e522ab", "transaction_id": "41b88c7b-2616-4e78-9745-f0f651e522ab", "id": "41b88c7b-2616-4e78-9745-f0f651e522ab", "id_checking_account": "2780dec94d8f42b78b2e14646aaaacdd", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "41b88c7b-2616-4e78-9745-f0f651e522ab", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 02:37:14.208" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:13.549" endtime="20210322 02:37:14.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:14.210" endtime="20210322 02:37:14.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:14.212" endtime="20210322 02:37:14.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:14.214" endtime="20210322 02:37:14.216"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:13.544" endtime="20210322 02:37:14.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:14.223" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:14.222" endtime="20210322 02:37:14.224"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:14.221" endtime="20210322 02:37:14.224"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.225" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:37:14.225" endtime="20210322 02:37:14.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.226" level="INFO">${value} = mnogueira@cavalcanti.br</msg>
<status status="PASS" starttime="20210322 02:37:14.226" endtime="20210322 02:37:14.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:14.227" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:14.227" endtime="20210322 02:37:14.227"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:14.228" level="INFO">${body} = { "type": "email", "value": "mnogueira@cavalcanti.br" }</msg>
<status status="PASS" starttime="20210322 02:37:14.228" endtime="20210322 02:37:14.228"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:14.230" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "mnogueira@cavalcanti.br" } 
json=None</msg>
<msg timestamp="20210322 02:37:14.885" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:14.229" endtime="20210322 02:37:14.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.887" level="INFO">{'id': 'ac56402f31874672a8b5acb7e32bec26', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:37:15.737', 'updated_at': '2021-03-22T02:37:15.737', 'key': {'value': 'mnogueira@cavalcanti.br', 'type': 'email'}, 'account': {'id': '2780dec94d8f42b78b2e14646aaaacdd', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'owner': {'name': 'Holder de teste', 'national_registration': '59216780312', 'type': 'individual'}, 'routing_number': '001', 'number': '3389300392', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:14.886" endtime="20210322 02:37:14.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.888" level="INFO">8958caad5bff348c</msg>
<status status="PASS" starttime="20210322 02:37:14.887" endtime="20210322 02:37:14.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.890" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:37:14.889" endtime="20210322 02:37:14.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.891" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:14.890" endtime="20210322 02:37:14.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:14.893" endtime="20210322 02:37:14.895"></status>
</kw>
<msg timestamp="20210322 02:37:14.895" level="INFO">${entry_external_key} = ac56402f31874672a8b5acb7e32bec26</msg>
<status status="PASS" starttime="20210322 02:37:14.892" endtime="20210322 02:37:14.895"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.895" level="INFO">${entry_external_key} = ac56402f31874672a8b5acb7e32bec26</msg>
<status status="PASS" starttime="20210322 02:37:14.895" endtime="20210322 02:37:14.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:14.897" endtime="20210322 02:37:14.898"></status>
</kw>
<msg timestamp="20210322 02:37:14.898" level="INFO">${entry_key_value} = mnogueira@cavalcanti.br</msg>
<status status="PASS" starttime="20210322 02:37:14.896" endtime="20210322 02:37:14.898"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:37:14.900" level="INFO">${entry_key_value} = mnogueira@cavalcanti.br</msg>
<status status="PASS" starttime="20210322 02:37:14.899" endtime="20210322 02:37:14.900"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:14.220" endtime="20210322 02:37:14.900"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:14.217" endtime="20210322 02:37:14.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:14.904" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:14.904" endtime="20210322 02:37:14.905"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:14.903" endtime="20210322 02:37:14.905"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:14.906" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/entries/ac56402f31874672a8b5acb7e32bec26/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:15.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:14.905" endtime="20210322 02:37:15.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:15.500" level="INFO">{'code': '4266'}</msg>
<status status="PASS" starttime="20210322 02:37:15.498" endtime="20210322 02:37:15.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:15.501" level="INFO">54bac596253c0173</msg>
<status status="PASS" starttime="20210322 02:37:15.500" endtime="20210322 02:37:15.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:15.502" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:37:15.502" endtime="20210322 02:37:15.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:15.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:15.503" endtime="20210322 02:37:15.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:37:15.505" level="INFO">${verification_code} = 4266</msg>
<status status="PASS" starttime="20210322 02:37:15.504" endtime="20210322 02:37:15.505"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:15.507" level="INFO">${verification_code} = 4266</msg>
<status status="PASS" starttime="20210322 02:37:15.505" endtime="20210322 02:37:15.507"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:14.902" endtime="20210322 02:37:15.507"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:14.901" endtime="20210322 02:37:15.507"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:15.510" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:15.510" endtime="20210322 02:37:15.511"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:15.509" endtime="20210322 02:37:15.511"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:15.512" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:15.511" endtime="20210322 02:37:15.512"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:15.512" level="INFO">${body} = { "code": "4266" }</msg>
<status status="PASS" starttime="20210322 02:37:15.512" endtime="20210322 02:37:15.513"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:15.514" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/entries/ac56402f31874672a8b5acb7e32bec26/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "4266" } 
json=None</msg>
<msg timestamp="20210322 02:37:17.194" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:15.513" endtime="20210322 02:37:17.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.196" level="INFO">{'id': 'ac56402f31874672a8b5acb7e32bec26', 'status': 'active', 'created_at': '2021-03-22T02:37:15.737', 'updated_at': '2021-03-22T02:37:18.052', 'key': {'value': 'mnogueira@cavalcanti.br', 'type': 'email'}, 'account': {'id': '2780dec94d8f42b78b2e14646aaaacdd', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'owner': {'name': 'Holder de teste', 'national_registration': '59216780312', 'type': 'individual'}, 'routing_number': '001', 'number': '3389300392', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:17.195" endtime="20210322 02:37:17.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.198" level="INFO">9f01c3c369e70370</msg>
<status status="PASS" starttime="20210322 02:37:17.197" endtime="20210322 02:37:17.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.200" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:17.199" endtime="20210322 02:37:17.200"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.201" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:17.201" endtime="20210322 02:37:17.202"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:15.508" endtime="20210322 02:37:17.202"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:15.508" endtime="20210322 02:37:17.202"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.203" endtime="20210322 02:37:17.204"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:17.202" endtime="20210322 02:37:17.204"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:10.266" endtime="20210322 02:37:17.204"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:17.207" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:17.207" endtime="20210322 02:37:17.208"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:17.206" endtime="20210322 02:37:17.208"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:17.208" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:17.208" endtime="20210322 02:37:17.208"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:17.210" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 02:37:17.209" endtime="20210322 02:37:17.210"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:17.211" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 02:37:17.850" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:17.210" endtime="20210322 02:37:17.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.851" level="INFO">{'id': '70d0fffb1b8b4a7dbf9987886e1bf1e9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103220537f0c3173f477', 'message_id': 'M1946824224d2f5fd59f909656550f06', 'amount': 100, 'created_at': '2021-03-22T02:37:18.685033', 'description': 'Envio de PIX', 'debtor': {'national_registration': '59216780312', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '2780dec94d8f42b78b2e14646aaaacdd', 'number': '3389300392', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 02:37:17.850" endtime="20210322 02:37:17.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.853" level="INFO">b741f8df7f3ebbf6</msg>
<status status="PASS" starttime="20210322 02:37:17.852" endtime="20210322 02:37:17.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.853" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:17.853" endtime="20210322 02:37:17.853"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.854" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:17.854" endtime="20210322 02:37:17.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:17.855" level="INFO">${payment_external_key} = 70d0fffb1b8b4a7dbf9987886e1bf1e9</msg>
<status status="PASS" starttime="20210322 02:37:17.855" endtime="20210322 02:37:17.855"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.856" level="INFO">${payment_external_key} = 70d0fffb1b8b4a7dbf9987886e1bf1e9</msg>
<status status="PASS" starttime="20210322 02:37:17.856" endtime="20210322 02:37:17.856"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 02:37:17.857" level="INFO">${end_to_end_id} = E19468242202103220537f0c3173f477</msg>
<status status="PASS" starttime="20210322 02:37:17.856" endtime="20210322 02:37:17.857"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.857" level="INFO">${end_to_end_id} = E19468242202103220537f0c3173f477</msg>
<status status="PASS" starttime="20210322 02:37:17.857" endtime="20210322 02:37:17.858"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 02:37:17.858" level="INFO">${message_id} = M1946824224d2f5fd59f909656550f06</msg>
<status status="PASS" starttime="20210322 02:37:17.858" endtime="20210322 02:37:17.858"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.859" level="INFO">${message_id} = M1946824224d2f5fd59f909656550f06</msg>
<status status="PASS" starttime="20210322 02:37:17.859" endtime="20210322 02:37:17.859"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:17.204" endtime="20210322 02:37:17.859"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:17.862" level="INFO">${date} = 2021-03-22 02:37:17.861875</msg>
<status status="PASS" starttime="20210322 02:37:17.862" endtime="20210322 02:37:17.863"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:17.863" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 02:37:17.863" endtime="20210322 02:37:17.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.863" endtime="20210322 02:37:17.864"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.864" endtime="20210322 02:37:17.865"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.865" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:17.865" endtime="20210322 02:37:17.866"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.866" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:17.866" endtime="20210322 02:37:17.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 02:37:17.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:17.867" endtime="20210322 02:37:17.867"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.867" endtime="20210322 02:37:17.868"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.868" endtime="20210322 02:37:17.869"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.869" endtime="20210322 02:37:17.869"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.869" endtime="20210322 02:37:17.869"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.870" endtime="20210322 02:37:17.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.870" endtime="20210322 02:37:17.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.871" endtime="20210322 02:37:17.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.871" endtime="20210322 02:37:17.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.872" endtime="20210322 02:37:17.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.872" endtime="20210322 02:37:17.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.873" endtime="20210322 02:37:17.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.873" endtime="20210322 02:37:17.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.874" endtime="20210322 02:37:17.874"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.874" endtime="20210322 02:37:17.874"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.875" endtime="20210322 02:37:17.875"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.875" endtime="20210322 02:37:17.875"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.876" endtime="20210322 02:37:17.876"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:17.876" endtime="20210322 02:37:17.876"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:17.860" endtime="20210322 02:37:17.877"></status>
</kw>
<kw name="confirmar pagamento pix" library="pix_payments_confirm_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:17.878" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:17.877" endtime="20210322 02:37:17.878"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:17.877" endtime="20210322 02:37:17.878"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:17.878" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:17.878" endtime="20210322 02:37:17.878"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}/confirm</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:17.879" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/payments/70d0fffb1b8b4a7dbf9987886e1bf1e9/confirm, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:19.611" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:17.879" endtime="20210322 02:37:19.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.612" level="INFO">{'id': '70d0fffb1b8b4a7dbf9987886e1bf1e9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E19468242202103220537f0c3173f477', 'message_id': 'M1946824224d2f5fd59f909656550f06', 'amount': 100, 'description': 'Envio de PIX', 'debtor': {'national_registration': '59216780312', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '2780dec94d8f42b78b2e14646aaaacdd', 'number': '3389300392', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'resource': 'pix_transaction'}</msg>
<status status="PASS" starttime="20210322 02:37:19.612" endtime="20210322 02:37:19.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.613" level="INFO">444cdcf658c83d85</msg>
<status status="PASS" starttime="20210322 02:37:19.613" endtime="20210322 02:37:19.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.614" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:37:19.614" endtime="20210322 02:37:19.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.614" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:19.614" endtime="20210322 02:37:19.614"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:17.877" endtime="20210322 02:37:19.615"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=executed</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:19.618" level="INFO">${date} = 2021-03-22 02:37:19.617655</msg>
<status status="PASS" starttime="20210322 02:37:19.617" endtime="20210322 02:37:19.618"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:19.619" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 02:37:19.618" endtime="20210322 02:37:19.619"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.619" endtime="20210322 02:37:19.619"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.620" endtime="20210322 02:37:19.620"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.621" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:19.620" endtime="20210322 02:37:19.621"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.622" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:19.621" endtime="20210322 02:37:19.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 02:37:19.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:19.622" endtime="20210322 02:37:19.623"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.623" endtime="20210322 02:37:19.624"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.624" endtime="20210322 02:37:19.625"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.626" endtime="20210322 02:37:19.626"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.627" endtime="20210322 02:37:19.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.628" endtime="20210322 02:37:19.628"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.629" endtime="20210322 02:37:19.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.632" endtime="20210322 02:37:19.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.635" endtime="20210322 02:37:19.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.636" endtime="20210322 02:37:19.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.636" endtime="20210322 02:37:19.637"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.637" endtime="20210322 02:37:19.638"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.638" endtime="20210322 02:37:19.638"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.638" endtime="20210322 02:37:19.639"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.639" endtime="20210322 02:37:19.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.640" endtime="20210322 02:37:19.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.641" endtime="20210322 02:37:19.641"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.642" endtime="20210322 02:37:19.642"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:19.643" endtime="20210322 02:37:19.643"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:19.615" endtime="20210322 02:37:19.643"></status>
</kw>
<kw name="${index} IN RANGE [ 20 ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:19.646" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:19.645" endtime="20210322 02:37:19.646"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:19.645" endtime="20210322 02:37:19.646"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:19.647" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/payments/70d0fffb1b8b4a7dbf9987886e1bf1e9, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:20.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:19.647" endtime="20210322 02:37:20.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:20.261" level="INFO">{'id': '70d0fffb1b8b4a7dbf9987886e1bf1e9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'executed', 'end_to_end_id': 'E19468242202103220537f0c3173f477', 'message_id': 'M1946824224d2f5fd59f909656550f06', 'amount': 100, 'created_at': '2021-03-22T02:37:18.685033', 'description': 'Envio de PIX', 'debtor': {'national_registration': '59216780312', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '2780dec94d8f42b78b2e14646aaaacdd', 'number': '3389300392', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 02:37:20.259" endtime="20210322 02:37:20.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:20.263" level="INFO">a49262f330b0e241</msg>
<status status="PASS" starttime="20210322 02:37:20.262" endtime="20210322 02:37:20.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:20.265" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:37:20.264" endtime="20210322 02:37:20.266"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:20.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:20.267" endtime="20210322 02:37:20.269"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:19.644" endtime="20210322 02:37:20.270"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:20.270" endtime="20210322 02:37:20.272"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20210322 02:37:30.274" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210322 02:37:20.272" endtime="20210322 02:37:30.275"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:19.644" endtime="20210322 02:37:30.275"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="buscar pagamento pix" library="pix_payments_get_pix_payment">
<arguments>
<arg>holder_external_key=${holder_external_key}</arg>
<arg>account_external_key=${account_external_key}</arg>
<arg>entry_external_key=${entry_external_key}</arg>
<arg>payment_external_key=${payment_external_key}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:30.276" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:30.276" endtime="20210322 02:37:30.277"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.275" endtime="20210322 02:37:30.277"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments/${payment_external_key}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:30.278" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/6ee05b83be0b4fb29e8af8db2b7ac8c2/accounts/2780dec94d8f42b78b2e14646aaaacdd/payments/70d0fffb1b8b4a7dbf9987886e1bf1e9, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:30.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:30.277" endtime="20210322 02:37:30.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.886" level="INFO">{'id': '70d0fffb1b8b4a7dbf9987886e1bf1e9', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'succeeded', 'end_to_end_id': 'E19468242202103220537f0c3173f477', 'message_id': 'M1946824224d2f5fd59f909656550f06', 'amount': 100, 'created_at': '2021-03-22T02:37:18.685033', 'description': 'Envio de PIX', 'debtor': {'national_registration': '59216780312', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '6ee05b83be0b4fb29e8af8db2b7ac8c2', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '2780dec94d8f42b78b2e14646aaaacdd', 'number': '3389300392', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 02:37:30.886" endtime="20210322 02:37:30.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.888" level="INFO">80824525cf9b70a2</msg>
<status status="PASS" starttime="20210322 02:37:30.887" endtime="20210322 02:37:30.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.888" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:37:30.888" endtime="20210322 02:37:30.888"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:30.888" endtime="20210322 02:37:30.889"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.275" endtime="20210322 02:37:30.889"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()["status"]}' == 'succeeded'</arg>
</arguments>
<msg timestamp="20210322 02:37:30.890" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210322 02:37:30.889" endtime="20210322 02:37:30.890"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.275" endtime="20210322 02:37:30.890"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:19.643" endtime="20210322 02:37:30.890"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=succeeded</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:30.892" level="INFO">${date} = 2021-03-22 02:37:30.892006</msg>
<status status="PASS" starttime="20210322 02:37:30.892" endtime="20210322 02:37:30.892"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:30.893" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 02:37:30.892" endtime="20210322 02:37:30.893"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.893" endtime="20210322 02:37:30.894"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.894" endtime="20210322 02:37:30.894"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.895" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:30.894" endtime="20210322 02:37:30.895"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.896" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:30.895" endtime="20210322 02:37:30.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:30.896" endtime="20210322 02:37:30.896"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.897" endtime="20210322 02:37:30.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.897" endtime="20210322 02:37:30.898"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.898" endtime="20210322 02:37:30.899"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.899" endtime="20210322 02:37:30.900"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.900" endtime="20210322 02:37:30.900"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.901" endtime="20210322 02:37:30.901"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.901" endtime="20210322 02:37:30.902"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.902" endtime="20210322 02:37:30.903"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.903" endtime="20210322 02:37:30.903"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.903" endtime="20210322 02:37:30.904"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.904" endtime="20210322 02:37:30.904"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.905" endtime="20210322 02:37:30.905"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.905" endtime="20210322 02:37:30.906"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.906" endtime="20210322 02:37:30.906"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.906" endtime="20210322 02:37:30.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.907" endtime="20210322 02:37:30.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.908" endtime="20210322 02:37:30.908"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:30.908" endtime="20210322 02:37:30.909"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.890" endtime="20210322 02:37:30.909"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<status status="PASS" starttime="20210322 02:37:10.265" endtime="20210322 02:37:30.909" critical="yes"></status>
</test>
<doc>Funcionalidade: Confirmar Chave de EndereÃ§amento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo confirmar o pagamento de um envio de PIX</doc>
<status status="FAIL" starttime="20210322 02:37:00.290" endtime="20210322 02:37:30.910"></status>
</suite>
<suite id="s1-s1-s2" name="Criar Pagamento PIX" source="C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\tests\pix-payments\envio\Criar Pagamento PIX.robot">
<test id="s1-s1-s2-t1" name="CenÃ¡rio: Criar pagamento PIX de para holder business utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=business</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:37:30.967" level="INFO">${phone} = 91676641</msg>
<status status="PASS" starttime="20210322 02:37:30.966" endtime="20210322 02:37:30.967"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:37:30.967" level="INFO">${phone_pix} = +5521991676641</msg>
<status status="PASS" starttime="20210322 02:37:30.967" endtime="20210322 02:37:30.967"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.968" level="INFO">${phone_pix} = +5521991676641</msg>
<status status="PASS" starttime="20210322 02:37:30.968" endtime="20210322 02:37:30.968"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:37:30.969" level="INFO">${email_pix} = wda-costa@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:30.969" endtime="20210322 02:37:30.969"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.970" level="INFO">${email_pix} = wda-costa@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:30.969" endtime="20210322 02:37:30.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder business ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:30.972" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:30.972" endtime="20210322 02:37:30.972"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.971" endtime="20210322 02:37:30.972"></status>
</kw>
<kw name="Cnpj" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:30.973" level="INFO">${national_registration} = 03.475.816/0001-60</msg>
<status status="PASS" starttime="20210322 02:37:30.973" endtime="20210322 02:37:30.973"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:30.973" level="INFO">${national_registration} = 03475816/0001-60</msg>
<status status="PASS" starttime="20210322 02:37:30.973" endtime="20210322 02:37:30.974"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:30.974" level="INFO">${national_registration} = 03475816/000160</msg>
<status status="PASS" starttime="20210322 02:37:30.974" endtime="20210322 02:37:30.974"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>/</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:30.975" level="INFO">${national_registration} = 03475816000160</msg>
<status status="PASS" starttime="20210322 02:37:30.974" endtime="20210322 02:37:30.975"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.975" level="INFO">${national_registration} = 03475816000160</msg>
<status status="PASS" starttime="20210322 02:37:30.975" endtime="20210322 02:37:30.975"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:37:30.976" level="INFO">${identity_card} = 742083615</msg>
<status status="PASS" starttime="20210322 02:37:30.975" endtime="20210322 02:37:30.976"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.976" level="INFO">${identity_card} = 742083615</msg>
<status status="PASS" starttime="20210322 02:37:30.976" endtime="20210322 02:37:30.976"></status>
</kw>
<kw name="criar holder business" library="accreditation_post_holder_business">
<arguments>
<arg>holder_type=business</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email_business=${email_business}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue_business=${revenue_business}</arg>
<arg>cnae=${cnae}</arg>
<arg>legal_name=${legal_name}</arg>
<arg>establishment_format=mei</arg>
<arg>establishment_date=${establishment_date}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:30.978" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:30.978" endtime="20210322 02:37:30.978"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.977" endtime="20210322 02:37:30.978"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.979" level="INFO">${holder_type} = business</msg>
<status status="PASS" starttime="20210322 02:37:30.978" endtime="20210322 02:37:30.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.979" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:37:30.979" endtime="20210322 02:37:30.979"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${legal_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:30.980" level="INFO">${legal_name} = Nome Legal da Empresa</msg>
<status status="PASS" starttime="20210322 02:37:30.980" endtime="20210322 02:37:30.980"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:30.981" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:30.980" endtime="20210322 02:37:30.981"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email_business}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue_business},</arg>
<arg>"cnae": "${cnae}",</arg>
<arg>"legal_name": "${legal_name}",</arg>
<arg>"establishment": {</arg>
<arg>"format":"${establishment_format}",</arg>
<arg>"date":"${establishment_date}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:30.981" level="INFO">${body} = { "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "03475816000160", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empr...</msg>
<status status="PASS" starttime="20210322 02:37:30.981" endtime="20210322 02:37:30.981"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:30.982" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "03475816000160", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } } 
json=None</msg>
<msg timestamp="20210322 02:37:31.645" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:30.982" endtime="20210322 02:37:31.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.648" level="INFO">{'id': '75b44294e4a6425f984d6d39cb12e568', 'name': 'Holder de teste', 'revenue': 1005500.0, 'email': 'contato@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:37:32.433391', 'updated_at': '2021-03-22T02:37:32.433393', 'type': 'business', 'national_registration': '03475816000160', 'legal_name': 'Nome Legal da Empresa', 'establishment': {'format': 'mei', 'date': '2012-04-25'}, 'cnae': '0111301', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/documents', 'type': 'GET'}, 'partners': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners', 'type': 'GET'}, 'associates': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/associates', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:31.646" endtime="20210322 02:37:31.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.650" level="INFO">808239cf319c9704</msg>
<status status="PASS" starttime="20210322 02:37:31.649" endtime="20210322 02:37:31.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.651" level="INFO">{ "type": "business", "name": "Holder de teste", "email": "contato@teste.com.br", "national_registration": "03475816000160", "revenue": 1005500.00, "cnae": "0111301", "legal_name": "Nome Legal da Empresa", "establishment": { "format":"mei", "date":"2012-04-25" } }</msg>
<status status="PASS" starttime="20210322 02:37:31.650" endtime="20210322 02:37:31.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.654" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:31.652" endtime="20210322 02:37:31.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:31.656" level="INFO">${holder_external_key} = 75b44294e4a6425f984d6d39cb12e568</msg>
<status status="PASS" starttime="20210322 02:37:31.655" endtime="20210322 02:37:31.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.657" level="INFO">${holder_external_key} = 75b44294e4a6425f984d6d39cb12e568</msg>
<status status="PASS" starttime="20210322 02:37:31.657" endtime="20210322 02:37:31.657"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.976" endtime="20210322 02:37:31.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:31.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:31.658" endtime="20210322 02:37:31.659"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:31.661" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:31.660" endtime="20210322 02:37:31.661"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:31.662" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:37:31.661" endtime="20210322 02:37:31.662"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:31.664" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:37:31.935" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:31.663" endtime="20210322 02:37:31.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.938" level="INFO">{'id': '601b7fa3c1594e3b96716d093dbfe687', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/phones/601b7fa3c1594e3b96716d093dbfe687', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:31.937" endtime="20210322 02:37:31.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.940" level="INFO">b3fe68fb7b2f0682</msg>
<status status="PASS" starttime="20210322 02:37:31.939" endtime="20210322 02:37:31.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.942" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:31.941" endtime="20210322 02:37:31.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:31.945" level="INFO">${phone_external_key} = 601b7fa3c1594e3b96716d093dbfe687</msg>
<status status="PASS" starttime="20210322 02:37:31.944" endtime="20210322 02:37:31.946"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:31.948" level="INFO">${phone_external_key} = 601b7fa3c1594e3b96716d093dbfe687</msg>
<status status="PASS" starttime="20210322 02:37:31.946" endtime="20210322 02:37:31.948"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:31.659" endtime="20210322 02:37:31.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:31.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:31.949" endtime="20210322 02:37:31.950"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:31.953" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:31.952" endtime="20210322 02:37:31.953"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:31.955" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:37:31.954" endtime="20210322 02:37:31.955"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:31.956" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:37:32.218" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:31.955" endtime="20210322 02:37:32.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.221" level="INFO">{'id': '95560449b4204f0fbcabbeed09953421', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/addresses/95560449b4204f0fbcabbeed09953421', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:32.219" endtime="20210322 02:37:32.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.223" level="INFO">ee2e1d238ede2568</msg>
<status status="PASS" starttime="20210322 02:37:32.222" endtime="20210322 02:37:32.223"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.225" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.224" endtime="20210322 02:37:32.225"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:32.227" level="INFO">${address_external_key} = 95560449b4204f0fbcabbeed09953421</msg>
<status status="PASS" starttime="20210322 02:37:32.226" endtime="20210322 02:37:32.228"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.229" level="INFO">${address_external_key} = 95560449b4204f0fbcabbeed09953421</msg>
<status status="PASS" starttime="20210322 02:37:32.228" endtime="20210322 02:37:32.229"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:31.951" endtime="20210322 02:37:32.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:32.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.230" endtime="20210322 02:37:32.231"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>CCMEI</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:32.233" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:32.232" endtime="20210322 02:37:32.233"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:32.234" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:32.236" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:32.233" endtime="20210322 02:37:32.236"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:32.238" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/documents?type=CCMEI, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:32.535" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.236" endtime="20210322 02:37:32.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.538" level="INFO">{'id': '7cae81993779406bad79b5d86ea6f359', 'document_type': 'ccmei', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/documents/7cae81993779406bad79b5d86ea6f359', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/documents/7cae81993779406bad79b5d86ea6f359/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:32.536" endtime="20210322 02:37:32.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.541" level="INFO">a7bdfb5bcd9ae076</msg>
<status status="PASS" starttime="20210322 02:37:32.540" endtime="20210322 02:37:32.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.543" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.542" endtime="20210322 02:37:32.543"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:32.545" level="INFO">${document_external_key} = 7cae81993779406bad79b5d86ea6f359</msg>
<status status="PASS" starttime="20210322 02:37:32.544" endtime="20210322 02:37:32.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.546" level="INFO">${document_external_key} = 7cae81993779406bad79b5d86ea6f359</msg>
<status status="PASS" starttime="20210322 02:37:32.545" endtime="20210322 02:37:32.546"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:32.231" endtime="20210322 02:37:32.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:32.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.547" endtime="20210322 02:37:32.548"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:32.549" level="INFO">${partner_individual_national_registration} = 875.601.329-95</msg>
<status status="PASS" starttime="20210322 02:37:32.548" endtime="20210322 02:37:32.549"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:32.550" level="INFO">${partner_individual_national_registration} = 875601329-95</msg>
<status status="PASS" starttime="20210322 02:37:32.549" endtime="20210322 02:37:32.550"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${partner_individual_national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:32.550" level="INFO">${partner_individual_national_registration} = 87560132995</msg>
<status status="PASS" starttime="20210322 02:37:32.550" endtime="20210322 02:37:32.550"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.552" level="INFO">${partner_individual_national_registration} = 87560132995</msg>
<status status="PASS" starttime="20210322 02:37:32.551" endtime="20210322 02:37:32.552"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${partner_individual_identity_card}</var>
</assign>
<msg timestamp="20210322 02:37:32.552" level="INFO">${partner_individual_identity_card} = 084256138</msg>
<status status="PASS" starttime="20210322 02:37:32.552" endtime="20210322 02:37:32.552"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_individual_identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.553" level="INFO">${partner_individual_identity_card} = 084256138</msg>
<status status="PASS" starttime="20210322 02:37:32.553" endtime="20210322 02:37:32.553"></status>
</kw>
<kw name="criar partner individual" library="accreditation_post_partner_individual">
<arguments>
<arg>partner_individual_type=individual</arg>
<arg>partner_individual_name=${partner_individual_name}</arg>
<arg>partner_individual_email=${partner_individual_email}</arg>
<arg>partner_individual_national_registration=${partner_individual_national_registration}</arg>
<arg>partner_individual_revenue=${partner_individual_revenue}</arg>
<arg>partner_individual_birthday=${partner_individual_birthday}</arg>
<arg>partner_individual_mothers_name=${partner_individual_mothers_name}</arg>
<arg>partner_individual_identity_card=${partner_individual_identity_card}</arg>
<arg>partner_individual_pep=false</arg>
<arg>partner_individual_percentage=100</arg>
<arg>partner_individual_adm=true</arg>
<arg>partner_individual_cbo=${partner_individual_cbo}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:32.555" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:32.555" endtime="20210322 02:37:32.555"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${partner_individual_type}",</arg>
<arg>"name": "${partner_individual_name}",</arg>
<arg>"email": "${partner_individual_email}",</arg>
<arg>"national_registration": "${partner_individual_national_registration}",</arg>
<arg>"revenue": ${partner_individual_revenue},</arg>
<arg>"birthday": "${partner_individual_birthday}",</arg>
<arg>"mothers_name": "${partner_individual_mothers_name}",</arg>
<arg>"identity_card": "${partner_individual_identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"percentage": ${partner_individual_percentage},</arg>
<arg>"adm": ${partner_individual_adm},</arg>
<arg>"cbo": ${partner_individual_cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:32.556" level="INFO">${body} = { "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "87560132995", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e...</msg>
<status status="PASS" starttime="20210322 02:37:32.555" endtime="20210322 02:37:32.556"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:32.557" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Individual Partner de teste", "email": "teste@teste.com.br", "national_registration": "87560132995", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Individual Partner", "identity_card": "084256138", "pep": false, "percentage": 100, "adm": true, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:37:32.786" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.557" endtime="20210322 02:37:32.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.789" level="INFO">{'id': '0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'name': 'Individual Partner de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'created_at': '2021-03-22T02:37:33.569254', 'updated_at': '2021-03-22T02:37:33.569255', 'main': True, 'adm': True, 'percentage': 100.0, 'type': 'individual', 'national_registration': '87560132995', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Individual Partner', 'identity_card': '084256138', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:32.787" endtime="20210322 02:37:32.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.791" level="INFO">a048e82239ac100f</msg>
<status status="PASS" starttime="20210322 02:37:32.790" endtime="20210322 02:37:32.791"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.792" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.792" endtime="20210322 02:37:32.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${partner_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:32.794" level="INFO">${partner_external_key} = 0cbec8c9fa3d4ea89a4d8fee4f1b8690</msg>
<status status="PASS" starttime="20210322 02:37:32.793" endtime="20210322 02:37:32.795"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${partner_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:32.796" level="INFO">${partner_external_key} = 0cbec8c9fa3d4ea89a4d8fee4f1b8690</msg>
<status status="PASS" starttime="20210322 02:37:32.795" endtime="20210322 02:37:32.796"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:32.554" endtime="20210322 02:37:32.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:32.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.796" endtime="20210322 02:37:32.797"></status>
</kw>
<kw name="criar partner phone" library="accreditation_post_partner_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996554785</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:32.799" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:32.798" endtime="20210322 02:37:32.799"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:32.800" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996554785" }</msg>
<status status="PASS" starttime="20210322 02:37:32.799" endtime="20210322 02:37:32.800"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/phones/</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:32.801" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/phones/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996554785" } 
json=None</msg>
<msg timestamp="20210322 02:37:33.040" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:32.801" endtime="20210322 02:37:33.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.043" level="INFO">{'id': 'ecae26ab9d014ac8afb82bf955e1d423', 'area_code': '21', 'country_code': '51', 'number': '996554785', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/phones/ecae26ab9d014ac8afb82bf955e1d423', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:33.040" endtime="20210322 02:37:33.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.045" level="INFO">4a1db91bfafe3f52</msg>
<status status="PASS" starttime="20210322 02:37:33.044" endtime="20210322 02:37:33.045"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.047" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.046" endtime="20210322 02:37:33.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:33.049" level="INFO">${holder_external_key} = ecae26ab9d014ac8afb82bf955e1d423</msg>
<status status="PASS" starttime="20210322 02:37:33.048" endtime="20210322 02:37:33.049"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.050" level="INFO">${phone_external_key} = 601b7fa3c1594e3b96716d093dbfe687</msg>
<status status="PASS" starttime="20210322 02:37:33.050" endtime="20210322 02:37:33.050"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:32.797" endtime="20210322 02:37:33.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:33.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.052" endtime="20210322 02:37:33.052"></status>
</kw>
<kw name="criar partner address" library="accreditation_post_partner_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>61</arg>
<arg>apto 201</arg>
<arg>21550478</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:33.055" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:33.054" endtime="20210322 02:37:33.055"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:33.056" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:37:33.055" endtime="20210322 02:37:33.056"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:33.058" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "61", "complement": "apto 201", "postal_code": "21550478" } 
json=None</msg>
<msg timestamp="20210322 02:37:33.277" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.057" endtime="20210322 02:37:33.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.279" level="INFO">{'id': '31360e9f382e46dfa898c6e576e076c5', 'street': 'Rua de Testes', 'number': '61', 'city': 'Rio de Janeiro', 'complement': 'apto 201', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550478', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/addresses/31360e9f382e46dfa898c6e576e076c5', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:33.278" endtime="20210322 02:37:33.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.281" level="INFO">8b5457a9d3310534</msg>
<status status="PASS" starttime="20210322 02:37:33.280" endtime="20210322 02:37:33.282"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.284" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.283" endtime="20210322 02:37:33.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:33.287" level="INFO">${address_external_key} = 31360e9f382e46dfa898c6e576e076c5</msg>
<status status="PASS" starttime="20210322 02:37:33.285" endtime="20210322 02:37:33.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.289" level="INFO">${address_external_key} = 31360e9f382e46dfa898c6e576e076c5</msg>
<status status="PASS" starttime="20210322 02:37:33.288" endtime="20210322 02:37:33.289"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:33.053" endtime="20210322 02:37:33.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:33.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.290" endtime="20210322 02:37:33.291"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:33.293" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:33.292" endtime="20210322 02:37:33.293"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:33.294" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:33.296" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:33.293" endtime="20210322 02:37:33.296"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:33.298" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:33.592" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.297" endtime="20210322 02:37:33.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.594" level="INFO">{'id': '7c3d72353e62490eba785386fd5cc3f4', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents/7c3d72353e62490eba785386fd5cc3f4', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents/7c3d72353e62490eba785386fd5cc3f4/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:33.593" endtime="20210322 02:37:33.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.595" level="INFO">758bf35d5c581537</msg>
<status status="PASS" starttime="20210322 02:37:33.594" endtime="20210322 02:37:33.595"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.596" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.596" endtime="20210322 02:37:33.596"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:33.598" level="INFO">${document_external_key} = 7c3d72353e62490eba785386fd5cc3f4</msg>
<status status="PASS" starttime="20210322 02:37:33.597" endtime="20210322 02:37:33.598"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.599" level="INFO">${document_external_key} = 7c3d72353e62490eba785386fd5cc3f4</msg>
<status status="PASS" starttime="20210322 02:37:33.599" endtime="20210322 02:37:33.600"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:33.291" endtime="20210322 02:37:33.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:33.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.600" endtime="20210322 02:37:33.601"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:33.603" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:33.603" endtime="20210322 02:37:33.603"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:33.604" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:33.606" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:33.604" endtime="20210322 02:37:33.606"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:33.607" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:33.926" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.606" endtime="20210322 02:37:33.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.927" level="INFO">{'id': 'f851178a4e9345faac9034e580fd27d9', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents/f851178a4e9345faac9034e580fd27d9', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents/f851178a4e9345faac9034e580fd27d9/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:33.927" endtime="20210322 02:37:33.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.929" level="INFO">f966d9afc26bc497</msg>
<status status="PASS" starttime="20210322 02:37:33.929" endtime="20210322 02:37:33.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.931" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.930" endtime="20210322 02:37:33.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:33.932" level="INFO">${document_external_key} = f851178a4e9345faac9034e580fd27d9</msg>
<status status="PASS" starttime="20210322 02:37:33.932" endtime="20210322 02:37:33.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:33.934" level="INFO">${document_external_key} = f851178a4e9345faac9034e580fd27d9</msg>
<status status="PASS" starttime="20210322 02:37:33.933" endtime="20210322 02:37:33.934"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:33.602" endtime="20210322 02:37:33.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:33.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.934" endtime="20210322 02:37:33.935"></status>
</kw>
<kw name="criar partner document" library="accreditation_post_partner_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:33.937" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:33.936" endtime="20210322 02:37:33.937"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:33.938" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:33.940" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:33.938" endtime="20210322 02:37:33.940"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/partners/${partner_externaL_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:33.942" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:34.218" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:33.941" endtime="20210322 02:37:34.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.220" level="INFO">{'id': '8e1d39a2bb05432caaeff650d4f8a7ff', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents/8e1d39a2bb05432caaeff650d4f8a7ff', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568', 'type': 'GET'}, 'partner': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/partners/0cbec8c9fa3d4ea89a4d8fee4f1b8690/documents/8e1d39a2bb05432caaeff650d4f8a7ff/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:34.219" endtime="20210322 02:37:34.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.222" level="INFO">5d299b5a7a6ed827</msg>
<status status="PASS" starttime="20210322 02:37:34.222" endtime="20210322 02:37:34.222"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.224" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.223" endtime="20210322 02:37:34.224"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:34.226" level="INFO">${document_external_key} = 8e1d39a2bb05432caaeff650d4f8a7ff</msg>
<status status="PASS" starttime="20210322 02:37:34.225" endtime="20210322 02:37:34.226"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.227" level="INFO">${document_external_key} = 8e1d39a2bb05432caaeff650d4f8a7ff</msg>
<status status="PASS" starttime="20210322 02:37:34.226" endtime="20210322 02:37:34.227"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:33.936" endtime="20210322 02:37:34.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:34.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.228" endtime="20210322 02:37:34.229"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:34.230" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:34.230" endtime="20210322 02:37:34.230"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:34.231" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:34.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.231" endtime="20210322 02:37:34.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.507" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:37:34.506" endtime="20210322 02:37:34.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.507" level="INFO">8031fcb7654015b8</msg>
<status status="PASS" starttime="20210322 02:37:34.507" endtime="20210322 02:37:34.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.507" endtime="20210322 02:37:34.508"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:34.229" endtime="20210322 02:37:34.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:34.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.508" endtime="20210322 02:37:34.508"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:37:34.509" level="INFO">${assessment_id} = 4af7b669-a24d-43d5-a891-6a4793f2b8f3</msg>
<status status="PASS" starttime="20210322 02:37:34.509" endtime="20210322 02:37:34.509"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:37:34.509" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:37:34.509" endtime="20210322 02:37:34.509"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:37:34.510" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:37:34.509" endtime="20210322 02:37:34.510"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:37:34.510" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:37:34.510" endtime="20210322 02:37:34.510"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:34.511" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:34.510" endtime="20210322 02:37:34.511"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:34.511" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:37:34.511" endtime="20210322 02:37:34.511"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:34.512" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/75b44294e4a6425f984d6d39cb12e568/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "75b44294e4a6425f984d6d39cb12e568", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "4af7b669-a24d-43d5-a891-6a4793f2b8f3" } } 
json=None</msg>
<msg timestamp="20210322 02:37:34.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.512" endtime="20210322 02:37:34.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.708" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:37:34.707" endtime="20210322 02:37:34.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.708" level="INFO">864169970921543e</msg>
<status status="PASS" starttime="20210322 02:37:34.708" endtime="20210322 02:37:34.709"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:34.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.709" endtime="20210322 02:37:34.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:34.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.709" endtime="20210322 02:37:34.710"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:34.508" endtime="20210322 02:37:34.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:34.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.710" endtime="20210322 02:37:34.711"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:34.711" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:34.711" endtime="20210322 02:37:34.712"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:34.711" endtime="20210322 02:37:34.712"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:34.712" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/75b44294e4a6425f984d6d39cb12e568/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:35.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:34.712" endtime="20210322 02:37:35.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:35.370" level="INFO">{'items': [{'id': '800fbd3f50b94e8a83b88c3412fcaf67', 'holder': '75b44294e4a6425f984d6d39cb12e568', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '1974778510', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:37:35.538428', 'updated_at': '2021-03-22T05:37:35.538428', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/800fbd3f50b94e8a83b88c3412fcaf67', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:37:35.369" endtime="20210322 02:37:35.371"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:35.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:35.372" endtime="20210322 02:37:35.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:35.377" level="INFO">${account_external_key} = 800fbd3f50b94e8a83b88c3412fcaf67</msg>
<status status="PASS" starttime="20210322 02:37:35.375" endtime="20210322 02:37:35.377"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:35.378" level="INFO">${account_external_key} = 800fbd3f50b94e8a83b88c3412fcaf67</msg>
<status status="PASS" starttime="20210322 02:37:35.377" endtime="20210322 02:37:35.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:37:35.380" level="INFO">${account_number} = 1974778510</msg>
<status status="PASS" starttime="20210322 02:37:35.379" endtime="20210322 02:37:35.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:35.381" level="INFO">${account_number} = 1974778510</msg>
<status status="PASS" starttime="20210322 02:37:35.381" endtime="20210322 02:37:35.382"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:37:35.383" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:35.382" endtime="20210322 02:37:35.383"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:35.384" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:35.384" endtime="20210322 02:37:35.384"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:34.711" endtime="20210322 02:37:35.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:35.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:35.385" endtime="20210322 02:37:35.386"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.971" endtime="20210322 02:37:35.386"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.970" endtime="20210322 02:37:35.386"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:35.388" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:35.388" endtime="20210322 02:37:35.389"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:35.387" endtime="20210322 02:37:35.389"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 02:37:35.390" level="INFO">${uuid} = 386153a1-3ed5-470e-a73d-d57a21090c54</msg>
<status status="PASS" starttime="20210322 02:37:35.389" endtime="20210322 02:37:35.390"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:35.391" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:35.390" endtime="20210322 02:37:35.391"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:35.390" endtime="20210322 02:37:35.391"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:35.392" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:35.392" endtime="20210322 02:37:35.392"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:35.393" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "386153a1-3ed5-470e-a73d-d57a21090c54", "transaction_id": "386153a1-3ed5-470e-a73d-d57a21090c54", "id": "386153a1-3ed5-470e-a73d-d57a...</msg>
<status status="PASS" starttime="20210322 02:37:35.392" endtime="20210322 02:37:35.393"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:35.394" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/386153a1-3ed5-470e-a73d-d57a21090c54, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "386153a1-3ed5-470e-a73d-d57a21090c54", "transaction_id": "386153a1-3ed5-470e-a73d-d57a21090c54", "id": "386153a1-3ed5-470e-a73d-d57a21090c54", "id_checking_account": "800fbd3f50b94e8a83b88c3412fcaf67", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "386153a1-3ed5-470e-a73d-d57a21090c54", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 02:37:36.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:35.393" endtime="20210322 02:37:36.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:36.042" endtime="20210322 02:37:36.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:36.043" endtime="20210322 02:37:36.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:36.045" endtime="20210322 02:37:36.047"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:35.387" endtime="20210322 02:37:36.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:36.054" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:36.053" endtime="20210322 02:37:36.055"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:36.052" endtime="20210322 02:37:36.055"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.056" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:37:36.056" endtime="20210322 02:37:36.057"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.058" level="INFO">${value} = wda-costa@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:36.057" endtime="20210322 02:37:36.058"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:36.059" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:36.058" endtime="20210322 02:37:36.059"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:36.060" level="INFO">${body} = { "type": "email", "value": "wda-costa@gmail.com" }</msg>
<status status="PASS" starttime="20210322 02:37:36.059" endtime="20210322 02:37:36.060"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:36.061" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/75b44294e4a6425f984d6d39cb12e568/accounts/800fbd3f50b94e8a83b88c3412fcaf67/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "wda-costa@gmail.com" } 
json=None</msg>
<msg timestamp="20210322 02:37:36.725" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:36.060" endtime="20210322 02:37:36.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.728" level="INFO">{'id': '1bdcc15ef3864b809006b314255e70b9', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:37:37.571', 'updated_at': '2021-03-22T02:37:37.571', 'key': {'value': 'wda-costa@gmail.com', 'type': 'email'}, 'account': {'id': '800fbd3f50b94e8a83b88c3412fcaf67', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '75b44294e4a6425f984d6d39cb12e568', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '03475816000160', 'type': 'business'}, 'routing_number': '001', 'number': '1974778510', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:36.726" endtime="20210322 02:37:36.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.730" level="INFO">0c8316dd0dd2c08b</msg>
<status status="PASS" starttime="20210322 02:37:36.729" endtime="20210322 02:37:36.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.733" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:37:36.732" endtime="20210322 02:37:36.733"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.735" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:36.735" endtime="20210322 02:37:36.736"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:36.738" endtime="20210322 02:37:36.739"></status>
</kw>
<msg timestamp="20210322 02:37:36.739" level="INFO">${entry_external_key} = 1bdcc15ef3864b809006b314255e70b9</msg>
<status status="PASS" starttime="20210322 02:37:36.736" endtime="20210322 02:37:36.739"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.740" level="INFO">${entry_external_key} = 1bdcc15ef3864b809006b314255e70b9</msg>
<status status="PASS" starttime="20210322 02:37:36.740" endtime="20210322 02:37:36.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:36.742" endtime="20210322 02:37:36.742"></status>
</kw>
<msg timestamp="20210322 02:37:36.743" level="INFO">${entry_key_value} = wda-costa@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:36.741" endtime="20210322 02:37:36.743"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:37:36.744" level="INFO">${entry_key_value} = wda-costa@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:36.743" endtime="20210322 02:37:36.744"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:36.050" endtime="20210322 02:37:36.744"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:36.047" endtime="20210322 02:37:36.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:36.747" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:36.747" endtime="20210322 02:37:36.748"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:36.746" endtime="20210322 02:37:36.748"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:36.749" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/75b44294e4a6425f984d6d39cb12e568/accounts/800fbd3f50b94e8a83b88c3412fcaf67/entries/1bdcc15ef3864b809006b314255e70b9/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:37.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:36.748" endtime="20210322 02:37:37.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:37.379" level="INFO">{'code': '2050'}</msg>
<status status="PASS" starttime="20210322 02:37:37.379" endtime="20210322 02:37:37.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:37.380" level="INFO">0b099eb9148f5b47</msg>
<status status="PASS" starttime="20210322 02:37:37.380" endtime="20210322 02:37:37.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:37.380" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:37:37.380" endtime="20210322 02:37:37.380"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:37.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:37.380" endtime="20210322 02:37:37.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:37:37.381" level="INFO">${verification_code} = 2050</msg>
<status status="PASS" starttime="20210322 02:37:37.381" endtime="20210322 02:37:37.381"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:37.382" level="INFO">${verification_code} = 2050</msg>
<status status="PASS" starttime="20210322 02:37:37.381" endtime="20210322 02:37:37.382"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:36.745" endtime="20210322 02:37:37.382"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:36.744" endtime="20210322 02:37:37.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:37.384" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:37.383" endtime="20210322 02:37:37.384"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:37.383" endtime="20210322 02:37:37.384"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:37.384" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:37.384" endtime="20210322 02:37:37.384"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:37.385" level="INFO">${body} = { "code": "2050" }</msg>
<status status="PASS" starttime="20210322 02:37:37.385" endtime="20210322 02:37:37.385"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:37.385" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/75b44294e4a6425f984d6d39cb12e568/accounts/800fbd3f50b94e8a83b88c3412fcaf67/entries/1bdcc15ef3864b809006b314255e70b9/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "2050" } 
json=None</msg>
<msg timestamp="20210322 02:37:39.018" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:37.385" endtime="20210322 02:37:39.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.021" level="INFO">{'id': '1bdcc15ef3864b809006b314255e70b9', 'status': 'active', 'created_at': '2021-03-22T02:37:37.571', 'updated_at': '2021-03-22T02:37:39.878', 'key': {'value': 'wda-costa@gmail.com', 'type': 'email'}, 'account': {'id': '800fbd3f50b94e8a83b88c3412fcaf67', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '75b44294e4a6425f984d6d39cb12e568', 'owner': {'name': 'Nome Legal da Empresa', 'national_registration': '03475816000160', 'type': 'business'}, 'routing_number': '001', 'number': '1974778510', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:39.020" endtime="20210322 02:37:39.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.023" level="INFO">2924eaae11718edb</msg>
<status status="PASS" starttime="20210322 02:37:39.022" endtime="20210322 02:37:39.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.025" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:39.024" endtime="20210322 02:37:39.025"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.026" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:39.025" endtime="20210322 02:37:39.026"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:37.382" endtime="20210322 02:37:39.027"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:37.382" endtime="20210322 02:37:39.027"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:39.028" endtime="20210322 02:37:39.029"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.027" endtime="20210322 02:37:39.029"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:30.966" endtime="20210322 02:37:39.029"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:39.032" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:39.032" endtime="20210322 02:37:39.033"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.031" endtime="20210322 02:37:39.033"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:39.034" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:39.033" endtime="20210322 02:37:39.034"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:39.035" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 02:37:39.034" endtime="20210322 02:37:39.035"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:39.037" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/75b44294e4a6425f984d6d39cb12e568/accounts/800fbd3f50b94e8a83b88c3412fcaf67/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 02:37:39.769" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:39.036" endtime="20210322 02:37:39.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.771" level="INFO">{'id': '41e607f1d3b6405ea915762d2fa564ae', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103220537d6b483dad38', 'message_id': 'M194682428dd6bc8cbbbe03bc7b621cb', 'amount': 100, 'created_at': '2021-03-22T02:37:40.596664', 'description': 'Envio de PIX', 'debtor': {'national_registration': '03475816000160', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '75b44294e4a6425f984d6d39cb12e568', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': '800fbd3f50b94e8a83b88c3412fcaf67', 'number': '1974778510', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 02:37:39.770" endtime="20210322 02:37:39.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.772" level="INFO">cc7c991bee0cb8ee</msg>
<status status="PASS" starttime="20210322 02:37:39.772" endtime="20210322 02:37:39.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.774" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:39.773" endtime="20210322 02:37:39.774"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.776" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:39.775" endtime="20210322 02:37:39.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:39.778" level="INFO">${payment_external_key} = 41e607f1d3b6405ea915762d2fa564ae</msg>
<status status="PASS" starttime="20210322 02:37:39.776" endtime="20210322 02:37:39.778"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.780" level="INFO">${payment_external_key} = 41e607f1d3b6405ea915762d2fa564ae</msg>
<status status="PASS" starttime="20210322 02:37:39.779" endtime="20210322 02:37:39.780"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 02:37:39.781" level="INFO">${end_to_end_id} = E19468242202103220537d6b483dad38</msg>
<status status="PASS" starttime="20210322 02:37:39.780" endtime="20210322 02:37:39.782"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.783" level="INFO">${end_to_end_id} = E19468242202103220537d6b483dad38</msg>
<status status="PASS" starttime="20210322 02:37:39.782" endtime="20210322 02:37:39.783"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 02:37:39.785" level="INFO">${message_id} = M194682428dd6bc8cbbbe03bc7b621cb</msg>
<status status="PASS" starttime="20210322 02:37:39.784" endtime="20210322 02:37:39.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.786" level="INFO">${message_id} = M194682428dd6bc8cbbbe03bc7b621cb</msg>
<status status="PASS" starttime="20210322 02:37:39.786" endtime="20210322 02:37:39.786"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.029" endtime="20210322 02:37:39.786"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:39.789" level="INFO">${date} = 2021-03-22 02:37:39.788531</msg>
<status status="PASS" starttime="20210322 02:37:39.789" endtime="20210322 02:37:39.789"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:39.790" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 02:37:39.790" endtime="20210322 02:37:39.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:39.791" endtime="20210322 02:37:39.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:39.792" endtime="20210322 02:37:39.792"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.793" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:39.793" endtime="20210322 02:37:39.793"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.794" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:39.793" endtime="20210322 02:37:39.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:39.794" endtime="20210322 02:37:39.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:39.795" endtime="20210322 02:37:39.795"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:39.795" endtime="20210322 02:37:39.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:39.796" endtime="20210322 02:37:39.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.798" level="FAIL">individual != business</msg>
<status status="FAIL" starttime="20210322 02:37:39.797" endtime="20210322 02:37:39.798"></status>
</kw>
<status status="FAIL" starttime="20210322 02:37:39.787" endtime="20210322 02:37:39.798"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Individual</doc>
<status status="FAIL" starttime="20210322 02:37:30.965" endtime="20210322 02:37:39.798" critical="yes">individual != business</status>
</test>
<test id="s1-s1-s2-t2" name="CenÃ¡rio: Criar pagamento PIX de para holder individual utilizando dados completos da conta de destino">
<kw name="criar chave pix ativa" library="pix_dict_create_active_key_pix">
<arguments>
<arg>holder_type=individual</arg>
<arg>pix_type=email</arg>
</arguments>
<kw name="Random Number" library="FakerLibrary">
<doc>Returns a random number with 1 digit (default, when digits==None),
a random number with 0 to given number of digits, or a random number
with given number to given number of digits (when ``fix_len==True``).</doc>
<arguments>
<arg>digits=8</arg>
<arg>fix_len=True</arg>
</arguments>
<assign>
<var>${phone}</var>
</assign>
<msg timestamp="20210322 02:37:39.800" level="INFO">${phone} = 17002416</msg>
<status status="PASS" starttime="20210322 02:37:39.800" endtime="20210322 02:37:39.800"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>+55219${phone}</arg>
</arguments>
<assign>
<var>${phone_pix}</var>
</assign>
<msg timestamp="20210322 02:37:39.801" level="INFO">${phone_pix} = +5521917002416</msg>
<status status="PASS" starttime="20210322 02:37:39.800" endtime="20210322 02:37:39.801"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.802" level="INFO">${phone_pix} = +5521917002416</msg>
<status status="PASS" starttime="20210322 02:37:39.802" endtime="20210322 02:37:39.802"></status>
</kw>
<kw name="Email" library="FakerLibrary">
<assign>
<var>${email_pix}</var>
</assign>
<msg timestamp="20210322 02:37:39.803" level="INFO">${email_pix} = davi-luiz87@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:39.802" endtime="20210322 02:37:39.803"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email_pix}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.803" level="INFO">${email_pix} = davi-luiz87@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:39.803" endtime="20210322 02:37:39.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${holder_type}' == 'business'</arg>
<arg>criar holder business ativo</arg>
<arg>ELSE IF</arg>
<arg>'${holder_type}' == 'individual'</arg>
<arg>criar holder individual ativo</arg>
</arguments>
<kw name="criar holder individual ativo" library="accreditation_create_holder_active">
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:39.805" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:39.805" endtime="20210322 02:37:39.805"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.804" endtime="20210322 02:37:39.805"></status>
</kw>
<kw name="Cpf" library="FakerLibrary">
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:39.806" level="INFO">${national_registration} = 621.850.937-03</msg>
<status status="PASS" starttime="20210322 02:37:39.806" endtime="20210322 02:37:39.806"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>.</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:39.806" level="INFO">${national_registration} = 621850937-03</msg>
<status status="PASS" starttime="20210322 02:37:39.806" endtime="20210322 02:37:39.806"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${national_registration}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${national_registration}</var>
</assign>
<msg timestamp="20210322 02:37:39.807" level="INFO">${national_registration} = 62185093703</msg>
<status status="PASS" starttime="20210322 02:37:39.807" endtime="20210322 02:37:39.807"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${national_registration}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.808" level="INFO">${national_registration} = 62185093703</msg>
<status status="PASS" starttime="20210322 02:37:39.807" endtime="20210322 02:37:39.808"></status>
</kw>
<kw name="Rg" library="FakerLibrary">
<doc>Brazilian RG, return plain numbers.
Check:  https://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html</doc>
<assign>
<var>${identity_card}</var>
</assign>
<msg timestamp="20210322 02:37:39.808" level="INFO">${identity_card} = 671832505</msg>
<status status="PASS" starttime="20210322 02:37:39.808" endtime="20210322 02:37:39.808"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${identity_card}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.809" level="INFO">${identity_card} = 671832505</msg>
<status status="PASS" starttime="20210322 02:37:39.808" endtime="20210322 02:37:39.809"></status>
</kw>
<kw name="criar holder individual" library="accreditation_post_holder_individual">
<arguments>
<arg>holder_type=individual</arg>
<arg>holder_name=${holder_name}</arg>
<arg>email=${email}</arg>
<arg>national_registration=${national_registration}</arg>
<arg>revenue=${revenue}</arg>
<arg>birthday=${birthday}</arg>
<arg>mothers_name=${mothers_name}</arg>
<arg>identity_card=${identity_card}</arg>
<arg>pep=false</arg>
<arg>cbo=${cbo}</arg>
</arguments>
<kw name="conectar accreditation" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accreditation</arg>
<arg>url=${accreditation_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:39.810" level="INFO">Creating Session using : alias=accreditation, url=https://banking-accreditation-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:39.810" endtime="20210322 02:37:39.810"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.810" endtime="20210322 02:37:39.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_type}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.811" level="INFO">${holder_type} = individual</msg>
<status status="PASS" starttime="20210322 02:37:39.811" endtime="20210322 02:37:39.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:39.812" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:37:39.811" endtime="20210322 02:37:39.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:39.812" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:39.812" endtime="20210322 02:37:39.812"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${holder_type}",</arg>
<arg>"name": "${holder_name}",</arg>
<arg>"email": "${email}",</arg>
<arg>"national_registration": "${national_registration}",</arg>
<arg>"revenue": ${revenue},</arg>
<arg>"birthday": "${birthday}",</arg>
<arg>"mothers_name": "${mothers_name}",</arg>
<arg>"identity_card": "${identity_card}",</arg>
<arg>"pep": false,</arg>
<arg>"cbo": ${cbo}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:39.813" level="INFO">${body} = { "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "62185093703", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder",...</msg>
<status status="PASS" starttime="20210322 02:37:39.812" endtime="20210322 02:37:39.813"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:39.814" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "62185093703", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "671832505", "pep": false, "cbo": 821450 } 
json=None</msg>
<msg timestamp="20210322 02:37:40.479" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:39.813" endtime="20210322 02:37:40.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.481" level="INFO">{'id': '1a9ac82fee794be490116e28ab5577f6', 'name': 'Holder de teste', 'revenue': 5500.0, 'email': 'teste@teste.com.br', 'status': 'waiting_info_and_documents', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'marketplace_name': 'Marketplace de Teste', 'created_at': '2021-03-22T02:37:41.30972', 'updated_at': '2021-03-22T02:37:41.309722', 'type': 'individual', 'national_registration': '62185093703', 'birthday': '1988-04-23', 'mothers_name': 'MÃ£e do Holder', 'identity_card': '671832505', 'pep': False, 'cbo': '821450', '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6', 'type': 'GET'}, 'phones': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/phones', 'type': 'GET'}, 'addresses': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/addresses', 'type': 'GET'}, 'documents': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:40.480" endtime="20210322 02:37:40.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.484" level="INFO">48b72accb79b868f</msg>
<status status="PASS" starttime="20210322 02:37:40.483" endtime="20210322 02:37:40.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.487" level="INFO">{ "type": "individual", "name": "Holder de teste", "email": "teste@teste.com.br", "national_registration": "62185093703", "revenue": 5500.00, "birthday": "1988-04-23", "mothers_name": "MÃ£e do Holder", "identity_card": "671832505", "pep": false, "cbo": 821450 }</msg>
<status status="PASS" starttime="20210322 02:37:40.486" endtime="20210322 02:37:40.487"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.490" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.488" endtime="20210322 02:37:40.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${holder_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:40.491" level="INFO">${holder_external_key} = 1a9ac82fee794be490116e28ab5577f6</msg>
<status status="PASS" starttime="20210322 02:37:40.490" endtime="20210322 02:37:40.491"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.493" level="INFO">${holder_external_key} = 1a9ac82fee794be490116e28ab5577f6</msg>
<status status="PASS" starttime="20210322 02:37:40.492" endtime="20210322 02:37:40.493"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.809" endtime="20210322 02:37:40.493"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${holder_name}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.494" level="INFO">${holder_name} = Holder de teste</msg>
<status status="PASS" starttime="20210322 02:37:40.494" endtime="20210322 02:37:40.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:40.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.495" endtime="20210322 02:37:40.496"></status>
</kw>
<kw name="criar holder phone" library="accreditation_post_holder_phone">
<arguments>
<arg>21</arg>
<arg>51</arg>
<arg>996221236</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:40.498" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:40.497" endtime="20210322 02:37:40.498"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"area_code": "${phone_area_code}",</arg>
<arg>"country_code": "${phone_country_code}",</arg>
<arg>"number": "${phone_number}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:40.499" level="INFO">${body} = { "area_code": "21", "country_code": "51", "number": "996221236" }</msg>
<status status="PASS" starttime="20210322 02:37:40.498" endtime="20210322 02:37:40.499"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/phones</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:40.501" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/phones, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "area_code": "21", "country_code": "51", "number": "996221236" } 
json=None</msg>
<msg timestamp="20210322 02:37:40.726" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.500" endtime="20210322 02:37:40.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.728" level="INFO">{'id': 'a1f39eb7586c460784b6a9856dcecfcc', 'area_code': '21', 'country_code': '51', 'number': '996221236', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/phones/a1f39eb7586c460784b6a9856dcecfcc', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:40.727" endtime="20210322 02:37:40.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.730" level="INFO">9970f5e82f0e7f0a</msg>
<status status="PASS" starttime="20210322 02:37:40.729" endtime="20210322 02:37:40.730"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.731" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.731" endtime="20210322 02:37:40.732"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${phone_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:40.734" level="INFO">${phone_external_key} = a1f39eb7586c460784b6a9856dcecfcc</msg>
<status status="PASS" starttime="20210322 02:37:40.732" endtime="20210322 02:37:40.734"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${phone_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.735" level="INFO">${phone_external_key} = a1f39eb7586c460784b6a9856dcecfcc</msg>
<status status="PASS" starttime="20210322 02:37:40.734" endtime="20210322 02:37:40.735"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:40.496" endtime="20210322 02:37:40.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:40.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.736" endtime="20210322 02:37:40.737"></status>
</kw>
<kw name="criar holder address" library="accreditation_post_holder_address">
<arguments>
<arg>Rio de Janeiro</arg>
<arg>Rio de Janeiro</arg>
<arg>Brasil</arg>
<arg>Bairro de Testes</arg>
<arg>Rua de Testes</arg>
<arg>90</arg>
<arg>apto 200</arg>
<arg>21550987</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:40.738" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:40.738" endtime="20210322 02:37:40.738"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"city": "${city}",</arg>
<arg>"state": "${state}",</arg>
<arg>"country": "${country}",</arg>
<arg>"neighborhood": "${neighborhood}",</arg>
<arg>"street": "${street}",</arg>
<arg>"number": "${number}",</arg>
<arg>"complement": "${complement}",</arg>
<arg>"postal_code": "${postal_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:40.739" level="INFO">${body} = { "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "215...</msg>
<status status="PASS" starttime="20210322 02:37:40.739" endtime="20210322 02:37:40.739"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/addresses</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:40.741" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/addresses, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "city": "Rio de Janeiro", "state": "Rio de Janeiro", "country": "Brasil", "neighborhood": "Bairro de Testes", "street": "Rua de Testes", "number": "90", "complement": "apto 200", "postal_code": "21550987" } 
json=None</msg>
<msg timestamp="20210322 02:37:40.992" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.740" endtime="20210322 02:37:40.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.994" level="INFO">{'id': '88c91678710a4bfcbeba962aef75ffba', 'street': 'Rua de Testes', 'number': '90', 'city': 'Rio de Janeiro', 'complement': 'apto 200', 'state': 'Rio de Janeiro', 'neighborhood': 'Bairro de Testes', 'postal_code': '21550987', 'country': 'Brasil', 'main': True, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/addresses/88c91678710a4bfcbeba962aef75ffba', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:40.993" endtime="20210322 02:37:40.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.996" level="INFO">909bff6ff1de7c9f</msg>
<status status="PASS" starttime="20210322 02:37:40.995" endtime="20210322 02:37:40.997"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:40.999" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:40.998" endtime="20210322 02:37:40.999"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${address_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:41.001" level="INFO">${address_external_key} = 88c91678710a4bfcbeba962aef75ffba</msg>
<status status="PASS" starttime="20210322 02:37:40.999" endtime="20210322 02:37:41.001"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${address_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.002" level="INFO">${address_external_key} = 88c91678710a4bfcbeba962aef75ffba</msg>
<status status="PASS" starttime="20210322 02:37:41.001" endtime="20210322 02:37:41.002"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:40.737" endtime="20210322 02:37:41.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:41.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.003" endtime="20210322 02:37:41.004"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>SELFIE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:41.007" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:41.005" endtime="20210322 02:37:41.007"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:41.008" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:41.010" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:41.007" endtime="20210322 02:37:41.010"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:41.012" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents?type=SELFIE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:41.342" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.011" endtime="20210322 02:37:41.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.344" level="INFO">{'id': '3541cc788ef2448b8cbd50d53f407f3e', 'document_type': 'selfie', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents/3541cc788ef2448b8cbd50d53f407f3e', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents/3541cc788ef2448b8cbd50d53f407f3e/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:41.343" endtime="20210322 02:37:41.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.347" level="INFO">35acac90b50e16e4</msg>
<status status="PASS" starttime="20210322 02:37:41.346" endtime="20210322 02:37:41.347"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.349" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.348" endtime="20210322 02:37:41.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:41.352" level="INFO">${document_external_key} = 3541cc788ef2448b8cbd50d53f407f3e</msg>
<status status="PASS" starttime="20210322 02:37:41.350" endtime="20210322 02:37:41.352"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.355" level="INFO">${document_external_key} = 3541cc788ef2448b8cbd50d53f407f3e</msg>
<status status="PASS" starttime="20210322 02:37:41.353" endtime="20210322 02:37:41.355"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:41.004" endtime="20210322 02:37:41.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:41.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.356" endtime="20210322 02:37:41.357"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_FRENTE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:41.359" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:41.358" endtime="20210322 02:37:41.359"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:41.360" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:41.363" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:41.360" endtime="20210322 02:37:41.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:41.365" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents?type=RG_FRENTE, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:41.652" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.364" endtime="20210322 02:37:41.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.654" level="INFO">{'id': 'f93b2c81bf184aacb0cdf72c43da6831', 'document_type': 'rg_frente', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents/f93b2c81bf184aacb0cdf72c43da6831', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents/f93b2c81bf184aacb0cdf72c43da6831/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:41.653" endtime="20210322 02:37:41.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.656" level="INFO">c8f0fa869d1bf030</msg>
<status status="PASS" starttime="20210322 02:37:41.655" endtime="20210322 02:37:41.657"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.658" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.657" endtime="20210322 02:37:41.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:41.661" level="INFO">${document_external_key} = f93b2c81bf184aacb0cdf72c43da6831</msg>
<status status="PASS" starttime="20210322 02:37:41.659" endtime="20210322 02:37:41.661"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:41.663" level="INFO">${document_external_key} = f93b2c81bf184aacb0cdf72c43da6831</msg>
<status status="PASS" starttime="20210322 02:37:41.662" endtime="20210322 02:37:41.663"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:41.357" endtime="20210322 02:37:41.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:41.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.664" endtime="20210322 02:37:41.665"></status>
</kw>
<kw name="criar holder document" library="accreditation_post_holder_document">
<arguments>
<arg>RG_VERSO</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=image/jpeg</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:41.667" level="INFO">${header} = {'Content-Type': 'image/jpeg'}</msg>
<status status="PASS" starttime="20210322 02:37:41.666" endtime="20210322 02:37:41.667"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>./../../images/accreditation/image.jpg</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210322 02:37:41.668" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg"&gt;C:\Users\vinicius.trindade\banking_continuous_testing\banking_continuous_testing\images\accreditation\image.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20210322 02:37:41.670" level="INFO">${data} = \xff\xd8\xff\xe0JFIF\xf0\xf0\xff\xdbC


		
%# , #&amp;')*)-0-(0%()(\xff\xc0\xa0\xf0\xff\xc4	\xff\xc4=...</msg>
<status status="PASS" starttime="20210322 02:37:41.667" endtime="20210322 02:37:41.671"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/documents?type=${document_type}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:41.672" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents?type=RG_VERSO, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'image/jpeg'} 
data=&lt;image/jpeg&gt; 
json=None</msg>
<msg timestamp="20210322 02:37:42.012" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:41.671" endtime="20210322 02:37:42.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.015" level="INFO">{'id': 'c2ddd9c8e566416a97a45e1be830d8dd', 'document_type': 'rg_verso', 'media_type': 'image_jpeg', 'length': 3135, '_links': {'self': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents/c2ddd9c8e566416a97a45e1be830d8dd', 'type': 'GET'}, 'holder': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6', 'type': 'GET'}, 'download': {'href': 'https://banking-accreditation-internal.staging.zoop.tech/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/documents/c2ddd9c8e566416a97a45e1be830d8dd/download', 'type': 'GET'}}}</msg>
<status status="PASS" starttime="20210322 02:37:42.014" endtime="20210322 02:37:42.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.017" level="INFO">326936eb696714f6</msg>
<status status="PASS" starttime="20210322 02:37:42.016" endtime="20210322 02:37:42.017"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.019" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.018" endtime="20210322 02:37:42.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${document_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:42.021" level="INFO">${document_external_key} = c2ddd9c8e566416a97a45e1be830d8dd</msg>
<status status="PASS" starttime="20210322 02:37:42.020" endtime="20210322 02:37:42.021"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${document_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.022" level="INFO">${document_external_key} = c2ddd9c8e566416a97a45e1be830d8dd</msg>
<status status="PASS" starttime="20210322 02:37:42.022" endtime="20210322 02:37:42.022"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:41.665" endtime="20210322 02:37:42.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20210322 02:37:42.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.023" endtime="20210322 02:37:42.024"></status>
</kw>
<kw name="solicitar aprovaÃ§Ã£o do holder" library="accreditation_request_approval">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:42.027" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:42.026" endtime="20210322 02:37:42.027"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/approval</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:42.029" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:42.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.028" endtime="20210322 02:37:42.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.317" level="INFO">{'message': 'Approval request accepted successfully. Processing analysis'}</msg>
<status status="PASS" starttime="20210322 02:37:42.316" endtime="20210322 02:37:42.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.320" level="INFO">4831415adbb1ecac</msg>
<status status="PASS" starttime="20210322 02:37:42.319" endtime="20210322 02:37:42.320"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.321" endtime="20210322 02:37:42.322"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:42.025" endtime="20210322 02:37:42.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:42.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.324" endtime="20210322 02:37:42.325"></status>
</kw>
<kw name="recebendo notificaÃ§Ã£o de aprovaÃ§Ã£o" library="accreditation_risk_notification">
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${assessment_id}</var>
</assign>
<msg timestamp="20210322 02:37:42.328" level="INFO">${assessment_id} = 1c15548b-a099-4bb5-b457-9808944acc7c</msg>
<status status="PASS" starttime="20210322 02:37:42.328" endtime="20210322 02:37:42.329"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>year</arg>
</arguments>
<assign>
<var>${year}</var>
</assign>
<msg timestamp="20210322 02:37:42.331" level="INFO">${year} = 2021</msg>
<status status="PASS" starttime="20210322 02:37:42.330" endtime="20210322 02:37:42.331"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>month</arg>
</arguments>
<assign>
<var>${month}</var>
</assign>
<msg timestamp="20210322 02:37:42.333" level="INFO">${month} = 03</msg>
<status status="PASS" starttime="20210322 02:37:42.332" endtime="20210322 02:37:42.333"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>day</arg>
</arguments>
<assign>
<var>${day}</var>
</assign>
<msg timestamp="20210322 02:37:42.334" level="INFO">${day} = 22</msg>
<status status="PASS" starttime="20210322 02:37:42.333" endtime="20210322 02:37:42.334"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:42.335" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:42.335" endtime="20210322 02:37:42.335"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "risk.assessment.result",</arg>
<arg>"resource": "business.holder",</arg>
<arg>"created_at": "${year}-${month}-${day} 15:28:56.747Z",</arg>
<arg>"marketplace_id": "${marketplace_external_key}",</arg>
<arg>"object": {</arg>
<arg>"result": "APPROVED",</arg>
<arg>"holder_id": "${holder_external_key}",</arg>
<arg>"applicant_id": "${application_external_key}",</arg>
<arg>"assessment_id": "${assessment_id}"</arg>
<arg>}</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:42.337" level="INFO">${body} = { "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "ho...</msg>
<status status="PASS" starttime="20210322 02:37:42.336" endtime="20210322 02:37:42.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accreditation</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/accreditation/holders/${holder_external_key}/registration/approval</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:42.339" level="INFO">POST Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/accreditation/holders/1a9ac82fee794be490116e28ab5577f6/registration/approval, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "risk.assessment.result", "resource": "business.holder", "created_at": "2021-03-22 15:28:56.747Z", "marketplace_id": "f71a8951368a4cc085cf7875ff44e61c", "object": { "result": "APPROVED", "holder_id": "1a9ac82fee794be490116e28ab5577f6", "applicant_id": "bcc25a6751c14b52af1340d40dba78c5", "assessment_id": "1c15548b-a099-4bb5-b457-9808944acc7c" } } 
json=None</msg>
<msg timestamp="20210322 02:37:42.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.338" endtime="20210322 02:37:42.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.544" level="INFO">{'message': 'Holder approved successfully'}</msg>
<status status="PASS" starttime="20210322 02:37:42.543" endtime="20210322 02:37:42.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.545" level="INFO">062218860e343efc</msg>
<status status="PASS" starttime="20210322 02:37:42.545" endtime="20210322 02:37:42.546"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:42.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.546" endtime="20210322 02:37:42.547"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:42.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.548" endtime="20210322 02:37:42.549"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:42.326" endtime="20210322 02:37:42.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:42.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.550" endtime="20210322 02:37:42.551"></status>
</kw>
<kw name="buscar account por holder" library="accounts_get_accounts_by_holder">
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:42.553" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:42.552" endtime="20210322 02:37:42.553"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:42.552" endtime="20210322 02:37:42.554"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/marketplaces/${marketplace_external_key}/holders/${holder_external_key}/accounts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:42.554" level="INFO">GET Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/holders/1a9ac82fee794be490116e28ab5577f6/accounts, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:43.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:42.554" endtime="20210322 02:37:43.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.202" level="INFO">{'items': [{'id': 'da00209a3e0b4336b043dbde0e82d3f0', 'holder': '1a9ac82fee794be490116e28ab5577f6', 'balance': '0.00', 'currency': 'BRL', 'routing_number': '001', 'number': '9184857784', 'status': 'active', 'metadata': {}, 'created_at': '2021-03-22T05:37:43.368', 'updated_at': '2021-03-22T05:37:43.368', 'primary': True, 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'uri': '/v2/marketplaces/f71a8951368a4cc085cf7875ff44e61c/accounts/da00209a3e0b4336b043dbde0e82d3f0', 'resource': 'payment_account'}], 'has_more': False, 'limit': 100, 'total_pages': 1, 'page': 1, 'offset': 0, 'total': '1', 'query_count': '1'}</msg>
<status status="PASS" starttime="20210322 02:37:43.200" endtime="20210322 02:37:43.203"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:43.204" endtime="20210322 02:37:43.205"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["id"]}</arg>
</arguments>
<assign>
<var>${account_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:43.207" level="INFO">${account_external_key} = da00209a3e0b4336b043dbde0e82d3f0</msg>
<status status="PASS" starttime="20210322 02:37:43.206" endtime="20210322 02:37:43.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.209" level="INFO">${account_external_key} = da00209a3e0b4336b043dbde0e82d3f0</msg>
<status status="PASS" starttime="20210322 02:37:43.208" endtime="20210322 02:37:43.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["number"]}</arg>
</arguments>
<assign>
<var>${account_number}</var>
</assign>
<msg timestamp="20210322 02:37:43.210" level="INFO">${account_number} = 9184857784</msg>
<status status="PASS" starttime="20210322 02:37:43.209" endtime="20210322 02:37:43.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.211" level="INFO">${account_number} = 9184857784</msg>
<status status="PASS" starttime="20210322 02:37:43.211" endtime="20210322 02:37:43.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["items"][0]["routing_number"]}</arg>
</arguments>
<assign>
<var>${account_routing_number}</var>
</assign>
<msg timestamp="20210322 02:37:43.213" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:43.212" endtime="20210322 02:37:43.213"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${account_routing_number}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.214" level="INFO">${account_routing_number} = 001</msg>
<status status="PASS" starttime="20210322 02:37:43.213" endtime="20210322 02:37:43.214"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:42.551" endtime="20210322 02:37:43.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210322 02:37:43.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:43.214" endtime="20210322 02:37:43.215"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.804" endtime="20210322 02:37:43.215"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.804" endtime="20210322 02:37:43.215"></status>
</kw>
<kw name="gerar saldo para account" library="account_generate_balance">
<arguments>
<arg>${account_external_key}</arg>
</arguments>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:43.218" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:43.217" endtime="20210322 02:37:43.218"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:43.217" endtime="20210322 02:37:43.218"></status>
</kw>
<kw name="Uuid 4" library="FakerLibrary">
<doc>Generates a random UUID4 string.
:param cast_to: Specify what type the UUID should be cast to. Default is `str`
:type cast_to: callable</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20210322 02:37:43.219" level="INFO">${uuid} = 0e97e911-eef9-4775-85be-9ea3be401cad</msg>
<status status="PASS" starttime="20210322 02:37:43.219" endtime="20210322 02:37:43.219"></status>
</kw>
<kw name="conectar accounts" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=accounts</arg>
<arg>url=${account_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:43.220" level="INFO">Creating Session using : alias=accounts, url=https://banking-accounts-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:43.220" endtime="20210322 02:37:43.220"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:43.219" endtime="20210322 02:37:43.221"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:43.221" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:43.221" endtime="20210322 02:37:43.221"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"operations": [</arg>
<arg>{</arg>
<arg>"amount": 9000000000000,</arg>
<arg>"authorization_code": "${uuid}",</arg>
<arg>"transaction_id": "${uuid}",</arg>
<arg>"id": "${uuid}",</arg>
<arg>"id_checking_account": "${account_external_key}",</arg>
<arg>"transfer_date": "2020-02-20T20:58:06.510Z",</arg>
<arg>"fee": 0,</arg>
<arg>"description": "Teste",</arg>
<arg>"object_type": "transfer",</arg>
<arg>"object_id": "${uuid}",</arg>
<arg>"dflag": "ACTIVE",</arg>
<arg>"created_at": "2019-10-14T20:58:06.510Z",</arg>
<arg>"type": "Transfer"</arg>
<arg>}</arg>
<arg>],</arg>
<arg>"reference_id": "Criando saldo na account"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:43.222" level="INFO">${body} = { "operations": [ { "amount": 9000000000000, "authorization_code": "0e97e911-eef9-4775-85be-9ea3be401cad", "transaction_id": "0e97e911-eef9-4775-85be-9ea3be401cad", "id": "0e97e911-eef9-4775-85be-9ea3...</msg>
<status status="PASS" starttime="20210322 02:37:43.222" endtime="20210322 02:37:43.223"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>accounts</arg>
<arg>/admin/internal_operation/authorization/${uuid}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:43.223" level="INFO">POST Request using : uri=/admin/internal_operation/authorization/0e97e911-eef9-4775-85be-9ea3be401cad, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "operations": [ { "amount": 9000000000000, "authorization_code": "0e97e911-eef9-4775-85be-9ea3be401cad", "transaction_id": "0e97e911-eef9-4775-85be-9ea3be401cad", "id": "0e97e911-eef9-4775-85be-9ea3be401cad", "id_checking_account": "da00209a3e0b4336b043dbde0e82d3f0", "transfer_date": "2020-02-20T20:58:06.510Z", "fee": 0, "description": "Teste", "object_type": "transfer", "object_id": "0e97e911-eef9-4775-85be-9ea3be401cad", "dflag": "ACTIVE", "created_at": "2019-10-14T20:58:06.510Z", "type": "Transfer" } ], "reference_id": "Criando saldo na account" } 
json=None</msg>
<msg timestamp="20210322 02:37:43.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:43.223" endtime="20210322 02:37:43.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:43.880" endtime="20210322 02:37:43.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:43.882" endtime="20210322 02:37:43.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.status_code}' == 200</arg>
<arg>Log</arg>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:43.884" endtime="20210322 02:37:43.885"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:43.216" endtime="20210322 02:37:43.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${phone_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'evp'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'national_registration'</arg>
<arg>criar chave pix</arg>
<arg>${pix_type}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="criar chave pix" library="pix_dict_create_entry">
<arguments>
<arg>${pix_type}</arg>
<arg>${email_pix}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:43.889" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:43.889" endtime="20210322 02:37:43.890"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:43.888" endtime="20210322 02:37:43.890"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${type}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.891" level="INFO">${type} = email</msg>
<status status="PASS" starttime="20210322 02:37:43.891" endtime="20210322 02:37:43.891"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210322 02:37:43.892" level="INFO">${value} = davi-luiz87@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:43.892" endtime="20210322 02:37:43.892"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:43.893" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:43.893" endtime="20210322 02:37:43.893"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"type": "${type}",</arg>
<arg>"value": "${value}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:43.894" level="INFO">${body} = { "type": "email", "value": "davi-luiz87@gmail.com" }</msg>
<status status="PASS" starttime="20210322 02:37:43.893" endtime="20210322 02:37:43.894"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:43.895" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1a9ac82fee794be490116e28ab5577f6/accounts/da00209a3e0b4336b043dbde0e82d3f0/entries, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "type": "email", "value": "davi-luiz87@gmail.com" } 
json=None</msg>
<msg timestamp="20210322 02:37:44.526" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:43.894" endtime="20210322 02:37:44.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:44.526" level="INFO">{'id': 'e61b63b5d2a14983bca320f588adb9a5', 'status': 'waiting_ownership_verification', 'created_at': '2021-03-22T02:37:45.377', 'updated_at': '2021-03-22T02:37:45.377', 'key': {'value': 'davi-luiz87@gmail.com', 'type': 'email'}, 'account': {'id': 'da00209a3e0b4336b043dbde0e82d3f0', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1a9ac82fee794be490116e28ab5577f6', 'owner': {'name': 'Holder de teste', 'national_registration': '62185093703', 'type': 'individual'}, 'routing_number': '001', 'number': '9184857784', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:44.526" endtime="20210322 02:37:44.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:44.527" level="INFO">6736da7d9a166149</msg>
<status status="PASS" starttime="20210322 02:37:44.527" endtime="20210322 02:37:44.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:44.527" level="INFO">202</msg>
<status status="PASS" starttime="20210322 02:37:44.527" endtime="20210322 02:37:44.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:44.528" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:44.528" endtime="20210322 02:37:44.528"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${entry_external_key}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:44.529" endtime="20210322 02:37:44.529"></status>
</kw>
<msg timestamp="20210322 02:37:44.529" level="INFO">${entry_external_key} = e61b63b5d2a14983bca320f588adb9a5</msg>
<status status="PASS" starttime="20210322 02:37:44.528" endtime="20210322 02:37:44.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:44.530" level="INFO">${entry_external_key} = e61b63b5d2a14983bca320f588adb9a5</msg>
<status status="PASS" starttime="20210322 02:37:44.529" endtime="20210322 02:37:44.530"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["key"]["value"]}</arg>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<assign>
<var>${entry_key_value}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==202</arg>
<arg>${response.json()["key"]["value"]}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:44.530" endtime="20210322 02:37:44.531"></status>
</kw>
<msg timestamp="20210322 02:37:44.531" level="INFO">${entry_key_value} = davi-luiz87@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:44.530" endtime="20210322 02:37:44.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${entry_key_value}</arg>
</arguments>
<msg timestamp="20210322 02:37:44.531" level="INFO">${entry_key_value} = davi-luiz87@gmail.com</msg>
<status status="PASS" starttime="20210322 02:37:44.531" endtime="20210322 02:37:44.531"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:43.887" endtime="20210322 02:37:44.531"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:43.885" endtime="20210322 02:37:44.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>buscar verification code</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="buscar verification code" library="pix_dict_verification_code">
<arguments>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:44.533" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:44.533" endtime="20210322 02:37:44.533"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:44.532" endtime="20210322 02:37:44.533"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/admin/internal_operation/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/code</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:44.534" level="INFO">GET Request using : uri=/admin/internal_operation/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1a9ac82fee794be490116e28ab5577f6/accounts/da00209a3e0b4336b043dbde0e82d3f0/entries/e61b63b5d2a14983bca320f588adb9a5/code, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20210322 02:37:45.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:44.534" endtime="20210322 02:37:45.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:45.129" level="INFO">{'code': '5857'}</msg>
<status status="PASS" starttime="20210322 02:37:45.128" endtime="20210322 02:37:45.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:45.129" level="INFO">2079da179af8f2ad</msg>
<status status="PASS" starttime="20210322 02:37:45.129" endtime="20210322 02:37:45.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:45.130" level="INFO">200</msg>
<status status="PASS" starttime="20210322 02:37:45.129" endtime="20210322 02:37:45.130"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:45.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:45.130" endtime="20210322 02:37:45.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==200</arg>
<arg>${response.json()["code"]}</arg>
</arguments>
<assign>
<var>${verification_code}</var>
</assign>
<msg timestamp="20210322 02:37:45.131" level="INFO">${verification_code} = 5857</msg>
<status status="PASS" starttime="20210322 02:37:45.130" endtime="20210322 02:37:45.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${verification_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:45.131" level="INFO">${verification_code} = 5857</msg>
<status status="PASS" starttime="20210322 02:37:45.131" endtime="20210322 02:37:45.131"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:44.532" endtime="20210322 02:37:45.131"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:44.531" endtime="20210322 02:37:45.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pix_type}' == 'phone'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
<arg>ELSE IF</arg>
<arg>'${pix_type}' == 'email'</arg>
<arg>confirmar propriedade da chave pix</arg>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="confirmar propriedade da chave pix" library="pix_dict_confirm_propriety">
<arguments>
<arg>${verification_code}</arg>
<arg>${holder_external_key}</arg>
<arg>${account_external_key}</arg>
<arg>${entry_external_key}</arg>
</arguments>
<kw name="conectar pix-dict" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-dict</arg>
<arg>url=${pix_dict_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:45.133" level="INFO">Creating Session using : alias=pix-dict, url=https://banking-pix-dict-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:45.133" endtime="20210322 02:37:45.133"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:45.132" endtime="20210322 02:37:45.133"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:45.133" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:45.133" endtime="20210322 02:37:45.134"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"code": "${verification_code}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:45.134" level="INFO">${body} = { "code": "5857" }</msg>
<status status="PASS" starttime="20210322 02:37:45.134" endtime="20210322 02:37:45.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-dict</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/dict/holders/${holder_external_key}/accounts/${account_external_key}/entries/${entry_external_key}/ownership</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:45.135" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/dict/holders/1a9ac82fee794be490116e28ab5577f6/accounts/da00209a3e0b4336b043dbde0e82d3f0/entries/e61b63b5d2a14983bca320f588adb9a5/ownership, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "code": "5857" } 
json=None</msg>
<msg timestamp="20210322 02:37:46.847" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:45.135" endtime="20210322 02:37:46.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:46.848" level="INFO">{'id': 'e61b63b5d2a14983bca320f588adb9a5', 'status': 'active', 'created_at': '2021-03-22T02:37:45.377', 'updated_at': '2021-03-22T02:37:47.708', 'key': {'value': 'davi-luiz87@gmail.com', 'type': 'email'}, 'account': {'id': 'da00209a3e0b4336b043dbde0e82d3f0', 'marketplace': 'f71a8951368a4cc085cf7875ff44e61c', 'holder': '1a9ac82fee794be490116e28ab5577f6', 'owner': {'name': 'Holder de teste', 'national_registration': '62185093703', 'type': 'individual'}, 'routing_number': '001', 'number': '9184857784', 'type': 'CACC'}, 'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'resource': 'pix.entry'}</msg>
<status status="PASS" starttime="20210322 02:37:46.848" endtime="20210322 02:37:46.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:46.849" level="INFO">d5121e0b9466311b</msg>
<status status="PASS" starttime="20210322 02:37:46.848" endtime="20210322 02:37:46.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:46.849" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:46.849" endtime="20210322 02:37:46.849"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:46.850" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:46.850" endtime="20210322 02:37:46.850"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:45.132" endtime="20210322 02:37:46.850"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:45.132" endtime="20210322 02:37:46.850"></status>
</kw>
<kw name="validar ativaÃ§Ã£o da chave de endereÃ§amento" library="asserts">
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>active</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:46.851" endtime="20210322 02:37:46.852"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:46.851" endtime="20210322 02:37:46.852"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:39.799" endtime="20210322 02:37:46.852"></status>
</kw>
<kw name="criar pagamento pix com dados completos" library="pix_payments_create_pix_payment">
<arguments>
<arg>amount=${amount}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_psp=${creditor_psp}</arg>
<arg>pix_description=${pix_description}</arg>
</arguments>
<kw name="conectar pix-payments" library="create_session_staging_internal">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=pix-payments</arg>
<arg>url=${pix_payments_url_base}</arg>
<arg>disable_warnings=true</arg>
</arguments>
<msg timestamp="20210322 02:37:46.854" level="INFO">Creating Session using : alias=pix-payments, url=https://banking-pix-payments-internal.staging.zoop.tech, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210322 02:37:46.853" endtime="20210322 02:37:46.854"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:46.853" endtime="20210322 02:37:46.854"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20210322 02:37:46.855" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210322 02:37:46.854" endtime="20210322 02:37:46.855"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"amount": ${amount},</arg>
<arg>"creditor": {</arg>
<arg>"account": {</arg>
<arg>"number": "${creditor_account_number}",</arg>
<arg>"routing_number": "${creditor_routing_number}",</arg>
<arg>"type": "${creditor_account_type}"</arg>
<arg>},</arg>
<arg>"name": "${creditor_name}",</arg>
<arg>"national_registration": "${creditor_national_registration}",</arg>
<arg>"psp": "${creditor_psp}"</arg>
<arg>},</arg>
<arg>"description": "${pix_description}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210322 02:37:46.856" level="INFO">${body} = { "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451...</msg>
<status status="PASS" starttime="20210322 02:37:46.855" endtime="20210322 02:37:46.856"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>pix-payments</arg>
<arg>/marketplaces/${marketplace_external_key}/banking/pix/holders/${holder_external_key}/accounts/${account_external_key}/payments</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210322 02:37:46.857" level="INFO">POST Request using : uri=/marketplaces/f71a8951368a4cc085cf7875ff44e61c/banking/pix/holders/1a9ac82fee794be490116e28ab5577f6/accounts/da00209a3e0b4336b043dbde0e82d3f0/payments, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={ "amount": 100, "creditor": { "account": { "number": "0243882974", "routing_number": "0500", "type": "cacc" }, "name": "Massa iti PF NauNNMO", "national_registration": "42808422644", "psp": "17192451" }, "description": "Envio de PIX" } 
json=None</msg>
<msg timestamp="20210322 02:37:47.489" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:46.856" endtime="20210322 02:37:47.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.491" level="INFO">{'id': '059dae82c93541f89150b9c54ecc21af', 'marketplace_id': 'f71a8951368a4cc085cf7875ff44e61c', 'status': 'pending', 'end_to_end_id': 'E19468242202103220537f4aacc430f4', 'message_id': 'M19468242b1c39c00e43d48cc6daecaa', 'amount': 100, 'created_at': '2021-03-22T02:37:48.31218', 'description': 'Envio de PIX', 'debtor': {'national_registration': '62185093703', 'name': 'Holder de teste', 'type': 'individual', 'holder_id': '1a9ac82fee794be490116e28ab5577f6', 'account': {'psp': {'code': '19468242', 'name': 'Zoop Tecnologia e Meios de Pagamento S.A.'}, 'digital_account_id': 'da00209a3e0b4336b043dbde0e82d3f0', 'number': '9184857784', 'routing_number': '0001', 'type': 'cacc'}}, 'creditor': {'national_registration': '42808422644', 'name': 'Massa iti PF NauNNMO', 'type': 'individual', 'account': {'psp': {'code': '17192451'}, 'number': '0243882974', 'routing_number': '0500', 'type': 'cacc'}}, 'refunded_amount': 0}</msg>
<status status="PASS" starttime="20210322 02:37:47.490" endtime="20210322 02:37:47.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.headers['X-REQUEST-ID']}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.494" level="INFO">180854411f774255</msg>
<status status="PASS" starttime="20210322 02:37:47.493" endtime="20210322 02:37:47.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.496" level="INFO">201</msg>
<status status="PASS" starttime="20210322 02:37:47.495" endtime="20210322 02:37:47.496"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.498" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210322 02:37:47.497" endtime="20210322 02:37:47.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["id"]}</arg>
</arguments>
<assign>
<var>${payment_external_key}</var>
</assign>
<msg timestamp="20210322 02:37:47.501" level="INFO">${payment_external_key} = 059dae82c93541f89150b9c54ecc21af</msg>
<status status="PASS" starttime="20210322 02:37:47.499" endtime="20210322 02:37:47.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${payment_external_key}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.503" level="INFO">${payment_external_key} = 059dae82c93541f89150b9c54ecc21af</msg>
<status status="PASS" starttime="20210322 02:37:47.502" endtime="20210322 02:37:47.503"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<assign>
<var>${end_to_end_id}</var>
</assign>
<msg timestamp="20210322 02:37:47.504" level="INFO">${end_to_end_id} = E19468242202103220537f4aacc430f4</msg>
<status status="PASS" starttime="20210322 02:37:47.503" endtime="20210322 02:37:47.504"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${end_to_end_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.506" level="INFO">${end_to_end_id} = E19468242202103220537f4aacc430f4</msg>
<status status="PASS" starttime="20210322 02:37:47.505" endtime="20210322 02:37:47.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${response.status_code}==201</arg>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<assign>
<var>${message_id}</var>
</assign>
<msg timestamp="20210322 02:37:47.507" level="INFO">${message_id} = M19468242b1c39c00e43d48cc6daecaa</msg>
<status status="PASS" starttime="20210322 02:37:47.506" endtime="20210322 02:37:47.507"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${message_id}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.508" level="INFO">${message_id} = M19468242b1c39c00e43d48cc6daecaa</msg>
<status status="PASS" starttime="20210322 02:37:47.507" endtime="20210322 02:37:47.508"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:46.852" endtime="20210322 02:37:47.508"></status>
</kw>
<kw name="validar pagamento pix" library="asserts">
<arguments>
<arg>marketplace_external_key=${marketplace_external_key}</arg>
<arg>status_pix_payments=pending</arg>
<arg>amount=${amount}</arg>
<arg>pix_description=${pix_description}</arg>
<arg>debitor_national_registration=${national_registration}</arg>
<arg>debitor_name=${holder_name}</arg>
<arg>debitor_type=${holder_type}</arg>
<arg>debitor_holder_id=${holder_external_key}</arg>
<arg>debtor_account_psp_code=${debtor_account_psp_code}</arg>
<arg>debtor_account_psp_name=${debtor_account_psp_name}</arg>
<arg>debtor_digital_account=${account_external_key}</arg>
<arg>debtor_account_number=${account_number}</arg>
<arg>debtor_account_routing_number=${account_routing_number}</arg>
<arg>debtor_account_type=${debtor_account_type}</arg>
<arg>creditor_national_registration=${creditor_national_registration}</arg>
<arg>creditor_name=${creditor_name}</arg>
<arg>creditor_type=individual</arg>
<arg>creditor_account_psp_code=${creditor_psp}</arg>
<arg>creditor_account_number=${creditor_account_number}</arg>
<arg>creditor_account_routing_number=${creditor_routing_number}</arg>
<arg>creditor_account_type=${creditor_account_type}</arg>
<arg>refunded_amount=0</arg>
</arguments>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=datetime</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:47.512" level="INFO">${date} = 2021-03-22 02:37:47.511625</msg>
<status status="PASS" starttime="20210322 02:37:47.511" endtime="20210322 02:37:47.512"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>exclude_millis=yes</arg>
<arg>result_format=%Y-%m-%d</arg>
<arg>date_format=%d-%m-%Y</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210322 02:37:47.513" level="INFO">${date} = 2021-03-22</msg>
<status status="PASS" starttime="20210322 02:37:47.512" endtime="20210322 02:37:47.513"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["marketplace_id"]}</arg>
<arg>${marketplace_external_key}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.513" endtime="20210322 02:37:47.514"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["status"]}</arg>
<arg>${status_pix_payments}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.515" endtime="20210322 02:37:47.515"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["end_to_end_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.516" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:47.516" endtime="20210322 02:37:47.516"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response.json()["message_id"]}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.517" level="INFO">Length is 32</msg>
<status status="PASS" starttime="20210322 02:37:47.516" endtime="20210322 02:37:47.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.json()["amount"]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20210322 02:37:47.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210322 02:37:47.517" endtime="20210322 02:37:47.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["description"]}</arg>
<arg>${pix_description}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.518" endtime="20210322 02:37:47.519"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["national_registration"]}</arg>
<arg>${debitor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.519" endtime="20210322 02:37:47.520"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["name"]}</arg>
<arg>${debitor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.520" endtime="20210322 02:37:47.521"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["type"]}</arg>
<arg>${debitor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.521" endtime="20210322 02:37:47.522"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["holder_id"]}</arg>
<arg>${debitor_holder_id}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.522" endtime="20210322 02:37:47.523"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["code"]}</arg>
<arg>${debtor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.523" endtime="20210322 02:37:47.524"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["psp"]["name"]}</arg>
<arg>${debtor_account_psp_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.524" endtime="20210322 02:37:47.524"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["digital_account_id"]}</arg>
<arg>${debtor_digital_account}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.525" endtime="20210322 02:37:47.525"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["number"]}</arg>
<arg>${account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.525" endtime="20210322 02:37:47.526"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["routing_number"]}</arg>
<arg>0${debtor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.526" endtime="20210322 02:37:47.527"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["debtor"]["account"]["type"]}</arg>
<arg>${debtor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.527" endtime="20210322 02:37:47.528"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["national_registration"]}</arg>
<arg>${creditor_national_registration}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.528" endtime="20210322 02:37:47.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["name"]}</arg>
<arg>${creditor_name}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.529" endtime="20210322 02:37:47.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["type"]}</arg>
<arg>${creditor_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.530" endtime="20210322 02:37:47.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["psp"]["code"]}</arg>
<arg>${creditor_account_psp_code}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.530" endtime="20210322 02:37:47.531"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["number"]}</arg>
<arg>${creditor_account_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.531" endtime="20210322 02:37:47.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["routing_number"]}</arg>
<arg>${creditor_account_routing_number}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.532" endtime="20210322 02:37:47.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${response.json()["creditor"]["account"]["type"]}</arg>
<arg>${creditor_account_type}</arg>
</arguments>
<status status="PASS" starttime="20210322 02:37:47.533" endtime="20210322 02:37:47.533"></status>
</kw>
<status status="PASS" starttime="20210322 02:37:47.509" endtime="20210322 02:37:47.533"></status>
</kw>
<doc>Envio de PIX com sucesso para uma conta Iti, a partir de um Holder Business</doc>
<status status="PASS" starttime="20210322 02:37:39.798" endtime="20210322 02:37:47.534" critical="yes"></status>
</test>
<doc>Funcionalidade: Criar Chave de EndereÃ§amento
Eu, como um Holder, portador de uma conta ativa em Banking
Desejo criar uma pagamento PIX</doc>
<status status="FAIL" starttime="20210322 02:37:30.911" endtime="20210322 02:37:47.534"></status>
</suite>
<status status="FAIL" starttime="20210322 02:37:00.287" endtime="20210322 02:37:47.537"></status>
</suite>
<status status="FAIL" starttime="20210322 02:37:00.257" endtime="20210322 02:37:47.539"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="2">Critical Tests</stat>
<stat pass="2" fail="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="2" id="s1" name="Pix-Payments">Pix-Payments</stat>
<stat pass="2" fail="2" id="s1-s1" name="Envio">Pix-Payments.Envio</stat>
<stat pass="1" fail="1" id="s1-s1-s1" name="Confirmar Pagamento PIX">Pix-Payments.Envio.Confirmar Pagamento PIX</stat>
<stat pass="1" fail="1" id="s1-s1-s2" name="Criar Pagamento PIX">Pix-Payments.Envio.Criar Pagamento PIX</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
